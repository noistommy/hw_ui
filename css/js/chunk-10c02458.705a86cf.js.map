{"version":3,"sources":["webpack:///./src/components/Charts/ChartsView.vue","webpack:///./src/components/Charts/XYCharts.vue","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/util/Type.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/util/Array.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/util/Disposer.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/util/EventDispatcher.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/util/List.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/util/Children.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/util/Percent.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/util/Object.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/util/Utils.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/util/Color.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/util/Animation.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/util/Math.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/util/Ease.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/util/States.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/Registry.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/util/Order.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/util/Entity.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/util/Template.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/render/Sprite.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/render/patterns/Pattern.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/render/patterns/PicturePattern.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/render/backend/Renderer.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/render/Graphics.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/render/Rectangle.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/render/Layout.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/render/HorizontalLayout.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/render/VerticalLayout.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/render/GridLayout.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/util/TextFormatter.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/util/PopulateString.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/render/Container.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/render/Text.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/util/ResizeSensor.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/util/InterfaceColors.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/render/Label.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/render/PointedRectangle.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/render/Tooltip.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/util/NumberFormatter.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/util/Timezone.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/util/DateFormatter.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/util/DurationFormatter.js","webpack:///./node_modules/@amcharts/amcharts5/locales/en.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/util/Language.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/Theme.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/themes/DefaultTheme.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/util/Matrix.js","webpack:///./node_modules/svg-arc-to-cubic-bezier/modules/index.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/render/backend/CanvasRenderer.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/Root.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/render/Circle.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/render/Bullet.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/util/ColorSet.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/util/Time.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/charts/xy/XYChartDefaultTheme.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/render/Chart.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/render/SerialChart.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/render/RoundedRectangle.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/render/Button.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/charts/xy/XYChart.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/util/Data.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/render/Component.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/Axis.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/ValueAxis.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/util/Draw.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/render/Line.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/render/Tick.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisTick.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/Grid.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisLabel.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisRenderer.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisRendererY.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/DateAxis.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisRendererX.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/render/Series.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/charts/xy/series/XYSeries.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/charts/xy/series/BaseColumnSeries.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/charts/xy/series/ColumnSeries.js","webpack:///./node_modules/d3-shape/src/array.js","webpack:///./node_modules/d3-shape/src/constant.js","webpack:///./node_modules/d3-shape/src/curve/linear.js","webpack:///./node_modules/d3-path/src/path.js","webpack:///./node_modules/d3-shape/src/path.js","webpack:///./node_modules/d3-shape/src/point.js","webpack:///./node_modules/d3-shape/src/line.js","webpack:///./node_modules/d3-shape/src/area.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/charts/xy/series/LineSeries.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/render/MonotoneXTension.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/charts/xy/series/SmoothedXLineSeries.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/charts/xy/XYCursor.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/themes/AnimatedTheme.js","webpack:///./node_modules/@amcharts/amcharts5/themes/Animated.js","webpack:///src/components/Charts/XYCharts.vue","webpack:///./src/components/Charts/XYCharts.vue?0a12","webpack:///./src/components/Charts/XYCharts.vue?f16b","webpack:///./src/components/Charts/PieCharts.vue","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/render/Legend.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/charts/percent/PercentDefaultTheme.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/charts/percent/PercentChart.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/charts/pie/PieChart.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/charts/percent/PercentSeries.js","webpack:///./node_modules/d3-shape/src/math.js","webpack:///./node_modules/d3-shape/src/arc.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/render/Slice.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/render/RadialText.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/core/render/RadialLabel.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/charts/pie/PieSeries.js","webpack:///src/components/Charts/PieCharts.vue","webpack:///./src/components/Charts/PieCharts.vue?40f3","webpack:///./src/components/Charts/PieCharts.vue?8ae0","webpack:///./src/components/Charts/GaugeCharts.vue","webpack:///./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/CategoryAxis.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/charts/radar/RadarDefaultTheme.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/charts/radar/RadarChart.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/charts/xy/axes/AxisLabelRadial.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/charts/radar/AxisRendererCircular.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/charts/radar/AxisRendererRadial.js","webpack:///./node_modules/@amcharts/amcharts5/.internal/charts/radar/RadarColumnSeries.js","webpack:///src/components/Charts/GaugeCharts.vue","webpack:///./src/components/Charts/GaugeCharts.vue?6c68","webpack:///./src/components/Charts/GaugeCharts.vue?c314","webpack:///src/components/Charts/ChartsView.vue","webpack:///./src/components/Charts/ChartsView.vue?aa72","webpack:///./src/components/Charts/ChartsView.vue?5edc","webpack:///./src/components/Charts/ChartsView.vue?77c9"],"names":["render","_vm","this","_c","_self","staticClass","attrs","container","container_s","staticRenderFns","ref","style","containerSize","value","Number","getType","toString","call","toNumber","isNumber","converted","isString","replace","toDate","isDate","Date","num","numberToString","Infinity","negative","Math","abs","res","parsed","exec","digits","decimals","undefined","exponent","zeros","repeat","length","slice","string","amount","Array","join","isObject","PLACEHOLDER","PLACEHOLDER2","indexOf","array","i","any","test","map","fn","output","each","eachReverse","eachContinue","element","found","index","splice","removeFirst","pushOne","push","copy","insertIndex","removeIndex","findIndex","matches","findIndexReverse","find","findReverse","getSortedIndex","ordering","start","end","pivot","order","getFirstSortedIndex","keepIf","keep","DisposerClass","Object","defineProperty","enumerable","configurable","writable","_disposed","_dispose","Disposer","dispose","super","arguments","_disposers","x","disposers","CounterDisposer","_counter","_listeners","_killed","_disabled","_iterating","_enabled","a","disposer","type","killed","listener","Error","once","callback","context","_eachListener","info","hasListenersByType","count","_removeListener","event","_shouldDispatch","dispatch","shouldClone","_removeExistingListener","_on","_type","source","onAll","on","checkBounds","len","initial","_values","newValue","events","isEnabled","target","oldValue","oldIndex","newIndex","oldValues","_onSetIndex","_onInsertIndex","b","value_a","value_b","_onRemoveIndex","toIndex","_onMoveIndex","_onPush","values","pushAll","newArray","old","_onClear","setAll","Symbol","iterator","f","autoDispose","ListTemplate","template","make","_container","_events","change","_onRemoved","_onInserted","child","_setParent","childrenDisplay","_childrenDisplay","addChild","_display","addChildAt","removeChild","markDirtyBounds","markDirty","Percent","percent","_value","min","max","p100","p50","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","create","keys","object","keysOrdered","sort","assign","forEach","key","hasKey","hasOwnProperty","removeElement","el","parentNode","addEventListener","dom","options","removeEventListener","onZoom","window","_ev","supports","cap","getPointerId","id","pointerId","document","activeElement","body","blur","input","createElement","position","top","left","appendChild","focus","getRendererEvent","isTouchEvent","ev","Touch","PointerEvent","pointerType","MouseEvent","match","setStyle","property","getStyle","contains","cursor","host","isLocalEvent","root","setInteractive","interactive","pointerEvents","iOS","navigator","vendor","getSafeResolution","relativeToValue","full","decimalPlaces","number","padString","char","trimLeft","text","trimRight","trim","getFormat","format","toLowerCase","hints","cleanFormat","stripTags","escapeForRgex","getYearDay","date","utc","getFullYear","diff","getTime","getTimezoneOffset","oneDay","floor","getWeek","_utc","d","UTC","getMonth","getDate","day","getUTCDay","setUTCDate","getUTCDate","firstDay","getUTCFullYear","ceil","getWeekYear","getMonthWeek","firstWeek","currentWeek","getDayFromWeek","week","year","weekday","setUTCFullYear","getDay","get12Hours","hours","base","getTimeZone","long","savings","wotz","toLocaleString","wtz","timeZoneName","substr","timezone","utcDate","timeZone","tzDate","capitalizeFirst","charAt","toUpperCase","hslToRgb","color","r","g","h","s","l","hue2rgb","p","q","t","round","rgbToHsl","lighten","rgb","getLightnessStep","brighten","isLight","saturate","saturation","hsl","alternativeColor","lightAlternative","darkAlternative","light","dark","mergeTags","tags1","tags2","filter","self","sameBounds","right","bottom","string2hex","parseInt","rgba2hex","hex","val","fromAny","_hex","alpha","fromRGB","toCSSHex","fromString","fromCSS","fromHex","from","to","mode","fromHSL","toHSL","range","waitForAnimations","animations","promises","_","animation","waitForStop","all","defaultInterpolate","percentInterpolate","colorInterpolate","interpolate","getInterpolate","PI","RADIANS","DEGREES","precision","rounded","pow","fitToRange","angle","sin","cos","normalizeAngle","getArcBounds","cx","cy","startAngle","endAngle","radius","minX","MAX_VALUE","minY","maxX","maxY","bpoints","getArcPoint","fromAngle","toAngle","pt","y","arc","mergeBounds","bounds","bound","linear","cubic","out","ease","tau","amplitude","period","asin","entity","settings","_entity","_settings","fallback","_userSettings","setRaw","set","seen","defaultState","states","lookup","_eachSetting","get","duration","stateAnimationDuration","easing","stateAnimationEasing","animate","States","name","_states","state","newState","_applyState","applyAnimate","_applyStateAnimated","Registry","registry","compare","compareArray","leftLength","rightLength","compareNumber","callbacks","_callbacks","_markDirtyKey","loops","startingTime","_animation","_from","_to","_duration","_easing","_loops","_interpolate","_oldTime","_playing","_stopped","_startAnimation","_time","_reject","stopped","currentTime","counter","_userProperties","isDisposed","playing","_animatingSettings","_stopAnimation","_run","percentage","_checkEnded","_reset","_set","_animatingPrivateSettings","_stopAnimationPrivate","setPrivate","_setPrivate","_key","_settingEvents","_privateSettingEvents","getRaw","_prevSettings","_sendKeyEvent","_setRaw","stop","remove","_privateSettings","_prevPrivateSettings","_sendPrivateKeyEvent","_setPrivateRaw","_markDirtyPrivateKey","_animationTime","getPrivate","isReal","templates","_createEvents","_root","_internalTemplates","_registerId","_template","_afterNew","_checkDirty","shouldApply","_setObjectTemplate","_applyTemplates","_setDefaults","_applyThemes","constructor","classNames","className","_dirty","_dirtyPrivate","_disposerProperties","_removeObjectTemplate","_addDirtyEntity","_addAnimation","animationTime","_name","adapters","fold","_removeTemplateProperty","_userPrivateProperties","setPrivateRaw","_removeTemplatePrivateProperty","_findTemplateByKey","_findTemplateByPrivateKey","removePrivate","_rootContainer","other","_eachTemplate","_apply","_templateDisposers","privateSettings","_runSetup","setup","_findStaticTemplate","_templates","_disposeTemplates","_applyTemplate","_findTemplate","isConnected","defaults","themes","themeTags","Set","tags","tag","add","_walkParents","_defaultThemes","theme","concat","_removeTemplates","allRules","rules","_lookupRules","rule","every","has","isDirty","prevId","entitiesById","delay","setTimeout","removeDispose","clearTimeout","hasTag","locale","rest","language","translate","_stateChanged","_entities","_setTemplateProperty","_setTemplatePrivateProperty","onPrivate","copyFrom","_applyStateByKey","sprite","_sprite","originalEvent","point","simulated","native","_rendererDisposers","increment","rendererEvent","RENDERER_EVENTS","_onRenderer","_dispatchParents","parent","dispatchParents","isDragging","_hasDown","_hasMoved","_makePointerEvent","_addPercentagePositionChildren","markDirtyPosition","_templateField","field","dataItem","dataContext","new","_removeTemplateField","oldDataItem","_dataItem","_processTemplateField","eventType","newDataItem","_setDataItem","_parent","_percentageSizeChildren","_percentagePositionChildren","_addDirtyPosition","_localBounds","centerX","centerY","_beforeChanged","_handleStates","previous","tooltip","setLayer","markDirtyLayer","tooltipMoveDp","_tooltipMoveDp","tooltipPointerDp","_tooltipPointerDp","showTooltip","_statesHandled","isHidden","markDirtyAccessibility","_changed","display","draggable","_dragDp","dragStart","dragMove","dragStop","cancelTouch","tooltipText","tooltipHTML","showTooltipOn","_tooltipDp","hideTooltip","toggleKey","_toggleDp","_isDragging","scale","updatePivotPoint","isPrivateDirty","visible","_addPercentageSizeChildren","_prevWidth","_sizeDirty","_updateSize","wheelable","_registerTabindexOrder","_unregisterTabindexOrder","cursorOverStyle","_focusDp","exportable","_hoverDp","_handleOver","_handleOut","_isDown","_handleUp","_handleDown","inactive","_dragEvent","stopParentDispatch","_dragPoint","isHover","_downPoint","_downPoints","downPoint","dragEvent","dragPoint","hypot","getLocalBounds","depth","_addDirtyBounds","isMeasured","invalidateBounds","isFocus","_invalidateAccessibility","oldBounds","_adjustedLocalBounds","newBounds","_getBounds","_fixMinBounds","getAdjustedBounds","minWidth","minHeight","privateWidth","privateHeight","children","removeValue","_clearDirty","getTooltip","tooltipPosition","tooltipTarget","_setMatrix","toGlobal","_getTooltipPoint","label","width","height","markDirtyText","promise","show","timeout","hide","dx","dy","_x","xx","yy","innerWidth","_y","innerHeight","_removeParent","_removeFocusElement","localBounds","p0","p1","p2","p3","success","_error","_isShowing","_isHidden","_isHiding","_onShow","_onHide","hovering","focused","isVisibleDeep","isVisible","opacity","compositeOpacity","maxWidth","w","maxHeight","_walkParent","updateChildren","prevParent","numberFormatter","dateFormatter","durationFormatter","toLocal","_getDownPointId","moveValue","_renderer","makeGraphics","_afterNewApplyThemes","_pattern","_clear","repetition","fill","fillOpacity","clear","_backgroundDisplay","beginFill","drawRect","endFill","_draw","createPattern","_load","image","_image","patternWidth","patternHeight","fit","centered","src","Image","decode","catch","BlendMode","crisp","gradient","gradientTarget","strokeDasharray","setLineDash","strokeDashoffset","setLineDashOffset","blendMode","NORMAL","draw","svgPath","_afterChanged","fillGradient","fillPattern","stroke","strokeGradient","strokePattern","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","shadowOpacity","shadow","changed","pattern","stops","colorInherited","opacityInherited","getFill","strokeOpacity","strokeWidth","resolution","lineJoin","lineStyle","endStroke","eachChildren","paddingLeft","availableWidth","totalPercent","childWidth","prevX","adjustedLocalBounds","marginLeft","marginRight","paddingTop","availableHeight","childHeight","prevY","marginTop","marginBottom","_setRawDefault","paddingRight","minCellWidth","maxCellWidth","columnCount","columnWidths","getColumnWidths","column","maxColumnHeight","totalWidth","prefix","RegExp","quotedBlocks","noFormatting","escape","chunks","split","chunk","chunks2","i2","chunk2","cleanUp","unescape","isImage","fontWeight","textDecoration","populateString","getTagValue","tagName","parts","reg","prop","dateFields","getDateFormatter","numericFields","getNumberFormatter","durationFields","getDurationFormatter","method","params","matches2","reg2","getTagValueFromObject","component","getCustomDataValue","customData","current","formatApplied","part","tmp","numberValue","dateValue","durationValue","encodeURIComponent","formatParts","formatterType","makeContainer","allChildren","_removeHTMLContent","interactiveChildren","_prevHeight","layout","contentMask","_contentMask","mask","updateBackground","background","verticalScrollbar","_contentHeight","bg","pWidth","pHeight","horizontal","vertical","m","paddingBottom","childBounds","childX","childY","cl","cr","ct","cb","_contentWidth","updateContainer","_updateBounds","_addDirtyParent","html","_setHTMLContent","_positionHTMLElement","startGrip","endGrip","interfaceColors","_vsbd0","wheelEvent","preventDefault","shiftY","deltaY","_vsbd1","walkChildren","updated","makeTextStyle","makeText","textStyle","_getText","updateTooltip","tooltipElement","_removeTooltipElement","wordWrapWidth","oversizedBehavior","breakWords","ellipsis","ignoreFormatting","minScale","_textStyles","styleName","_observer","ResizeObserver","entries","entry","_targets","observe","box","unobserve","_timer","lastTime","loop","now","newSize","getBoundingClientRect","size","requestAnimationFrame","cancelAnimationFrame","observer","makeSensor","_sensor","_element","_listener","addTarget","removeTarget","_text","_makeText","_textKeys","propValue","_setMaxDimentions","_updateChildren","textAlign","rotation","bwh","xtl","ytl","xtr","ytr","xbr","ybr","xbl","ybl","d1","d2","moveTo","stemX","lineTo","arcTo","stemY","closePath","_label","_updateBackground","_updateTextColor","tooltipContainer","_tooltips","labelText","labelHTML","updateBackgroundColor","keephover","_keepHoverDp","hover","unhover","_fillDp","_strokeDp","_labelDp","alternative","cw","ch","parentW","parentH","layerMargin","_w","_h","pointTo","pointerOrientation","pointerLength","bgStrokeSizeY","bgStrokeSizeX","pointerX","pointerY","boundsW","boundsH","_fx","_fy","animationDuration","animationEasing","_setDefault","bns","sns","bs","_t","suffix","formatted","Intl","NumberFormat","details","parseFormat","positive","zero","mod","active","applyFormat","thousandSeparator","translateEmpty","decimalSeparator","_part","item","partFormat","mods","modSpacing","thousands","passive","interval","pop","applyPrefix","ol","parseFloat","toPrecision","exp","toExponential","ints","ip","intsr","reverse","c","unshift","separator","decs","prefixes","force","newvalue","applied","k","parseDate","month","hour","minute","second","millisecond","formatToParts","toUTCDate","Timezone","DateTimeFormat","hour12","fractionalSecondDigits","_dtf","offset","offsetUTC","userOffset","setUTCMinutes","getUTCMinutes","newUserOffset","dtf","locales","convertLocal","fullYear","minutes","seconds","milliseconds","timestamp","getUTCMonth","getUTCHours","getUTCSeconds","getUTCMilliseconds","getHours","getMinutes","getSeconds","getMilliseconds","_getMonth","_getShortMonth","translateFunc","_getShortWeekday","_getWeekday","firstDayOfWeek","tz","tzh","tzm","toISOString","toUTCString","dateFormat","_months","_shortMonths","_weekdays","_shortWeekdays","parsedIndexes","resValues","indexAdjust","year3","year2","year1","getStringList","monthLong","monthShort","yearDay","weekdayLong","weekdayShort","am","hour12Base1","hourBase0","hour12Base0","hourBase1","millisecondDigits","zone","iso","regex","resolveMonth","resolveShortMonth","isAm","ts","resolveTimezoneOffset","dir","originalOffset","isDefault","translateAll","list","dmillisecond","dsecond","dminute","dhour","dday","dweek","dmonth","dyear","asecond","aminute","ahour","aday","aweek","amonth","ayear","baseUnit","dirs","absolute","_unitAliases","tstamp","toTimeStamp","unit","_toTimeUnit","_getUnitValue","code","maxValue","maxUnit","getValueUnit","currentUnit","ms","_getUnitValues","timeUnit","en","prompt","translation","localeTarget","setupDefaultRules","themeClass","_rules","ruleRaw","setColor","ic","horizontalLayout","verticalLayout","bind","primaryButton","primaryButtonHover","primaryButtonDown","primaryButtonActive","primaryButtonText","primaryButtonStroke","secondaryButton","secondaryButtonHover","secondaryButtonDown","secondaryButtonActive","secondaryButtonText","secondaryButtonStroke","grid","alternativeBackground","alternativeText","disabled","passOptions","hue","lightness","colors","reuse","startIndex","interpolationDuration","interpolationEasing","tooltipX","tooltipY","setStateOnChildren","gap","colorOpacity","checkered","fillField","strokeField","nameField","layer","clickTarget","ariaChecked","focusable","ariaLabel","role","cornerRadiusBL","cornerRadiusTL","cornerRadiusBR","cornerRadiusTR","populateText","stepCount","fontFamily","fontSize","textType","inside","baseRadius","orientation","pointerBaseWidth","cornerRadius","shiftRadius","dRadius","dInnerRadius","locationX","locationY","getFillFromSprite","getStrokeFromSprite","autoTextColor","ariaValueMin","ariaValueMax","ariaLive","spikes","innerRadius","rotationStep","Matrix","tx","ty","pivotX","pivotY","origin","matrix","a1","b1","c1","tx1","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","err","isArray","TypeError","TAU","mapToEllipse","_ref","rx","ry","cosphi","sinphi","centerx","centery","xp","yp","approxUnitArc","ang1","ang2","tan","x1","y1","x2","y2","vectorAngle","ux","uy","vx","vy","sign","dot","acos","getArcCenter","px","py","largeArcFlag","sweepFlag","pxp","pyp","rxsq","rysq","pxpsq","pypsq","radicant","sqrt","centerxp","centeryp","vx1","vy1","vx2","vy2","arcToBezier","_ref2","_ref2$xAxisRotation","xAxisRotation","_ref2$largeArcFlag","_ref2$sweepFlag","curves","lambda","_getArcCenter","_getArcCenter2","ratio","segments","curve","_mapToEllipse","_mapToEllipse2","_mapToEllipse3","checkArgs","actual","expected","checkMinArgs","checkEvenArgs","splitArcFlags","args","flag","assertBinary","distributeId","eachTargets","hitTarget","onPointerEvent","touches","changedTouches","isTainted","canvas","getContext","willReadFrequently","drawImage","getImageData","console","warn","clearCanvas","view","CanvasPivot","renderer","_removeObject","getLayer","dirty","_layer","defaultLayer","margin","_ghostLayer","setMargin","layers","registerChildLayer","resizeLayer","resizeGhost","_bounds","_colorId","paintId","_forceInteractive","_isInteractive","_matrix","applyInverse","_uMatrix","setTransform","bn","_addBounds","getLocalMatrix","_addEvent","_localMatrix","prepend","_transformMargin","_transform","parentLayer","_omitTainted","ghostLayer","ghostContext","save","_transformLayer","_runPath","clip","globalAlpha","compoundAlpha","_isInteractiveMask","_render","restore","tainted","_hovering","_dragging","some","tapToActivate","_touchActive","shouldCancelTouch","_children","_childLayers","deep","setPoint","Op","_context","_forceColor","BeginFill","forceColor","fillStyle","EndFill","clearShadow","EndStroke","LineStyle","strokeStyle","lineWidth","LineDash","dash","LineDashOffset","dashOffset","lineDashOffset","DrawRect","rect","DrawCircle","DrawEllipse","radiusX","radiusY","ellipse","anticlockwise","arcBounds","ArcTo","LineTo","MoveTo","ClosePath","BezierCurveTo","cpX","cpY","cpX2","cpY2","toX","toY","bezierCurveTo","QuadraticCurveTo","quadraticCurveTo","Shadow","offsetX","offsetY","GraphicsImage","_operations","op","_fillAlpha","_pushOp","toCSS","_hasShadows","_strokeAlpha","path","cpx","cpy","qcpx","qcpy","SEGMENTS_REGEXP","ARGS_REGEXP","relative","beginPath","layerDirty","globalCompositeOperation","_getColorId","colorize","addBounds","_textInfo","direction","textBaseline","ignoreGhost","ignoreFontWeight","fontStyle","_getFontStyle","font","_shared","style2","fontVariant","_measure","_textVisible","_prerender","line","_index","textChunks","fillText","thickness","getTextStyle","rtl","truncate","wrap","_ignoreFontWeight","refText","lines","currentStyle","styleRestored","lineInfo","ascent","metrics","_measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","currentFormat","currentFill","currentChunkWidth","currentVerticalAlign","currentDecoration","skipFurtherText","firstTextChunk","leftoverChunks","verticalAlign","chunkWidth","actualBoundingBoxLeft","actualBoundingBoxRight","ellipsisMetrics","ellipsisWidth","excessWidth","_truncateText","tmpText","leftBoundMod","rightBoundMod","boundsMod","chunkHeight","lineHeight","currentChunkOffset","baselineRatio","_fitRatio","_originalScale","maxW","maxH","fallbackBreakWords","measureText","fakeMetrics","div","innerText","visibility","bbox","fontBoundingBoxAscent","fontBoundingBoxDescent","_renderCircular","deltaAngle","inward","align","kerning","clockwise","shouldReverse","_textReversed","maxAngle","midAngle","textHeight","lineStartAngle","rotate","angleShift","charWidth","_measureCircular","chars","CanvasImage","_imageMask","naturalWidth","naturalHeight","_getMask","imageSmoothingEnabled","fillRect","originalPoint","identifier","_patternCanvas","devicePixelRatio","_layerDom","exportableView","_touchActiveTimeout","_delayTouchDeactivate","prevent","obj","tapToActivateTimeout","createLinearGradient","radius1","radius2","createRadialGradient","graphics","_patternContext","clearRect","renderDetached","resize","_clientWidth","_clientHeight","_width","_height","CanvasLayer","existingLayer","getLayerByOrder","createDetachedLayer","layerIndex","insertBefore","_dirtyLayers","_lastPointerMoveEvent","_dispatchGlobalMousemove","_colorMap","DOMRect","adjustPoint","clientX","clientY","_adjustBoundingBox","pixel","data","colorId","hit","dispatching","cleanup","disposed","interactionsEnabled","_withEvents","dispatched","button","getEvent","_getHitTarget","dragged","_mousedown","_dispatchEvent","delete","_replacedCursorStyle","_dispatchEventAll","clickevent","timer","_makeSharedEvent","_onPointerEvent","mouseup","_dispatchGlobalMouseup","pointercancel","mousedown","_dispatchMousedown","mousemove","_dispatchDragMove","_dispatchDragEnd","_dispatchDoubleClick","_dispatchWheel","_initEvent","maxScale","maintainPixelRatio","canvases","forceRender","canvasWidth","canvasHeight","needRerender","exportableContext","clientWidth","clientHeight","rAF","fps","accessible","_a11yD","useSafeResolution","HTMLElement","getElementById","rootElements","inner","tooltipContainerBounds","_tooltipContainerSettings","_inner","_updateComputedStyles","_init","childNodes","_initResizeSensor","_logo","offsetWidth","offsetHeight","logo","open","_handleLogo","rootContainer","htmlElementContainer","_htmlElementContainer","overflow","readerAlertElement","setAttribute","zIndex","_readerAlertElement","focusElementContainer","_focusElementContainer","tooltipElementContainer","_tooltipElementContainer","keyCode","_isShift","focusedSprite","_focusedSprite","dragOffsetX","dragOffsetY","downEvent","_keyboardDragPoint","moveEvent","upEvent","group","items","_tabindexes","lastIndex","_startTicker","setThemes","_addTooltip","_hasLicense","_showBranding","_resizeSensorDisposer","autoResize","_focusElementDirty","_updateCurrentFocus","_tickers","_animations","_runAnimation","allParents","_isDirtyParents","_dirtyParents","uid","_prepareChildren","objects","_isDirty","depths","_dirtyBounds","dirtyPositions","_dirtyPositions","_updatePosition","_updateTick","_checkComputedStyles","_runTickers","_runAnimations","_runDirties","_positionHTMLElements","_renderFrame","_ticker","performance","_runTicker","markDirtyGlobal","_isDisposed","innerHTML","tooltipContainerSettings","_tooltip","_invalidateTabindexes","aindex","bindex","groups","_moveFocusElement","_makeFocusElement","_decorateFocusElement","_positionFocusElement","focusElement","getAttribute","tabindex","removeAttribute","ariaOrientation","ariaValueNow","ariaValueText","ariaControls","tabIndex","_handleFocus","_handleBlur","append","globalBounds","_focusNext","focusableElements","querySelectorAll","_makeTooltipElement","parentElement","styles","getComputedStyle","fontHash","_fontHash","_invalidateLabelBounds","licenses","debugGhostView","htmlElement","boxSizing","_htmlEnabledContainers","visualSettings","setting","_makeHTMLElement","drawCircle","series","_positionBullet","reset","pass","generateColors","getIndex","currentStep","sleep","timeUnitDurations","getNextUnit","getDuration","getIntervalDuration","getDateIntervalDuration","firstDateOfWeek","firstTime","checkChange","timeOne","timeTwo","dateOne","dateTwo","timeZoneOffset1","timeZoneOffset2","nextUnit","firstDate","timeZoneOffset","difference","unitCount","setTime","setUTCHours","setUTCSeconds","setUTCMilliseconds","setUTCMonth","wday","weekDay","newTimeZoneOffset","isNaN","tzoffset","parsedDate","newOffset","chooseInterval","gridCount","intervals","gridInterval","intervalDuration","panX","panY","wheelStep","arrangeTooltips","pinchZoomX","pinchZoomY","legendLabelText","minGridDistance","minPosition","maxPosition","behavior","snapToSeriesBy","moveThreshold","minZoomCount","maxZoomCount","maxZoomFactor","maxDeviation","snapTooltip","tooltipLocation","zoomX","zoomY","fixAxisSize","location","multiLocation","opposite","inversed","cellStartLocation","cellEndLocation","startLocation","endLocation","fillRule","axisFill","gridIntervals","dateFormats","periodChangeDateFormats","tooltipDateFormats","markUnitChange","strictMinMax","groupData","groupCount","groupIntervals","axis","endValue","baseInterval","baseValue","logarithmic","autoZoom","maskBullets","stackToNegative","openValueXGrouped","openValueYGrouped","valueXGrouped","valueYGrouped","seriesTooltipTarget","adjustBulletPosition","clustered","connect","autoGapCount","tension","lowValueXGrouped","lowValueYGrouped","highValueXGrouped","highValueYGrouped","seriesContainer","_removeSeries","_processSeries","setIndex","chart","_placeBulletsContainer","_removeBulletsContainer","wSign","hSign","minSide","crtl","crtr","crbr","crbl","maxcr","icon","_disposeProperty","chartContainer","yAxesAndPlotContainer","maskContent","plotsContainer","plotContainer","topPlotContainer","xAxes","yAxes","zoomOutButton","zoomOut","_processAxis","bottomAxesContainer","leftAxesContainer","topGridContainer","bulletsContainer","_handlePlotDown","_handlePlotUp","_handlePlotMove","_maskGrid","_setUpTouch","gridContainer","xAxis","markDirtyExtremes","yAxis","snapToSeries","wheelX","wheelY","plotPoint","documentPointToRoot","shiftX","deltaX","wheelZoomPositionX","wheelZoomPositionY","fixPosition","newStart","newEnd","_handleWheelAnimation","zoom","delta","_getWheelSign","se","_fixWheel","_wheelDp","handleWheel","local","touchEvent","_downStartX","_downEndX","_downStartY","_downEndY","_panStart","_panEnd","_dispatchWheelAnimation","_isPanning","_movePoints","_handlePinch","scrollbarX","disableType","panStart","panEnd","enableType","scrollbarY","downPoints","movePoints","movePoint","downPoint0","downPoint1","movePoint0","movePoint1","downStartX","downEndX","downPos0","downPos1","movePos0","movePos1","initialDistance","currentDistance","sa","ea","downStartY","downEndY","cursorPoint","dataItems","isHiding","endIndex","tooltipDataItem","closestItem","minDistance","distance","showDataItemTooltip","handleMove","_colorize","_handleSetWheel","_setChart","_addCursor","_pushPropertyDisposer","_handleCursorSelectEnd","topAxesContainer","_handleScrollbar","grip","getTooltipText","rightAxesContainer","_handleZoomOut","colorSet","_setSoft","downPositionX","downPositionY","positionX","positionY","position0","toAxisPosition","position1","axes","priority","axisStart","axisEnd","zoomAnimation","updateScrollbar","_removeAxis","processChart","axisParent","gridParent","topGridParent","_axis","updateGrips","otherCharts","_otherCharts","global","chartPlotContainer","documentPoint","rootPointToDocument","chartRoot","hh","plotT","plotB","tooltips","closest","closestPoint","sum","_movePoint","maxTooltipDistance","maxTooltipDistanceBy","tooltipSeries","hidden","inPlot","_tooltipToLocal","average","prevBottom","processor","processRow","markDirtyValues","disposeDataItem","showDataItem","hideDataItem","_dataItems","incrementRef","_data","decrementRef","_updateFields","_mainDataItems","_markDirtyGroup","_dataChanged","_onDataClear","_makeDataItem","processDataItem","properties","_afterDataChange","valueFields","_valueFields","_valueFieldsF","fieldKey","workingKey","fields","_fields","_fieldsF","makeDataItem","_valuesDirty","inited","_dataGrouped","labelsContainer","axisHeader","axisRanges","_processAxisRange","processAxis","ghostLabel","makeLabel","disable","sAnimation","_sAnimation","eAnimation","_eAnimation","maxZoomFactorReal","minZoomFactor","_handleAxisSelection","_markDirty","_series","_createAssets","_rangesDirty","_prepareDataItem","above","_bullets","axisRange","_seriesAxisRanges","_updateCursor","_start","_end","_inversed","_axisLength","axisLength","_updateLC","rendererTags","addTag","updateTooltipBounds","_updateTooltipBounds","axisHeadersContainer","markDirtySize","_toggleDataItem","tick","bullet","makeGrid","makeTick","makeAxisFill","_processBullet","axisBullet","_updateChartLayout","_updatePositions","labels","ticks","axisFills","gWidth","updateLabel","_cursorPosition","_snapToSeries","getSeriesItem","updateLegendMarker","updateLegendValue","roundAxisPosition","_updateTooltipText","positionTooltip","_location","coordinate","_nextItem","_autoGapCount","_fieldName","axisDataItem","_dirtyExtremes","_dirtySelectionExtremes","previousValue","syncWithAxis","_syncDp","_getMinMax","_getSelectionMinMax","_groupData","_handleRangeChange","_prepareAxisItems","_updateAxisRanges","_baseValue","numberFormat","formatter","selectionMin","selectionMax","differencePower","minLog","_minLogAdjusted","log","LOG10E","_formatText","stepPower","decCount","j","_markDirtyAxes","_updateGhost","valueToPosition","endPosition","fillEndPosition","updateGrid","removeTag","updateTick","updateFill","updateBullet","positionToValue","minMaxStep","_adjustMinMax","stepDecimalPlaces","E","treatZeroAs","positionToCoordinate","_cellLocation","axisLocation","getDataItemPositionX","stackToItem","getStackedXValueWorking","getDataItemPositionY","getStackedYValueWorking","fixSmallStep","vc","fieldWorking","total","minDefined","maxDefined","extraMin","extraMax","selectionStrictMinMax","seriesMin","seriesMax","outOfSelection","isShowing","_minReal","_maxReal","_deltaMinMax","minMaxStep2","selectionMinReal","selectionMaxReal","_syncAxes","LN10","valueToFinalPosition","minDiff","initialMin","initialMax","minAdapted","maxAdapted","_fixMin","_fixMax","_getDelta","strictMinMaxSelection","strict","_fixZoomFactor","_saveMinMax","animatePrivate","power","_min","_max","strictMode","extra","stepDivisor","maxPrecision","ceiledStep","maxCount","minCount","extraDecimals","oldDiff","fieldName","syncMin","syncMax","syncStep","currentCount","synced","omin","omax","ostep","_checkSync","segmentedLine","firstGroup","firstPoint","points","_new","thumb","_handleThumbDown","_handleThumbUp","_handleThumbMove","pan","_thumbDownPoint","_downStart","_downEnd","_event","downStart","downEnd","_getPan","_point1","_point2","updatedStart","updatedEnd","gridTemplate","point1","point2","axisChildren","_markDirtyRedraw","toggleVisibility","bulletPosition","previousBullet","previousSprite","y0","fillDrawMethod","_positionTooltip","_lc","_ls","_setBaseInterval","_baseDuration","baseMainDuration","groupInterval","_groupSeriesData","mainDataSetId","setDataSet","_seriesDataGrouped","baseDuration","_dataSets","baseAxis","_valueYFields","_valueXFields","groupCallback","groupOriginals","previousTime","dataSetId","groupFieldValues","workingFields","prevNewDataItem","firstItem","time","roundedTime","groupKey","currentValue","_dataSetId","_groupingCalculated","_intervalMax","_intervalMin","modifiedDifference","getGroupInterval","newId","endIndex2","firstDataItem","lastDataItem","lastDate","_strictMode","_intervalDuration","nextGridUnit","formats","_getM","startTime","endTime","_date","close","_updateDates","cellLocation","openValue","closeValue","NaN","diValue","first","nextItem","value1","value2","zoomToValues","x0","bullets","_handleBullets","_shouldMakeBullet","bulletFunction","_makeBullet","_aggregatesCalculated","_selectionAggregatesCalculated","baseValueSeries","calculateAggregates","_dataProcessed","_calculateAggregates","_psi","_pei","markerRectangle","legendDataItem","_makeBullets","absSum","low","high","changePercent","changePrevious","changePreviousPercent","changeSelection","changeSelectionPercent","openKey","_getBase","minValue","dataField","neutral","propertyValue","customFunction","_hideBullets","_positionBullets","_bullet","_super","realDuration","valueLabel","txt","_removeAxisRange","isType","_makeFieldNames","_valueXShowFields","_valueYShowFields","__valueXShowFields","__valueYShowFields","valueXFields","valueYFields","_xField","_yField","xName","xCapName","yName","yCapName","xLetter","yLetter","_xOpenField","_xLowField","_xHighField","_yOpenField","_yLowField","_yHighField","hiddenState","sequencedInterpolation","_handleMaskBullets","tooltipPositionX","tooltipFieldX","_tooltipFieldX","tooltipPositionY","tooltipFieldY","_tooltipFieldY","_fixVC","stacked","_stack","_unstack","getStackedXValue","getStackedYValue","processSeriesDataItem","_seriesValuesDirty","_markStakedDirtyStack","_stackDirty","minBulletDistance","_showBullets","_selectionProcessed","vcx","vcy","_calculateTotals","markDirtySelectionExtremes","processYSelectionDataItem","processXSelectionDataItem","selectionMinY","selectionMaxY","selectionMinX","selectionMaxX","mainContainerMask","_mainContainerMask","mainContainer","_makeRangeMask","seriesIndex","_couldStackTo","_stackDataItems","_reallyStackedTo","_stackedSeries","stackToItemKey","stackToSeries","stackValue","stackedToSeries","_axesDirty","getPoint","_shouldShowBullet","_positionX","_positionY","_handleDataSetChange","_markDataSetDirty","_sequencedShowHide","stackedSeries","_markDirtyStack","_skipped","itemLocationX","itemLocationY","xPos","_aLocationX0","_aLocationX1","yPos","_aLocationY0","_aLocationY1","_getTooltipTarget","_emptyDataItem","_position","resetExtremes","listTemplate","makeColumn","categoryAxis","valueAxis","_createGraphics","_ph","_pw","columnsTemplate","columns","clusterCount","xRenderer","yRenderer","cellLocationX0","cellLocationX1","cellLocationY0","cellLocationY1","_toggleColumn","_updateGraphics","_makeGraphics","graphicsArray","rangeGraphics","previousDataItem","xField","yField","valueX","valueY","xOpenField","yOpenField","openLocationX","openLocationY","xStart","xEnd","yStart","yEnd","fitW","fitH","stackToItemY","basePosition","stackToItemX","_updateSeriesGraphics","_applyGraphicsStates","ptl","pbr","tooltipPoint","dropFromOpen","riseFromOpen","dropFromPrevious","riseFromPrevious","previousClose","prototype","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","pi","epsilon","tauEpsilon","strings","n","appendRound","Path","_x0","_y0","_x1","_y1","_append","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","a0","ccw","da","withPath","shape","RangeError","defined","constant","buffer","defined0","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","strokes","fills","_fillGenerator","_strokeTemplate","_fillTemplate","legendStroke","_legendStroke","legendFill","_legendFill","curveFactory","_strokeGenerator","strokeTemplateField","fillTemplateField","strokeTemplateFound","fillTemplateFound","hasValues","_endIndex","_clearGraphics","_sindex","_dindex","_startSegment","dataItemIndex","currentEndIndex","makeFill","fillTemplate","originalTemplate","makeStroke","strokeTemplate","xOpenFieldValue","yOpenFieldValue","basePosX","basePosY","baseField","fillVisible","getOpen","o","_getPoints","shouldGap","_endLine","_drawStroke","_drawFill","_shouldInclude","iPoint","xPos0","yPos0","closeIPoint","prev","_previousPoint","pp0","pp1","pp2","pp3","_points","_firstPoint","segment","marker","disabledColor","MonotoneXTension","_tension","_t0","slope2","t1","slope3","curveMonotoneXTension","monotoneXTension","that","h0","h1","s0","s1","t0","_drawLines","lineX","_handleXLine","lineY","_handleYLine","_handleLineFocus","_handleLineBlur","_handleLineMove","getCellWidthPosition","alwaysShow","_tooltipX","_updateXLine","_tooltipY","_updateYLine","syncWith","_handleSyncWith","_getPoint","_toX","_toY","_handleMove","_handleCursorDown","_handleCursorUp","selection","rootPoint","_inPlot","_getPosition","lastPoint","_lastPoint","skipEvent","xyPos","userPositionX","userPositionY","xy","_handleCursorPosition","handleCursorShow","_updateLines","_updateSelection","handleCursorHide","Animated","props","required","mounted","am5xy","category","valueYField","valueXField","categoryXField","series1","series2","beforeDestroy","itemContainers","themeTagsSelf","markers","valueLabels","markerRectangles","itemContainer","makeItemContainer","makeMarker","useDefaultMarker","makeMarkerRectangle","createLegendMarker","makeValueLabel","clickContainer","_addClickEvents","targetA","targetB","indexA","indexB","hoverDataItem","unhoverDataItem","readerAlert","di","legendValueText","alignLabels","expandDistance","valueIs","wr","hr","innerBounds","mr","prevRadius","_maxRadius","seriesRadius","seriesInnerRadius","_makeSlices","_makeLabels","_makeTicks","slicesContainer","slices","ticksContainer","_lLabels","_rLabels","_hLabels","valueHigh","valueLow","valueWorking","percentTotal","_arrange","_arrangeDown","_arrangeUp","_arrangeLeft","_arrangeRight","_getNextDown","labelTop","_getNextUp","labelBottom","labelLeft","labelRight","atan2","halfPi","arcInnerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","padAngle","intersect","x3","y3","x10","y10","x32","y32","cornerTangents","r1","rc","lo","ox","oy","x11","y11","x00","y00","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","padRadius","r0","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","oc","ax","ay","bx","by","kc","lc","centroid","ix","iy","_generator","middleAngle","makeRadialText","radiusPrivate","innerRadiusPrivate","labelAngle","_flipped","makeSlice","labelsTemplate","currentAngle","currentArc","labelRadius","pl","pr","am5percent","categoryField","valueField","company","legend","_itemMap","startCategory","endCategory","otherAxis","startDataItem","endDataItem","hasValue","MAX_SAFE_INTEGER","frequency","_frequency","fillIndex","categoryLocation","endCategoryLocation","categoryToIndex","indexToPosition","fillEndIndex","_axisLocation","axisPositionToIndex","seriesDataItem","zoomToIndexes","connectEnds","axisAngle","topWidth","bottomWidth","pinRadius","radarContainer","_updateRadius","updateLayout","_updateMask","_arcGenerator","inArc","ir","positionToPoint","positionToAngle","fitAngle","minAngle","rendererY","rendererX","axisInnerRadius","axisStartAngle","axisEndAngle","am5radar","columnSettings","forceHidden","templateField","categoryYField","components","XYCharts","PieCharts","GaugeCharts"],"mappings":"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aAAa7I,IAAI,oBAAqB,MCrBzC,IAAAwvE,GAAA,GCSA,IACf3uE,eACAwrC,OACA,UAEAojC,OACAxqF,eACAiG,YACAwkF,cAGAC,UACA,kCAEAt7E,yBAOA,gCACAu7E,UACAj2B,QACAC,QACAwG,cACAC,eACAtG,cACAwN,wBAKA,GACA,CACAxxD,sCACA85E,iBACA3V,YACAC,aAEA,CACApkE,sCACA85E,iBACA3V,YACAC,aAEA,CACApkE,sCACA85E,mBACA3V,YACAC,aAEA,CACApkE,sCACA85E,iBACA3V,YACAC,aAEA,CACApkE,sCACA85E,gBACA3V,WACAC,aAEA,CACApkE,sCACA85E,mBACA3V,YACAC,aAEA,CACApkE,sCACA85E,gBACA3V,YACAC,cAIA,eACAyV,UACArzC,sBACA1vB,wBAYA,eACA+iE,UAEAtzB,cAAA/rB,eAAA3kC,SACA2wC,sBACA1vB,wBAGAmzC,iBAEA,oBACA4vB,UACA/uE,cACAm/C,QACAE,QACA4vB,qBACAC,mBACAC,6BAGAC,iBAEA,oBACAL,UACAtQ,qBACAz+D,cACAm/C,QACAE,QACA4vB,qBACAC,mBACAC,0BACAnjE,kBACA8Y,8BACAnB,6CAIA0rD,iBAOApyB,6BAIAoyB,2BACA,gBACAjyE,SACAsX,mBACAmC,2CACAgB,cACAb,0BACAC,cACAC,iBACAC,iBACAC,mBAGA,iBACA9N,cAMA8lE,2BACAp8C,kBAAAE,kBAAA7hB,WAOAg+D,2BACAx3D,cACAb,4BACAC,cACAC,iBACAC,iBACAC,mBAEAg4D,sDACA,yDAGAA,wDACA,yDAGAA,cACAC,cACApyB,kBAEA,aAGAqyB,gBACA,WACA,sBC5MiW,M,aCO7V1zD,GAAY,gBACd,GACA,EACA,GACA,EACA,KACA,KACA,MAIa,GAAAA,G,QClBXp4B,GAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACO,IAAI,WAAWL,YAAY,UAAUM,MAAOV,EAAIW,iBAEzHH,GAAkB,GCWf,MAAM,WAAe,GACxB,cACIsF,SAASC,WAMTV,OAAOC,eA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AAiBojD,EAAU2X,QAAQv0E,SAAS8R,IAAI,YAAa,IAAK,CAAC,QAAS,SAAU,YAClG,CAAC/b,KAAKw+E,QAAQv0E,SAAU48D,EAAU2X,QAAQv0E,aAGrD7E,OAAOC,eAAe,GAAmB,YAAa,CAClDC,YAAY,EACZC,cAAc,EACdC,UAAU,EACV7E,MAAO,sBAEXyE,OAAOC,eAAe,GAAmB,aAAc,CACnDC,YAAY,EACZC,cAAc,EACdC,UAAU,EACV7E,MAAO,GAAiB2gB,WAAW2C,OAAO,CAAC,GAAkB1C,cCjJlD,QACfjF,iBACAwrC,OACA,UAEAojC,OACAxqF,eACAiG,YACAwkF,cAGAC,UACA,kCAEAt7E,yBAGA,gCACA8mF,UACAxhC,QACAC,QACAwG,cACAC,eACApiD,aACAq3B,kBACAv3B,eACAC,gBAIA,GACA,CACA6xE,iBACA3qF,SACA4P,SACAsmF,gBACA7lE,mCAGA,CACAs6D,iBACA3qF,SACA4P,SACAsmF,gBACA7lE,mCAGA,CACAs6D,mBACA3qF,SACA4P,SACAsmF,gBACA7lE,oCAKA,eAEA0tD,0BACAhlE,YAGAglE,wBACAoY,iBAGA,6BACA9+C,WACA3sC,MACAC,QACAmsD,gBACA4S,oBACA/hD,wBAGA,YACAqtC,qBAGAgpB,wBACAmY,iBAGA,6BACA/C,yBACA/7C,cAGA2mC,0BACA12D,UACA8O,iBACA6Y,YACAmnD,iCAKAp7B,iBAEA,8BACAF,QACAE,QACAhD,aACA6yB,mBACAwL,0BAEAhmE,uDAKA06D,2BACA/9D,QACAsD,gBACAiD,gBACAgc,kBAGAw7C,iBAEA,8BACAjwB,QACAE,QACAhD,aACA6yB,oBACAwL,6BAGArL,2BACAh+D,QACAuG,gBACAzK,6CACAymB,gBACA6mD,iCAGApL,iBAuCAD,cACAC,cACApyB,kBAEA,aAGAqyB,gBACA,WACA,sBCnMoW,MCOhW,GAAY,gBACd,GACA,GACA,IACA,EACA,KACA,KACA,MAIa,M,QCCA,IACftvE,kBACA26E,YACAC,YACAC,aACAC,gBAEAtvC,OACA,OACAznD,WACAstB,eACAC,gBAEAttB,aACAqtB,cACAC,mBClCmW,MCQ/V,I,UAAY,gBACd,GACA9tB,EACAS,GACA,EACA,KACA,WACA,OAIa,gB,sECnBf","file":"js/chunk-10c02458.705a86cf.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"contents-view\"},[_c('div',{staticClass:\"chart-view\"},[_c('XYCharts',{attrs:{\"container-size\":_vm.container}})],1),_c('div',{staticClass:\"chart-view\"},[_c('PieCharts',{attrs:{\"container-size\":_vm.container_s}})],1),_c('div',{staticClass:\"chart-view\"},[_c('GaugeCharts',{attrs:{\"container-size\":_vm.container_s}})],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{ref:\"chartdiv\",staticClass:\"myChart\",style:(_vm.containerSize)})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\r\n * A collection of utility functions for various type checks and conversion\r\n * @hidden\r\n */\r\n/**\r\n * ============================================================================\r\n * TYPE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns `true` if value is not a number (NaN).\r\n *\r\n * @param value Input value\r\n * @return Is NaN?\r\n */\r\nexport function isNaN(value) {\r\n    return Number(value) !== value;\r\n}\r\n/**\r\n * Returns a type of the value.\r\n *\r\n * @param value  Input value\r\n * @return Type of the value\r\n * @ignore\r\n */\r\nexport function getType(value) {\r\n    return ({}).toString.call(value);\r\n}\r\n/**\r\n * ============================================================================\r\n * QUICK CONVERSION\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Converts any value into a `number`.\r\n *\r\n * @param value  Source value\r\n * @return Number representation of value\r\n */\r\nexport function toNumber(value) {\r\n    if (value != null && !isNumber(value)) {\r\n        let converted = Number(value);\r\n        if (isNaN(converted) && isString(value) && value != \"\") {\r\n            return toNumber(value.replace(/[^0-9.\\-]+/g, ''));\r\n        }\r\n        return converted;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Converts anything to Date object.\r\n *\r\n * @param value  A value of any type\r\n * @return Date object representing a value\r\n */\r\nexport function toDate(value) {\r\n    if (isDate(value)) {\r\n        // TODO maybe don't create a new Date ?\r\n        return new Date(value);\r\n    }\r\n    else if (isNumber(value)) {\r\n        return new Date(value);\r\n    }\r\n    else {\r\n        // Try converting to number (assuming timestamp)\r\n        let num = Number(value);\r\n        if (!isNumber(num)) {\r\n            return new Date(value);\r\n        }\r\n        else {\r\n            return new Date(num);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Converts numeric value into string. Deals with large or small numbers that\r\n * would otherwise use exponents.\r\n *\r\n * @param value  Numeric value\r\n * @return Numeric value as string\r\n */\r\nexport function numberToString(value) {\r\n    // TODO handle Infinity and -Infinity\r\n    if (isNaN(value)) {\r\n        return \"NaN\";\r\n    }\r\n    if (value === Infinity) {\r\n        return \"Infinity\";\r\n    }\r\n    if (value === -Infinity) {\r\n        return \"-Infinity\";\r\n    }\r\n    // Negative 0\r\n    if ((value === 0) && (1 / value === -Infinity)) {\r\n        return \"-0\";\r\n    }\r\n    // Preserve negative and deal with absoute values\r\n    let negative = value < 0;\r\n    value = Math.abs(value);\r\n    // TODO test this\r\n    let parsed = /^([0-9]+)(?:\\.([0-9]+))?(?:e[\\+\\-]([0-9]+))?$/.exec(\"\" + value);\r\n    let digits = parsed[1];\r\n    let decimals = parsed[2] || \"\";\r\n    let res;\r\n    // Leave the nummber as it is if it does not use exponents\r\n    if (parsed[3] === undefined) {\r\n        res = (decimals === \"\" ? digits : digits + \".\" + decimals);\r\n    }\r\n    else {\r\n        let exponent = +parsed[3];\r\n        // Deal with decimals\r\n        if (value < 1) {\r\n            let zeros = exponent - 1;\r\n            res = \"0.\" + repeat(\"0\", zeros) + digits + decimals;\r\n            // Deal with integers\r\n        }\r\n        else {\r\n            let zeros = exponent - decimals.length;\r\n            if (zeros === 0) {\r\n                res = digits + decimals;\r\n            }\r\n            else if (zeros < 0) {\r\n                res = digits + decimals.slice(0, zeros) + \".\" + decimals.slice(zeros);\r\n            }\r\n            else {\r\n                res = digits + decimals + repeat(\"0\", zeros);\r\n            }\r\n        }\r\n    }\r\n    return negative ? \"-\" + res : res;\r\n}\r\n/**\r\n * Repeats a `string` number of times as set in `amount`.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Make this faster\r\n * @param string  Source string\r\n * @param amount  Number of times to repeat string\r\n * @return New string\r\n */\r\nexport function repeat(string, amount) {\r\n    return new Array(amount + 1).join(string);\r\n}\r\n/**\r\n * ============================================================================\r\n * TYPE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Checks if parameter is `Date`.\r\n *\r\n * @param value  Input value\r\n * @return Is Date?\r\n */\r\nexport function isDate(value) {\r\n    return getType(value) === \"[object Date]\";\r\n}\r\n/**\r\n * Checks if parameter is `string`.\r\n *\r\n * @param value  Input value\r\n * @return Is string?\r\n */\r\nexport function isString(value) {\r\n    return typeof value === \"string\";\r\n}\r\n/**\r\n * Checks if parameter is `number`.\r\n *\r\n * @param value  Input value\r\n * @return Is number?\r\n */\r\nexport function isNumber(value) {\r\n    return typeof value === \"number\" && Number(value) == value;\r\n}\r\n/**\r\n * Checks if parameter is `object`.\r\n *\r\n * @param value  Input value\r\n * @return Is object?\r\n */\r\nexport function isObject(value) {\r\n    return typeof value === \"object\" && value !== null;\r\n}\r\n/**\r\n * Checks if parameter is `Array`.\r\n *\r\n * @param value  Input value\r\n * @return Is Array?\r\n */\r\nexport function isArray(value) {\r\n    return Array.isArray(value);\r\n}\r\n/**\r\n * ============================================================================\r\n * STATIC CONSTANTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport const PLACEHOLDER = \"__§§§__\";\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport const PLACEHOLDER2 = \"__§§§§__\";\r\n//# sourceMappingURL=Type.js.map","import * as $type from \"./Type\";\r\n/**\r\n * ============================================================================\r\n * UTILITY FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Searches `array` for `value`.\r\n *\r\n * Returns -1 if not found.\r\n *\r\n * @param array  Source array\r\n * @param value  Value to search\r\n * @returns Index\r\n */\r\nexport function indexOf(array, value) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        // TODO handle NaN\r\n        if (array[i] === value) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Calls `test` for each element in `array`.\r\n *\r\n * If `test` returns `true` then it immediately returns `true`.\r\n *\r\n * If `test` returns `false` for all of the elements in `array` then it returns `false`.\r\n *\r\n * @param array  Source array\r\n * @param test   Function which is called on each element\r\n * @returns Whether `test` returned true or not\r\n */\r\nexport function any(array, test) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        if (test(array[i])) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Calls `fn` function for every member of array and returns a new array out\r\n * of all outputs.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n * @returns New array\r\n */\r\nexport function map(array, fn) {\r\n    const length = array.length;\r\n    const output = new Array(length);\r\n    for (let i = 0; i < length; ++i) {\r\n        output[i] = fn(array[i], i);\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function each(array, fn) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        fn(array[i], i);\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array in reverse order and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function eachReverse(array, fn) {\r\n    let i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        fn(array[i], i);\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * If `fn` call evaluates to `false`, further iteration is cancelled.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function eachContinue(array, fn) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        if (!fn(array[i], i)) {\r\n            break;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Shifts an item at `index` towards beginning of the array.\r\n *\r\n * @param array  Source array\r\n * @param index  Target element index\r\n */\r\nexport function shiftLeft(array, index) {\r\n    const length = array.length;\r\n    for (let i = index; i < length; ++i) {\r\n        array[i - index] = array[i];\r\n    }\r\n    array.length = length - index;\r\n}\r\n/**\r\n * Returns the last item of the array.\r\n *\r\n * @param array  Source array\r\n * @returns Last item\r\n */\r\nexport function last(array) {\r\n    const length = array.length;\r\n    return length ? array[length - 1] : undefined;\r\n}\r\n/**\r\n * Returns the first item of the array.\r\n *\r\n * @param array  Source array\r\n * @returns Last item\r\n */\r\nexport function first(array) {\r\n    return array[0];\r\n}\r\n/**\r\n * Inserts `element` into `array` at `index`.\r\n *\r\n * Caps `index` to be between `0` and `array.length`\r\n *\r\n * @param array    Source array\r\n * @param element  Item to insert\r\n * @param array    Index to insert item at\r\n */\r\nexport function insert(array, element, index) {\r\n    //if (array) {\r\n    index = Math.max(0, Math.min(index, array.length));\r\n    array.splice(index, 0, element);\r\n    //}\r\n}\r\n/**\r\n * Removes all copies of `element` from `array` (if they exist) and then\r\n * inserts `element` at `index`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item\r\n * @param array    Index to move item to\r\n */\r\nexport function setIndex(array, element, index) {\r\n    remove(array, element);\r\n    insert(array, element, index);\r\n}\r\n/**\r\n * Pushes all of the elements from `input` into `array`.\r\n *\r\n * @param array  Output array\r\n * @param input  Input array\r\n */\r\nexport function pushAll(array, input) {\r\n    const length = input.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        array.push(input[i]);\r\n    }\r\n}\r\n/**\r\n * Removes `element` from `array`.\r\n *\r\n * If there are multiple copies of `element`, they are all removed.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to remove\r\n */\r\nexport function remove(array, element) {\r\n    let found = false;\r\n    let index = 0;\r\n    for (;;) {\r\n        index = array.indexOf(element, index);\r\n        if (index === -1) {\r\n            return found;\r\n        }\r\n        else {\r\n            found = true;\r\n            array.splice(index, 1);\r\n        }\r\n    }\r\n}\r\nexport function removeFirst(array, element) {\r\n    let index = array.indexOf(element);\r\n    if (index !== -1) {\r\n        array.splice(index, 1);\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Adds an `element` to `array`.\r\n *\r\n * If array already contains and item like this, it is removed before adding\r\n * it again.\r\n *\r\n * Optionally `toIndex` can be specified to add element at specific index.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n * @param array    Index to move item to\r\n */\r\nexport function move(array, element, toIndex) {\r\n    // @todo this implementation must be the same as the List.moveValue method\r\n    // @todo don't do anything if the desired index is the same as the current index\r\n    let index = indexOf(array, element);\r\n    // @todo remove all old values rather than only the first ?\r\n    if (index !== -1) {\r\n        removeIndex(array, index);\r\n    }\r\n    if (toIndex == null) {\r\n        array.push(element);\r\n    }\r\n    else {\r\n        insertIndex(array, toIndex, element);\r\n    }\r\n}\r\n/**\r\n * Inserts `element` into `array` at `index`.\r\n *\r\n * If `index` is not provided, it will insert `element` at the end of `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n * @param array    Index to add item at\r\n */\r\nexport function add(array, element, index) {\r\n    // Append to the end if index is not set\r\n    if (!$type.isNumber(index)) {\r\n        array.push(element);\r\n    }\r\n    // Add to the beginning of array if index is 0\r\n    else if (index === 0) {\r\n        array.unshift(element);\r\n    }\r\n    // Add to indicated place if index is set\r\n    else {\r\n        array.splice(index, 0, element);\r\n    }\r\n}\r\n/**\r\n * Pushes `element` into `array` if it doesn't already exist.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n */\r\nexport function pushOne(array, element) {\r\n    if (array.indexOf(element) === -1) {\r\n        array.push(element);\r\n    }\r\n}\r\n/**\r\n * Removes `element` from `array` (if it exists) and then inserts `element` at\r\n * `index`.\r\n *\r\n * If `index` is not provided, it will insert `element` at the end of `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to remove\r\n * @param array    Index to move item to\r\n */\r\nexport function replace(array, element, index) {\r\n    // check if exists\r\n    let ind = array.indexOf(element);\r\n    // remove if exists\r\n    if (ind !== -1) {\r\n        array.splice(ind, 1);\r\n    }\r\n    // add to end if index is not set\r\n    if (!$type.isNumber(index)) {\r\n        array.push(element);\r\n    }\r\n    // add to indicated place if index is set\r\n    else {\r\n        array.splice(index, 0, element);\r\n    }\r\n}\r\n/**\r\n * Wraps `input` in an array, if it isn't already an array.\r\n *\r\n * @param input  Source value\r\n * @return An array\r\n */\r\nexport function toArray(input) {\r\n    if (Array.isArray(input)) {\r\n        return input;\r\n    }\r\n    else {\r\n        return [input];\r\n    }\r\n}\r\n/**\r\n * Returns `true` if `element` exists in `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to search for\r\n * @returns Item in array?\r\n */\r\nexport function has(array, element) {\r\n    return indexOf(array, element) !== -1;\r\n}\r\n/**\r\n * Returns a shallow copy of `array`.\r\n *\r\n * @param array  Source array\r\n * @returns Copy of the array\r\n */\r\nexport function copy(array) {\r\n    const length = array.length;\r\n    // It's faster to create the array with a pre-defined length\r\n    const output = new Array(length);\r\n    for (let i = 0; i < length; ++i) {\r\n        // Because the array has a pre-defined length, we have to assign rather than push\r\n        // This is also faster than pushing\r\n        output[i] = array[i];\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Returns a copy of `array` which contains all the elements between `start`\r\n * and `end`. (including `start` and excluding `end`)\r\n *\r\n * If `end` is not provided, it defaults to `array.length`.\r\n *\r\n * @param array  Source array\r\n * @param start  Start index\r\n * @param end    End index\r\n * @returns Part of the array\r\n */\r\nexport function slice(array, start, end = array.length) {\r\n    const output = new Array(end - start);\r\n    for (let i = start; i < end; ++i) {\r\n        output[i - start] = array[i];\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Inserts a value into array at specific index.\r\n *\r\n * @param array  Source array\r\n * @param index  Index\r\n * @param value  Value to insert\r\n */\r\nexport function insertIndex(array, index, value) {\r\n    array.splice(index, 0, value);\r\n}\r\n/**\r\n * Removes a value from array at specific index.\r\n *\r\n * @param array  Source array\r\n * @param index  Index\r\n */\r\nexport function removeIndex(array, index) {\r\n    array.splice(index, 1);\r\n}\r\n/**\r\n * Searches the array using custom function and returns index of the item if\r\n * found.\r\n *\r\n * Will call `matches` function on all items of the array. If return value\r\n * evaluates to `true`, index is returned.\r\n *\r\n * Otherwise returns -1.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Index of the item if found\r\n */\r\nexport function findIndex(array, matches) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        if (matches(array[i], i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * This is the same as `findIndex` except it searches from right to left.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Index of the item if found\r\n */\r\nexport function findIndexReverse(array, matches) {\r\n    let i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        if (matches(array[i], i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Searches the array using custom function and returns item if found.\r\n *\r\n * Will call `matches` function on all items of the array. If return value\r\n * evaluates to `true`, index is returned.\r\n *\r\n * Otherwise returns `undefined`.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function find(array, matches) {\r\n    const index = findIndex(array, matches);\r\n    if (index !== -1) {\r\n        return array[index];\r\n    }\r\n}\r\n/**\r\n * This is the same as `find` except it searches from right to left.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function findReverse(array, matches) {\r\n    const index = findIndexReverse(array, matches);\r\n    if (index !== -1) {\r\n        return array[index];\r\n    }\r\n}\r\n/**\r\n * Searches the array using custom function and returns item if found.\r\n *\r\n * Will call `matches` function on all items of the array. If value\r\n * is not `undefined`, it returns it.\r\n *\r\n * Otherwise returns `undefined`.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function findMap(array, matches) {\r\n    const length = array.length;\r\n    for (let i = 0; i < length; ++i) {\r\n        const value = matches(array[i], i);\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function shuffle(array) {\r\n    // https://stackoverflow.com/a/2450976/449477\r\n    let currentIndex = array.length, temporaryValue, randomIndex;\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n    }\r\n}\r\n/**\r\n * Orders an array using specific `ordering` function and returns right-most index of\r\n * the `value`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param array     Source array\r\n * @param ordering  An ordering function\r\n * @returns Result of the search\r\n */\r\nexport function getSortedIndex(array, ordering) {\r\n    let start = 0;\r\n    let end = array.length;\r\n    let found = false;\r\n    while (start < end) {\r\n        // TODO is this faster/slower than using Math.floor ?\r\n        const pivot = (start + end) >> 1;\r\n        const order = ordering(array[pivot]);\r\n        // less\r\n        if (order < 0) {\r\n            start = pivot + 1;\r\n            // equal\r\n        }\r\n        else if (order === 0) {\r\n            found = true;\r\n            start = pivot + 1;\r\n            // more\r\n        }\r\n        else {\r\n            end = pivot;\r\n        }\r\n    }\r\n    return {\r\n        found: found,\r\n        index: (found ? start - 1 : start)\r\n    };\r\n}\r\n/**\r\n * Orders an array using specific `ordering` function and returns left-most index of\r\n * the `value`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param array     Source array\r\n * @param ordering  An ordering function\r\n * @returns Result of the search\r\n */\r\nexport function getFirstSortedIndex(array, ordering) {\r\n    let start = 0;\r\n    let end = array.length;\r\n    let found = false;\r\n    while (start < end) {\r\n        // TODO is this faster/slower than using Math.floor ?\r\n        const pivot = (start + end) >> 1;\r\n        const order = ordering(array[pivot]);\r\n        // less\r\n        if (order < 0) {\r\n            start = pivot + 1;\r\n            // equal\r\n        }\r\n        else if (order === 0) {\r\n            found = true;\r\n            end = pivot;\r\n            // more\r\n        }\r\n        else {\r\n            end = pivot;\r\n        }\r\n    }\r\n    return {\r\n        found: found,\r\n        index: start\r\n    };\r\n}\r\nexport function keepIf(array, keep) {\r\n    let i = array.length;\r\n    while (i > 0) {\r\n        --i;\r\n        if (!keep(array[i])) {\r\n            array.splice(i, 1);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Array.js.map","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $array from \"./Array\";\r\n/**\r\n * A base class for disposable objects.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class DisposerClass {\r\n    /**\r\n     * Constructor.\r\n     */\r\n    constructor() {\r\n        /**\r\n         * Is object disposed?\r\n         */\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._disposed = false;\r\n    }\r\n    /**\r\n     * Checks if object is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes the object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * A class for creating an IDisposer.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class Disposer {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param dispose  Function that disposes object\r\n     */\r\n    constructor(dispose) {\r\n        /**\r\n         * Is object disposed?\r\n         */\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Method that disposes the object.\r\n         */\r\n        Object.defineProperty(this, \"_dispose\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._disposed = false;\r\n        this._dispose = dispose;\r\n    }\r\n    /**\r\n     * Checks if object is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes the object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * This can be extended by other classes to add a `_disposers` property.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class ArrayDisposer extends DisposerClass {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    _dispose() {\r\n        $array.each(this._disposers, (x) => {\r\n            x.dispose();\r\n        });\r\n    }\r\n}\r\n/**\r\n * A collection of related disposers that can be disposed in one go.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class MultiDisposer extends DisposerClass {\r\n    constructor(disposers) {\r\n        super();\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._disposers = disposers;\r\n    }\r\n    _dispose() {\r\n        $array.each(this._disposers, (x) => {\r\n            x.dispose();\r\n        });\r\n    }\r\n}\r\n/**\r\n * A special kind of Disposer that has attached value set.\r\n *\r\n * If a new value is set using `set()` method, the old disposer value is\r\n * disposed.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport class MutableValueDisposer extends DisposerClass {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Current disposer.\r\n         */\r\n        Object.defineProperty(this, \"_disposer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Current value.\r\n         */\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _dispose() {\r\n        if (this._disposer != null) {\r\n            this._disposer.dispose();\r\n            this._disposer = undefined;\r\n        }\r\n    }\r\n    /**\r\n     * Returns current value.\r\n     *\r\n     * @return Value\r\n     */\r\n    get() {\r\n        return this._value;\r\n    }\r\n    /**\r\n     * Sets value and disposes previous disposer if it was set.\r\n     *\r\n     * @param value     New value\r\n     * @param disposer  Disposer\r\n     */\r\n    set(value, disposer) {\r\n        if (this._disposer != null) {\r\n            this._disposer.dispose();\r\n        }\r\n        this._disposer = disposer;\r\n        this._value = value;\r\n    }\r\n    /**\r\n     * Resets the disposer value.\r\n     */\r\n    reset() {\r\n        this.set(undefined, undefined);\r\n    }\r\n}\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport class CounterDisposer extends Disposer {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * [_counter description]\r\n         *\r\n         * @todo Description\r\n         */\r\n        Object.defineProperty(this, \"_counter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    /**\r\n     * [increment description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    increment() {\r\n        // TODO throw an error if it is disposed\r\n        ++this._counter;\r\n        // TODO make this more efficient\r\n        return new Disposer(() => {\r\n            --this._counter;\r\n            if (this._counter === 0) {\r\n                this.dispose();\r\n            }\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=Disposer.js.map","/**\r\n * Event Dispatcher module is used for registering listeners and dispatching\r\n * events across amCharts system.\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Disposer, MultiDisposer } from \"./Disposer\";\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * Universal Event Dispatcher.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n */\r\nexport class EventDispatcher {\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor() {\r\n        Object.defineProperty(this, \"_listeners\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_killed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_iterating\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_enabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._listeners = [];\r\n        this._killed = [];\r\n        this._disabled = {};\r\n        this._iterating = 0;\r\n        this._enabled = true;\r\n        this._disposed = false;\r\n    }\r\n    /**\r\n     * Returns if this object has been already disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Dispose (destroy) this object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            const a = this._listeners;\r\n            this._iterating = 1;\r\n            this._listeners = null;\r\n            this._disabled = null;\r\n            try {\r\n                $array.each(a, (x) => {\r\n                    x.disposer.dispose();\r\n                });\r\n            }\r\n            finally {\r\n                this._killed = null;\r\n                this._iterating = null;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Checks if this particular event dispatcher has any listeners set.\r\n     *\r\n     * @return Has listeners?\r\n     */\r\n    hasListeners() {\r\n        return this._listeners.length !== 0;\r\n    }\r\n    /**\r\n     * Checks if this particular event dispatcher has any particular listeners set.\r\n     *\r\n     * @return Has particular event listeners?\r\n     */\r\n    hasListenersByType(type) {\r\n        return $array.any(this._listeners, (x) => (x.type === null || x.type === type) && !x.killed);\r\n    }\r\n    /**\r\n     * Enable dispatching of events if they were previously disabled by\r\n     * `disable()`.\r\n     */\r\n    enable() {\r\n        this._enabled = true;\r\n    }\r\n    /**\r\n     * Disable dispatching of events until re-enabled by `enable()`.\r\n     */\r\n    disable() {\r\n        this._enabled = false;\r\n    }\r\n    /**\r\n     * Enable dispatching particular event, if it was disabled before by\r\n     * `disableType()`.\r\n     *\r\n     * @param type Event type\r\n     */\r\n    enableType(type) {\r\n        delete this._disabled[type];\r\n    }\r\n    /**\r\n     * Disable dispatching of events for a certain event type.\r\n     *\r\n     * Optionally, can set how many dispatches to skip before automatically\r\n     * re-enabling the dispatching.\r\n     *\r\n     * @param type    Event type\r\n     * @param amount  Number of event dispatches to skip\r\n     */\r\n    disableType(type, amount = Infinity) {\r\n        this._disabled[type] = amount;\r\n    }\r\n    /**\r\n     * Removes listener from dispatcher.\r\n     *\r\n     * Will throw an exception if such listener does not exists.\r\n     *\r\n     * @param listener Listener to remove\r\n     */\r\n    _removeListener(listener) {\r\n        if (this._iterating === 0) {\r\n            const index = this._listeners.indexOf(listener);\r\n            if (index === -1) {\r\n                throw new Error(\"Invalid state: could not remove listener\");\r\n            }\r\n            this._listeners.splice(index, 1);\r\n        }\r\n        else {\r\n            this._killed.push(listener);\r\n        }\r\n    }\r\n    /**\r\n     * Removes existing listener by certain parameters.\r\n     *\r\n     * @param once         Listener's once setting\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     */\r\n    _removeExistingListener(once, type, callback, context) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._eachListener((info) => {\r\n            if (info.once === once && // TODO is this correct ?\r\n                info.type === type &&\r\n                (callback === undefined || info.callback === callback) &&\r\n                info.context === context) {\r\n                info.disposer.dispose();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Checks if dispatching for particular event type is enabled.\r\n     *\r\n     * @param type  Event type\r\n     * @return Enabled?\r\n     */\r\n    isEnabled(type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        // TODO is this check correct ?\r\n        return this._enabled && this._listeners.length > 0 && this.hasListenersByType(type) && this._disabled[type] === undefined;\r\n    }\r\n    /**\r\n     * Removes all listeners of a particular event type\r\n     *\r\n     * @param type  Listener's type\r\n     */\r\n    removeType(type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._eachListener((info) => {\r\n            if (info.type === type) {\r\n                info.disposer.dispose();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Checks if there's already a listener with specific parameters.\r\n     *\r\n     * @param type      Listener's type\r\n     * @param callback  Callback function\r\n     * @param context   Callback context\r\n     * @return Has listener?\r\n     */\r\n    has(type, callback, context) {\r\n        const index = $array.findIndex(this._listeners, (info) => {\r\n            return info.once !== true && // Ignoring \"once\" listeners\r\n                info.type === type &&\r\n                (callback === undefined || info.callback === callback) &&\r\n                info.context === context;\r\n        });\r\n        return index !== -1;\r\n    }\r\n    /**\r\n     * Checks whether event of the particular type should be dispatched.\r\n     *\r\n     * @param type  Event type\r\n     * @return Dispatch?\r\n     */\r\n    _shouldDispatch(type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        const count = this._disabled[type];\r\n        if (!$type.isNumber(count)) {\r\n            return this._enabled;\r\n        }\r\n        else {\r\n            if (count <= 1) {\r\n                delete this._disabled[type];\r\n            }\r\n            else {\r\n                --this._disabled[type];\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * [_eachListener description]\r\n     *\r\n     * All of this extra code is needed when a listener is removed while iterating\r\n     *\r\n     * @todo Description\r\n     * @param fn [description]\r\n     */\r\n    _eachListener(fn) {\r\n        ++this._iterating;\r\n        try {\r\n            $array.each(this._listeners, fn);\r\n        }\r\n        finally {\r\n            --this._iterating;\r\n            // TODO should this be inside or outside the finally ?\r\n            if (this._iterating === 0 && this._killed.length !== 0) {\r\n                // Remove killed listeners\r\n                $array.each(this._killed, (killed) => {\r\n                    this._removeListener(killed);\r\n                });\r\n                this._killed.length = 0;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Dispatches an event immediately without waiting for next cycle.\r\n     *\r\n     * @param type   Event type\r\n     * @param event  Event object\r\n     * @todo automatically add in type and target properties if they are missing\r\n     */\r\n    dispatch(type, event) {\r\n        if (this._shouldDispatch(type)) {\r\n            // TODO check if it's faster to use an object of listeners rather than a single big array\r\n            // TODO if the function throws, maybe it should keep going ?\r\n            this._eachListener((listener) => {\r\n                if (!listener.killed && (listener.type === null || listener.type === type)) {\r\n                    listener.dispatch(type, event);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Shelves the event to be dispatched within next update cycle.\r\n     *\r\n     * @param type   Event type\r\n     * @param event  Event object\r\n     * @todo automatically add in type and target properties if they are missing\r\n     */\r\n    /*public dispatchLater<Key extends keyof T>(type: Key, event: T[Key]): void {\r\n        if (this._shouldDispatch(type)) {\r\n            this._eachListener((listener) => {\r\n                // TODO check if it's faster to use an object of listeners rather than a single big array\r\n                if (!listener.killed && (listener.type === null || listener.type === type)) {\r\n                    // TODO if the function throws, maybe it should keep going ?\r\n                    // TODO dispatch during the update cycle, rather than using whenIdle\r\n                    $async.whenIdle(() => {\r\n                        if (!listener.killed) {\r\n                            listener.dispatch(type, event);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }*/\r\n    /**\r\n     * Creates, catalogs and returns an [[EventListener]].\r\n     *\r\n     * Event listener can be disposed.\r\n     *\r\n     * @param once         Listener's once setting\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @param dispatch\r\n     * @returns An event listener\r\n     */\r\n    _on(once, type, callback, context, shouldClone, dispatch) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._removeExistingListener(once, type, callback, context);\r\n        const info = {\r\n            type: type,\r\n            callback: callback,\r\n            context: context,\r\n            shouldClone: shouldClone,\r\n            dispatch: dispatch,\r\n            killed: false,\r\n            once: once,\r\n            disposer: new Disposer(() => {\r\n                info.killed = true;\r\n                this._removeListener(info);\r\n            })\r\n        };\r\n        this._listeners.push(info);\r\n        return info;\r\n    }\r\n    /**\r\n     * Creates an event listener to be invoked on **any** event.\r\n     *\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    onAll(callback, context, shouldClone = true) {\r\n        return this._on(false, null, callback, context, shouldClone, (_type, event) => callback.call(context, event)).disposer;\r\n    }\r\n    /**\r\n     * Creates an event listener to be invoked on a specific event type.\r\n     *\r\n     * ```TypeScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     * ```JavaScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     *\r\n     * The above will invoke our custom event handler whenever series we put\r\n     * event on is hidden.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    on(type, callback, context, shouldClone = true) {\r\n        return this._on(false, type, callback, context, shouldClone, (_type, event) => callback.call(context, event)).disposer;\r\n    }\r\n    /**\r\n     * Creates an event listener to be invoked on a specific event type once.\r\n     *\r\n     * Once the event listener is invoked, it is automatically disposed.\r\n     *\r\n     * ```TypeScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     * ```JavaScript\r\n     * button.events.once(\"click\", (ev) => {\r\n     *   console.log(\"Button clicked\");\r\n     * }, this);\r\n     * ```\r\n     *\r\n     * The above will invoke our custom event handler the first time series we\r\n     * put event on is hidden.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     */\r\n    once(type, callback, context, shouldClone = true) {\r\n        const x = this._on(true, type, callback, context, shouldClone, (_type, event) => {\r\n            x.disposer.dispose();\r\n            callback.call(context, event);\r\n        });\r\n        // TODO maybe this should return a different Disposer ?\r\n        return x.disposer;\r\n    }\r\n    /**\r\n     * Removes the event listener with specific parameters.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     */\r\n    off(type, callback, context) {\r\n        this._removeExistingListener(false, type, callback, context);\r\n    }\r\n    /**\r\n     * Copies all dispatcher parameters, including listeners, from another event\r\n     * dispatcher.\r\n     *\r\n     * @param source Source event dispatcher\r\n     * @ignore\r\n     */\r\n    copyFrom(source) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        if (source === this) {\r\n            throw new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\r\n        }\r\n        const disposers = [];\r\n        $array.each(source._listeners, (x) => {\r\n            // TODO is this correct ?\r\n            if (!x.killed && x.shouldClone) {\r\n                if (x.type === null) {\r\n                    disposers.push(this.onAll(x.callback, x.context));\r\n                }\r\n                else if (x.once) {\r\n                    disposers.push(this.once(x.type, x.callback, x.context));\r\n                }\r\n                else {\r\n                    disposers.push(this.on(x.type, x.callback, x.context));\r\n                }\r\n            }\r\n        });\r\n        return new MultiDisposer(disposers);\r\n    }\r\n}\r\n/**\r\n * A version of the [[EventDispatcher]] that dispatches events for a specific\r\n * target object.\r\n *\r\n * @ignore\r\n */\r\nexport class TargetedEventDispatcher extends EventDispatcher {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param target Event dispatcher target\r\n     */\r\n    constructor(target) {\r\n        super();\r\n        /**\r\n         * A target object which is originating events using this dispatcher.\r\n         */\r\n        Object.defineProperty(this, \"target\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Copies all dispatcher parameters, including listeners, from another event\r\n     * dispatcher.\r\n     *\r\n     * @param source Source event dispatcher\r\n     * @ignore\r\n     */\r\n    copyFrom(source) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        if (source === this) {\r\n            throw new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\r\n        }\r\n        const disposers = [];\r\n        $array.each(source._listeners, (x) => {\r\n            // TODO very hacky\r\n            if (x.context === source.target) {\r\n                return;\r\n            }\r\n            // TODO is this correct ?\r\n            if (!x.killed && x.shouldClone) {\r\n                if (x.type === null) {\r\n                    disposers.push(this.onAll(x.callback, x.context));\r\n                }\r\n                else if (x.once) {\r\n                    disposers.push(this.once(x.type, x.callback, x.context));\r\n                }\r\n                else {\r\n                    disposers.push(this.on(x.type, x.callback, x.context));\r\n                }\r\n            }\r\n        });\r\n        return new MultiDisposer(disposers);\r\n    }\r\n}\r\n//# sourceMappingURL=EventDispatcher.js.map","import { EventDispatcher } from \"./EventDispatcher\";\r\nimport * as $array from \"./Array\";\r\n/**\r\n * Checks if specific index fits into length.\r\n *\r\n * @param index  Index\r\n * @param len    Length\r\n * @ignore\r\n */\r\nfunction checkBounds(index, len) {\r\n    if (!(index >= 0 && index < len)) {\r\n        throw new Error(\"Index out of bounds: \" + index);\r\n    }\r\n}\r\n/**\r\n * A List class is used to hold a number of indexed items of the same type.\r\n */\r\nexport class List {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param initial  Inital list of values to add to list\r\n     */\r\n    constructor(initial = []) {\r\n        /**\r\n         * List values.\r\n         */\r\n        Object.defineProperty(this, \"_values\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        this._values = initial;\r\n    }\r\n    /**\r\n     * An array of values in the list.\r\n     *\r\n     * Do not use this property to add values. Rather use dedicated methods, like\r\n     * `push()`, `removeIndex()`, etc.\r\n     *\r\n     * @readonly\r\n     * @return List values\r\n     */\r\n    get values() {\r\n        return this._values;\r\n    }\r\n    /**\r\n     * Checks if list contains specific item reference.\r\n     *\r\n     * @param item  Item to search for\r\n     * @return `true` if found, `false` if not found\r\n     */\r\n    contains(value) {\r\n        return this._values.indexOf(value) !== -1;\r\n    }\r\n    /**\r\n     * Removes specific item from the list.\r\n     *\r\n     * @param item An item to remove\r\n     */\r\n    removeValue(value) {\r\n        let i = 0;\r\n        let length = this._values.length;\r\n        while (i < length) {\r\n            // TODO handle NaN\r\n            if (this._values[i] === value) {\r\n                this.removeIndex(i);\r\n                --length;\r\n            }\r\n            else {\r\n                ++i;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Searches the list for specific item and returns its index.\r\n     *\r\n     * @param item  An item to search for\r\n     * @return Index or -1 if not found\r\n     */\r\n    indexOf(value) {\r\n        return $array.indexOf(this._values, value);\r\n    }\r\n    /**\r\n     * Number of items in list.\r\n     *\r\n     * @readonly\r\n     * @return Number of items\r\n     */\r\n    get length() {\r\n        return this._values.length;\r\n    }\r\n    /**\r\n     * Checks if there's a value at specific index.\r\n     *\r\n     * @param index  Index\r\n     * @return Value exists?\r\n     */\r\n    hasIndex(index) {\r\n        return index >= 0 && index < this._values.length;\r\n    }\r\n    /**\r\n     * Returns an item at specified index.\r\n     *\r\n     * @param index  Index\r\n     * @return List item\r\n     */\r\n    getIndex(index) {\r\n        return this._values[index];\r\n    }\r\n    _onPush(newValue) {\r\n        if (this.events.isEnabled(\"push\")) {\r\n            this.events.dispatch(\"push\", {\r\n                type: \"push\",\r\n                target: this,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onInsertIndex(index, newValue) {\r\n        if (this.events.isEnabled(\"insertIndex\")) {\r\n            this.events.dispatch(\"insertIndex\", {\r\n                type: \"insertIndex\",\r\n                target: this,\r\n                index,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.events.isEnabled(\"setIndex\")) {\r\n            this.events.dispatch(\"setIndex\", {\r\n                type: \"setIndex\",\r\n                target: this,\r\n                index,\r\n                oldValue,\r\n                newValue\r\n            });\r\n        }\r\n    }\r\n    _onRemoveIndex(index, oldValue) {\r\n        if (this.events.isEnabled(\"removeIndex\")) {\r\n            this.events.dispatch(\"removeIndex\", {\r\n                type: \"removeIndex\",\r\n                target: this,\r\n                index,\r\n                oldValue\r\n            });\r\n        }\r\n    }\r\n    _onMoveIndex(oldIndex, newIndex, value) {\r\n        if (this.events.isEnabled(\"moveIndex\")) {\r\n            this.events.dispatch(\"moveIndex\", {\r\n                type: \"moveIndex\",\r\n                target: this,\r\n                oldIndex,\r\n                newIndex,\r\n                value,\r\n            });\r\n        }\r\n    }\r\n    _onClear(oldValues) {\r\n        if (this.events.isEnabled(\"clear\")) {\r\n            this.events.dispatch(\"clear\", {\r\n                type: \"clear\",\r\n                target: this,\r\n                oldValues\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Sets value at specific index.\r\n     *\r\n     * If there's already a value at the index, it is overwritten.\r\n     *\r\n     * @param index  Index\r\n     * @param value  New value\r\n     * @return New value\r\n     */\r\n    setIndex(index, value) {\r\n        checkBounds(index, this._values.length);\r\n        const oldValue = this._values[index];\r\n        // Do nothing if the old value and the new value are the same\r\n        if (oldValue !== value) {\r\n            this._values[index] = value;\r\n            this._onSetIndex(index, oldValue, value);\r\n        }\r\n        return oldValue;\r\n    }\r\n    /**\r\n     * Adds an item to the list at a specific index, which pushes all the other\r\n     * items further down the list.\r\n     *\r\n     * @param index Index\r\n     * @param item  An item to add\r\n     */\r\n    insertIndex(index, value) {\r\n        checkBounds(index, this._values.length + 1);\r\n        $array.insertIndex(this._values, index, value);\r\n        this._onInsertIndex(index, value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Swaps indexes of two items in the list.\r\n     *\r\n     * @param a  Item 1\r\n     * @param b  Item 2\r\n     */\r\n    swap(a, b) {\r\n        const len = this._values.length;\r\n        checkBounds(a, len);\r\n        checkBounds(b, len);\r\n        if (a !== b) {\r\n            const value_a = this._values[a];\r\n            const value_b = this._values[b];\r\n            this._values[a] = value_b;\r\n            this._onSetIndex(a, value_a, value_b);\r\n            this._values[b] = value_a;\r\n            this._onSetIndex(b, value_b, value_a);\r\n        }\r\n    }\r\n    /**\r\n     * Removes a value at specific index.\r\n     *\r\n     * @param index  Index of value to remove\r\n     * @return Removed value\r\n     */\r\n    removeIndex(index) {\r\n        checkBounds(index, this._values.length);\r\n        const oldValue = this._values[index];\r\n        $array.removeIndex(this._values, index);\r\n        this._onRemoveIndex(index, oldValue);\r\n        return oldValue;\r\n    }\r\n    /**\r\n     * Moves an item to a specific index within the list.\r\n     *\r\n     * If the index is not specified it will move the item to the end of the\r\n     * list.\r\n     *\r\n     * @param value  Item to move\r\n     * @param index  Index to place item at\r\n     */\r\n    moveValue(value, toIndex) {\r\n        // TODO don't do anything if the desired index is the same as the current index\r\n        let index = this.indexOf(value);\r\n        // TODO remove all old values rather than only the first ?\r\n        if (index !== -1) {\r\n            $array.removeIndex(this._values, index);\r\n            if (toIndex == null) {\r\n                const toIndex = this._values.length;\r\n                this._values.push(value);\r\n                this._onMoveIndex(index, toIndex, value);\r\n            }\r\n            else {\r\n                $array.insertIndex(this._values, toIndex, value);\r\n                this._onMoveIndex(index, toIndex, value);\r\n            }\r\n        }\r\n        else if (toIndex == null) {\r\n            this._values.push(value);\r\n            this._onPush(value);\r\n        }\r\n        else {\r\n            $array.insertIndex(this._values, toIndex, value);\r\n            this._onInsertIndex(toIndex, value);\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds an item to the end of the list.\r\n     *\r\n     * @param item  An item to add\r\n     */\r\n    push(value) {\r\n        this._values.push(value);\r\n        this._onPush(value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds an item as a first item in the list.\r\n     *\r\n     * @param item  An item to add\r\n     */\r\n    unshift(value) {\r\n        this.insertIndex(0, value);\r\n        return value;\r\n    }\r\n    /**\r\n     * Adds multiple items to the list.\r\n     *\r\n     * @param items  An Array of items to add\r\n     */\r\n    pushAll(values) {\r\n        $array.each(values, (value) => {\r\n            this.push(value);\r\n        });\r\n    }\r\n    /**\r\n     * Copies and adds items from abother list.\r\n     *\r\n     * @param source  A list top copy items from\r\n     */\r\n    copyFrom(source) {\r\n        this.pushAll(source._values);\r\n    }\r\n    /**\r\n     * Returns the last item from the list, and removes it.\r\n     *\r\n     * @return Item\r\n     */\r\n    pop() {\r\n        let index = this._values.length - 1;\r\n        return index < 0 ? undefined : this.removeIndex(this._values.length - 1);\r\n    }\r\n    /**\r\n     * Returns the first item from the list, and removes it.\r\n     *\r\n     * @return Item\r\n     */\r\n    shift() {\r\n        return this._values.length ? this.removeIndex(0) : undefined;\r\n    }\r\n    /**\r\n     * Sets multiple items to the list.\r\n     *\r\n     * All current items are removed.\r\n     *\r\n     * @param newArray  New items\r\n     */\r\n    setAll(newArray) {\r\n        const old = this._values;\r\n        this._values = [];\r\n        this._onClear(old);\r\n        $array.each(newArray, (value) => {\r\n            this._values.push(value);\r\n            this._onPush(value);\r\n        });\r\n    }\r\n    /**\r\n     * Removes all items from the list.\r\n     */\r\n    clear() {\r\n        this.setAll([]);\r\n    }\r\n    /**\r\n     * Returns an ES6 iterator for the list.\r\n     */\r\n    *[Symbol.iterator]() {\r\n        const length = this._values.length;\r\n        for (let i = 0; i < length; ++i) {\r\n            yield this._values[i];\r\n        }\r\n    }\r\n    /**\r\n     * Calls `f` for each element in the list.\r\n     *\r\n     * `f` should have at least one parameter defined which will get a current\r\n     * item, with optional second argument - index.\r\n     */\r\n    each(f) {\r\n        $array.each(this._values, f);\r\n    }\r\n    /**\r\n     * Calls `f` for each element in the list, from right to left.\r\n     *\r\n     * `f` should have at least one parameter defined which will get a current\r\n     * item, with optional second argument - index.\r\n     */\r\n    eachReverse(f) {\r\n        $array.eachReverse(this._values, f);\r\n    }\r\n}\r\n/**\r\n * A version of a [[List]] where the elements are disposed automatically when\r\n * removed from the list, unless `autoDispose` is set to `false`.\r\n */\r\nexport class ListAutoDispose extends List {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Automatically disposes elements that are removed from the list.\r\n         *\r\n         * @default true\r\n         */\r\n        Object.defineProperty(this, \"autoDispose\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.autoDispose) {\r\n            oldValue.dispose();\r\n        }\r\n        super._onSetIndex(index, oldValue, newValue);\r\n    }\r\n    _onRemoveIndex(index, oldValue) {\r\n        if (this.autoDispose) {\r\n            oldValue.dispose();\r\n        }\r\n        super._onRemoveIndex(index, oldValue);\r\n    }\r\n    _onClear(oldValues) {\r\n        if (this.autoDispose) {\r\n            $array.each(oldValues, (x) => {\r\n                x.dispose();\r\n            });\r\n        }\r\n        super._onClear(oldValues);\r\n    }\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            if (this.autoDispose) {\r\n                $array.each(this._values, (x) => {\r\n                    x.dispose();\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * A version of a [[List]] that is able to create new elements as well as\r\n * apply additional settings to newly created items.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/list-templates/} for more info\r\n */\r\nexport class ListTemplate extends ListAutoDispose {\r\n    constructor(template, make) {\r\n        super();\r\n        Object.defineProperty(this, \"template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"make\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.template = template;\r\n        this.make = make;\r\n    }\r\n}\r\n//# sourceMappingURL=List.js.map","import { List } from \"./List\";\r\nimport * as $array from \"./Array\";\r\n/**\r\n * A version of [[List]] to hold children of the [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\r\n */\r\nexport class Children extends List {\r\n    constructor(container) {\r\n        super();\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_container\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._container = container;\r\n        this._events = this.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (x) => {\r\n                    this._onRemoved(x);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._onInserted(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._onRemoved(change.oldValue);\r\n                this._onInserted(change.newValue, change.index);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._onInserted(change.newValue, change.index);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._onRemoved(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._onRemoved(change.value);\r\n                this._onInserted(change.value, change.newIndex);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        });\r\n    }\r\n    _onInserted(child, index) {\r\n        child._setParent(this._container, true);\r\n        const childrenDisplay = this._container._childrenDisplay;\r\n        if (index === undefined) {\r\n            childrenDisplay.addChild(child._display);\r\n        }\r\n        else {\r\n            childrenDisplay.addChildAt(child._display, index);\r\n        }\r\n    }\r\n    _onRemoved(child) {\r\n        this._container._childrenDisplay.removeChild(child._display);\r\n        this._container.markDirtyBounds();\r\n        this._container.markDirty();\r\n    }\r\n    /**\r\n     * Returns `true` if obejct is disposed.\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Permanently dispose this object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._events.dispose();\r\n            $array.each(this.values, (child) => {\r\n                child.dispose();\r\n            });\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Children.js.map","/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Represents a relative value (percent).\r\n *\r\n * The Percent object, can be instantiated using two ways:\r\n *\r\n * * Via `new Percent(X)`.\r\n * * Via `am5.percent(X)`.\r\n *\r\n * You can also use shortcut functions for `0%`, `50%`, and `100%`:\r\n * * `am5.p0`\r\n * * `am5.p50`\r\n * * `am5.p1000`\r\n */\r\nexport class Percent {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param percent  Percent value\r\n     */\r\n    constructor(percent) {\r\n        /**\r\n         * Value in percent.\r\n         */\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._value = percent;\r\n    }\r\n    /**\r\n     * Relative value.\r\n     *\r\n     * E.g. 100% is 1, 50% is 0.5, etc.\r\n     *\r\n     * This is useful to apply transformations to other values. E.g.:\r\n     *\r\n     * ```TypeScript\r\n     * let value = 256;\r\n     * let percent = new am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     * ```JavaScript\r\n     * var value = 256;\r\n     * var percent = new am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     *\r\n     * Alternatively, you can use `am5.percent()` helper function:\r\n     *\r\n     * ```TypeScript\r\n     * let value = 256;\r\n     * let percent = am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     * ```JavaScript\r\n     * var value = 256;\r\n     * var percent = am5.p50;\r\n     * console.log(value * percent.value); // outputs 128\r\n     * ```\r\n     *\r\n     * @readonly\r\n     * @return Relative value\r\n     */\r\n    get value() {\r\n        return this._value / 100;\r\n    }\r\n    /**\r\n     * Value in percent.\r\n     *\r\n     * @return Percent\r\n     */\r\n    get percent() {\r\n        return this._value;\r\n    }\r\n    toString() {\r\n        return \"\" + this._value + \"%\";\r\n    }\r\n    interpolate(min, max) {\r\n        return min + (this.value * (max - min));\r\n    }\r\n    static normalize(percent, min, max) {\r\n        if (percent instanceof Percent) {\r\n            return percent;\r\n        }\r\n        else {\r\n            if (min === max) {\r\n                return new Percent(0);\r\n            }\r\n            else {\r\n                return new Percent(Math.min(Math.max((percent - min) * (1 / (max - min)), 0), 1) * 100);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Converts numeric percent value to a proper [[Percent]] object.\r\n *\r\n * ```TypeScript\r\n * pieSeries.set(\"radius\", am5.percent(80));\r\n * ```\r\n * ```JavaScript\r\n * pieSeries.set(\"radius\", am5.percent(80));\r\n * ```\r\n *\r\n * @param value  Percent\r\n * @return Percent object\r\n */\r\nexport function percent(value) {\r\n    return new Percent(value);\r\n}\r\n/**\r\n * A shortcut function to `am5.percent(0)`.\r\n */\r\nexport const p0 = percent(0);\r\n/**\r\n * A shortcut function to `am5.percent(100)`.\r\n */\r\nexport const p100 = percent(100);\r\n/**\r\n * A shortcut function to `am5.percent(50)`.\r\n */\r\nexport const p50 = percent(50);\r\n/**\r\n * Checks if value is a [[Percent]] object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value  Input value\r\n * @return Is percent?\r\n */\r\nexport function isPercent(value) {\r\n    return value instanceof Percent;\r\n}\r\n//# sourceMappingURL=Percent.js.map","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.push(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.push(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","import * as $array from \"./Array\";\r\nexport function keys(object) {\r\n    return Object.keys(object);\r\n}\r\n/**\r\n * Returns an array of object's property names ordered using specific ordering\r\n * function.\r\n *\r\n * @param object  Source object\r\n * @param order   Ordering function\r\n * @returns Object property names\r\n */\r\nexport function keysOrdered(object, order) {\r\n    return keys(object).sort(order);\r\n}\r\nexport function copy(object) {\r\n    return Object.assign({}, object);\r\n}\r\nexport function each(object, f) {\r\n    keys(object).forEach((key) => {\r\n        f(key, object[key]);\r\n    });\r\n}\r\n/**\r\n * Iterates through all properties of the object calling `fn` for each of them.\r\n *\r\n * If return value of the function evaluates to `false` further iteration is\r\n * cancelled.\r\n *\r\n * @param object  Source object\r\n * @param fn      Callback function\r\n */\r\nexport function eachContinue(object, fn) {\r\n    for (let key in object) {\r\n        if (hasKey(object, key)) {\r\n            if (!fn(key, object[key])) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Orders object properties using custom `ord` function and iterates through\r\n * them calling `fn` for each of them.\r\n *\r\n * @param object  Source object\r\n * @param fn      Callback function\r\n * @param order   Ordering function\r\n */\r\nexport function eachOrdered(object, fn, ord) {\r\n    $array.each(keysOrdered(object, ord), (key) => {\r\n        fn(key, object[key]);\r\n    });\r\n}\r\n/**\r\n * Checks if `object` has a specific `key`.\r\n *\r\n * @param object  Source object\r\n * @param key     Property name\r\n * @returns Has key?\r\n */\r\nexport function hasKey(object, key) {\r\n    return {}.hasOwnProperty.call(object, key);\r\n}\r\n/**\r\n * Copies all properties of one object to the other, omitting undefined, but only if property in target object doesn't have a value set.\r\n *\r\n * @param fromObject  Source object\r\n * @param toObject    Target object\r\n * @return Updated target object\r\n * @todo Maybe consolidate with utils.copy?\r\n */\r\nexport function softCopyProperties(source, target) {\r\n    each(source, (key, value) => {\r\n        // only if value is set\r\n        //if ($type.hasValue(value) && !($type.hasValue((<any>target)[key]))) {\r\n        if (value != null && target[key] == null) {\r\n            target[key] = value;\r\n        }\r\n    });\r\n    return target;\r\n}\r\n//# sourceMappingURL=Object.js.map","import * as $type from \"./Type\";\r\nimport * as $array from \"./Array\";\r\nimport * as $object from \"./Object\";\r\nimport { Disposer, DisposerClass } from \"./Disposer\";\r\n/**\r\n * ============================================================================\r\n * DOM FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Execute a function when DOM is ready.\r\n *\r\n * @since 5.0.2\r\n * @param  f  Callback\r\n */\r\nexport function ready(f) {\r\n    if (document.readyState !== \"loading\") {\r\n        f();\r\n    }\r\n    else {\r\n        const listener = () => {\r\n            if (document.readyState !== \"loading\") {\r\n                document.removeEventListener(\"readystatechange\", listener);\r\n                f();\r\n            }\r\n        };\r\n        document.addEventListener(\"readystatechange\", listener);\r\n    }\r\n}\r\n/**\r\n * Removes a DOM element.\r\n * @param  el  Target element\r\n */\r\nexport function removeElement(el) {\r\n    if (el.parentNode) {\r\n        el.parentNode.removeChild(el);\r\n    }\r\n}\r\n/**\r\n * Function that adds a disposable event listener directly to a DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param dom       A DOM element to add event to\r\n * @param type      Event type\r\n * @param listener  Event listener\r\n * @returns Disposable event\r\n */\r\nexport function addEventListener(dom, type, listener, options) {\r\n    //@todo proper type check for options: EventListenerOptions | boolean (TS for some reason gives error on passive parameter)\r\n    //console.log(type, dom);\r\n    dom.addEventListener(type, listener, options || false);\r\n    return new Disposer(() => {\r\n        dom.removeEventListener(type, listener, options || false);\r\n    });\r\n}\r\n/**\r\n * Function that adds an event listener which is triggered when the browser's zoom changes.\r\n *\r\n * @param listener  Event listener\r\n * @returns Disposable event\r\n */\r\nexport function onZoom(listener) {\r\n    // TODO use matchMedia instead ?\r\n    return addEventListener(window, \"resize\", (_ev) => {\r\n        listener();\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function supports(cap) {\r\n    switch (cap) {\r\n        case \"touchevents\":\r\n            //return \"ontouchstart\" in document.documentElement;\r\n            return window.hasOwnProperty(\"TouchEvent\");\r\n        case \"pointerevents\":\r\n            return window.hasOwnProperty(\"PointerEvent\");\r\n        case \"mouseevents\":\r\n            return window.hasOwnProperty(\"MouseEvent\");\r\n        case \"wheelevents\":\r\n            return window.hasOwnProperty(\"WheelEvent\");\r\n        case \"keyboardevents\":\r\n            return window.hasOwnProperty(\"KeyboardEvent\");\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getPointerId(event) {\r\n    let id = event.pointerId || 0;\r\n    //console.log(event);\r\n    return id;\r\n}\r\n/**\r\n * Removes focus from any element by shifting focus to body.\r\n *\r\n * @ignore\r\n */\r\nexport function blur() {\r\n    if (document.activeElement && document.activeElement != document.body) {\r\n        if (document.activeElement.blur) {\r\n            document.activeElement.blur();\r\n        }\r\n        else {\r\n            let input = document.createElement(\"button\");\r\n            input.style.position = \"fixed\";\r\n            input.style.top = \"0px\";\r\n            input.style.left = \"-10000px\";\r\n            document.body.appendChild(input);\r\n            input.focus();\r\n            input.blur();\r\n            document.body.removeChild(input);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Focuses element.\r\n *\r\n * @ignore\r\n */\r\nexport function focus(el) {\r\n    if (el) {\r\n        el.focus();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getRendererEvent(key) {\r\n    if (supports(\"pointerevents\")) {\r\n        return key;\r\n    }\r\n    else if (supports(\"touchevents\")) {\r\n        switch (key) {\r\n            case \"pointerover\": return \"touchstart\";\r\n            case \"pointerout\": return \"touchend\";\r\n            case \"pointerdown\": return \"touchstart\";\r\n            case \"pointermove\": return \"touchmove\";\r\n            case \"pointerup\": return \"touchend\";\r\n            case \"click\": return \"click\";\r\n            case \"dblclick\": return \"dblclick\";\r\n        }\r\n    }\r\n    else if (supports(\"mouseevents\")) {\r\n        switch (key) {\r\n            case \"pointerover\": return \"mouseover\";\r\n            case \"pointerout\": return \"mouseout\";\r\n            case \"pointerdown\": return \"mousedown\";\r\n            case \"pointermove\": return \"mousemove\";\r\n            case \"pointerup\": return \"mouseup\";\r\n            case \"click\": return \"click\";\r\n            case \"dblclick\": return \"dblclick\";\r\n        }\r\n    }\r\n    return key;\r\n}\r\n/**\r\n * Determines if pointer event originated from a touch pointer or mouse.\r\n *\r\n * @param ev  Original event\r\n * @return Touch pointer?\r\n */\r\nexport function isTouchEvent(ev) {\r\n    if (typeof Touch !== \"undefined\" && ev instanceof Touch) {\r\n        return true;\r\n    }\r\n    else if (typeof PointerEvent !== \"undefined\" && ev instanceof PointerEvent && ev.pointerType != null) {\r\n        switch (ev.pointerType) {\r\n            case \"touch\":\r\n            case \"pen\":\r\n            case 2:\r\n                return true;\r\n            case \"mouse\":\r\n            case 4:\r\n                return false;\r\n            default:\r\n                return !(ev instanceof MouseEvent);\r\n        }\r\n    }\r\n    else if (ev.type != null) {\r\n        if (ev.type.match(/^mouse/)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Sets style property on DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport function setStyle(dom, property, value) {\r\n    dom.style[property] = value;\r\n}\r\nexport function getStyle(dom, property) {\r\n    return dom.style[property];\r\n}\r\n/**\r\n * Checks of element `a` contains element `b`.\r\n *\r\n * @param a  Aleged ascendant\r\n * @param b  Aleged descendant\r\n * @return Contains?\r\n */\r\nexport function contains(a, b) {\r\n    let cursor = b;\r\n    while (true) {\r\n        if (a === cursor) {\r\n            return true;\r\n        }\r\n        else if (cursor.parentNode === null) {\r\n            // TODO better ShadowRoot detection\r\n            if (cursor.host == null) {\r\n                return false;\r\n            }\r\n            else {\r\n                cursor = cursor.host;\r\n            }\r\n        }\r\n        else {\r\n            cursor = cursor.parentNode;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns `true` if pointer event originated on an element within Root.\r\n *\r\n * @since 5.2.8\r\n * @param  event   Event\r\n * @param  target  Target element\r\n */\r\nexport function isLocalEvent(event, target) {\r\n    return event.target && contains(target.root.dom, event.target);\r\n}\r\n/**\r\n * Disables or enables interactivity of a DOM element.\r\n *\r\n * @param  target       Target element\r\n * @param  interactive  Interactive?\r\n */\r\nexport function setInteractive(target, interactive) {\r\n    if (interactive) {\r\n        target.style.pointerEvents = \"auto\";\r\n    }\r\n    else {\r\n        target.style.pointerEvents = \"none\";\r\n    }\r\n}\r\n/**\r\n * Returns the shadow root of the element or null\r\n *\r\n * @param a  Node\r\n * @return Root\r\n */\r\nexport function getShadowRoot(a) {\r\n    let cursor = a;\r\n    while (true) {\r\n        if (cursor.parentNode === null) {\r\n            // TODO better ShadowRoot detection\r\n            if (cursor.host != null) {\r\n                return cursor;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            cursor = cursor.parentNode;\r\n        }\r\n    }\r\n}\r\n/**\r\n * [rootStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nlet rootStylesheet;\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nfunction createStylesheet(element, text, nonce = \"\") {\r\n    // TODO use createElementNS ?\r\n    const e = document.createElement(\"style\");\r\n    e.type = \"text/css\";\r\n    if (nonce != \"\") {\r\n        e.setAttribute(\"nonce\", nonce);\r\n    }\r\n    e.textContent = text;\r\n    if (element === null) {\r\n        document.head.appendChild(e);\r\n    }\r\n    else {\r\n        element.appendChild(e);\r\n    }\r\n    return e;\r\n}\r\n/**\r\n * [getStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @return [description]\r\n */\r\nfunction getStylesheet(element, nonce = \"\") {\r\n    if (element === null) {\r\n        if (rootStylesheet == null) {\r\n            // TODO use createElementNS ?\r\n            const e = document.createElement(\"style\");\r\n            e.type = \"text/css\";\r\n            if (nonce != \"\") {\r\n                e.setAttribute(\"nonce\", nonce);\r\n            }\r\n            document.head.appendChild(e);\r\n            rootStylesheet = e.sheet;\r\n        }\r\n        return rootStylesheet;\r\n    }\r\n    else {\r\n        // TODO use createElementNS ?\r\n        const e = document.createElement(\"style\");\r\n        e.type = \"text/css\";\r\n        if (nonce != \"\") {\r\n            e.setAttribute(\"nonce\", nonce);\r\n        }\r\n        element.appendChild(e);\r\n        return e.sheet;\r\n    }\r\n}\r\n/**\r\n * [makeStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param selector  [description]\r\n * @return [description]\r\n */\r\nfunction appendStylesheet(root, selector) {\r\n    const index = root.cssRules.length;\r\n    root.insertRule(selector + \"{}\", index);\r\n    return root.cssRules[index];\r\n}\r\n/**\r\n * Defines a class for a CSS rule.\r\n *\r\n * Can be used to dynamically add CSS to the document.\r\n */\r\nexport class StyleRule extends DisposerClass {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param selector  CSS selector\r\n     * @param styles    An object of style attribute - value pairs\r\n     */\r\n    constructor(element, selector, styles, nonce = \"\") {\r\n        super();\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * CSS rule.\r\n         */\r\n        Object.defineProperty(this, \"_rule\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._root = getStylesheet(element, nonce);\r\n        try {\r\n            this._rule = appendStylesheet(this._root, selector);\r\n            $object.each(styles, (key, value) => {\r\n                this.setStyle(key, value);\r\n            });\r\n        }\r\n        catch (err) {\r\n            // Create an empty rule on failed selectors\r\n            this._rule = new CSSStyleRule();\r\n        }\r\n    }\r\n    /**\r\n     * A CSS selector text.\r\n     *\r\n     * E.g.: `.myClass p`\r\n     *\r\n     * @param selector  CSS selector\r\n     */\r\n    set selector(selector) {\r\n        this._rule.selectorText = selector;\r\n    }\r\n    /**\r\n     * @return CSS selector\r\n     */\r\n    get selector() {\r\n        return this._rule.selectorText;\r\n    }\r\n    // TODO test this\r\n    _dispose() {\r\n        // TODO a bit hacky\r\n        const index = $array.indexOf(this._root.cssRules, this._rule);\r\n        if (index === -1) {\r\n            throw new Error(\"Could not dispose StyleRule\");\r\n        }\r\n        else {\r\n            // TODO if it's empty remove it from the DOM ?\r\n            this._root.deleteRule(index);\r\n        }\r\n    }\r\n    /**\r\n     * Sets the same style properties with browser-specific prefixes.\r\n     *\r\n     * @param name   Attribute name\r\n     * @param value  Attribute value\r\n     */\r\n    _setVendorPrefixName(name, value) {\r\n        const style = this._rule.style;\r\n        style.setProperty(\"-webkit-\" + name, value, \"\");\r\n        style.setProperty(\"-moz-\" + name, value, \"\");\r\n        style.setProperty(\"-ms-\" + name, value, \"\");\r\n        style.setProperty(\"-o-\" + name, value, \"\");\r\n        style.setProperty(name, value, \"\");\r\n    }\r\n    /**\r\n     * Sets a value for specific style attribute.\r\n     *\r\n     * @param name   Attribute\r\n     * @param value  Value\r\n     */\r\n    setStyle(name, value) {\r\n        if (name === \"transition\") {\r\n            this._setVendorPrefixName(name, value);\r\n        }\r\n        else {\r\n            this._rule.style.setProperty(name, value, \"\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Defines a class for an entire CSS style sheet.\r\n *\r\n * Can be used to dynamically add CSS to the document.\r\n */\r\nexport class StyleSheet extends DisposerClass {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param text  CSS stylesheet\r\n     */\r\n    constructor(element, text, nonce = \"\") {\r\n        super();\r\n        Object.defineProperty(this, \"_element\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._element = createStylesheet(element, text, nonce);\r\n    }\r\n    _dispose() {\r\n        if (this._element.parentNode) {\r\n            this._element.parentNode.removeChild(this._element);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Adds a class name to an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\r\nexport function addClass(element, className) {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    if (element.classList) {\r\n        const classes = className.split(\" \");\r\n        $array.each(classes, (name) => {\r\n            element.classList.add(name);\r\n        });\r\n    }\r\n    else {\r\n        let currentClassName = element.getAttribute(\"class\");\r\n        if (currentClassName) {\r\n            element.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\r\n                return item !== className;\r\n            }).join(\" \") + \" \" + className);\r\n        }\r\n        else {\r\n            element.setAttribute(\"class\", className);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Removes a class name from an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\r\nexport function removeClass(element, className) {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    if (element.classList) {\r\n        element.classList.remove(className);\r\n    }\r\n    else {\r\n        let currentClassName = element.getAttribute(\"class\");\r\n        if (currentClassName) {\r\n            element.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\r\n                return item !== className;\r\n            }).join(\" \"));\r\n        }\r\n    }\r\n}\r\n// /**\r\n//  * Applies a set of styles to an element. Stores the original styles so they\r\n//  * can be restored later.\r\n//  *\r\n//  * @ignore\r\n//  * @param io      Element\r\n//   */\r\n// export function prepElementForDrag(dom: HTMLElement): void {\r\n// \t// @todo: save current values\r\n// \t// Define possible props\r\n// \tlet props = [\r\n// \t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\r\n// \t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\r\n// \t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\r\n// \t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\r\n// \t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\r\n// \t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\r\n// \t];\r\n// \tfor (let i = 0; i < props.length; i++) {\r\n// \t\tif (props[i] in dom.style) {\r\n// \t\t\tsetStyle(dom, props[i], \"none\");\r\n// \t\t}\r\n// \t}\r\n// \t// Remove iOS-specific selection;\r\n// \tsetStyle(dom, \"tapHighlightColor\", \"rgba(0, 0, 0, 0)\");\r\n// }\r\n// /**\r\n//  * Restores replaced styles\r\n//  *\r\n//  * @ignore\r\n//  * @param  io  Element\r\n//  */\r\n// export function unprepElementForDrag(dom: HTMLElement): void {\r\n// \t// Define possible props\r\n// \tlet props = [\r\n// \t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\r\n// \t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\r\n// \t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\r\n// \t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\r\n// \t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\r\n// \t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\r\n// \t];\r\n// \tfor (let i = 0; i < props.length; i++) {\r\n// \t\tif (props[i] in dom.style) {\r\n// \t\t\tsetStyle(dom, props[i], \"\");\r\n// \t\t}\r\n// \t}\r\n// \t// Remove iOS-specific selection;\r\n// \tsetStyle(dom, \"tapHighlightColor\", \"\");\r\n// }\r\nexport function iOS() {\r\n    return /apple/i.test(navigator.vendor) && \"ontouchend\" in document;\r\n}\r\nexport function getSafeResolution() {\r\n    return iOS() ? 1 : undefined;\r\n}\r\nexport function relativeToValue(percent, full) {\r\n    if ($type.isNumber(percent)) {\r\n        return percent;\r\n    }\r\n    else if (percent != null && $type.isNumber(percent.value) && $type.isNumber(full)) {\r\n        return full * percent.value;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n/**\r\n * Returns number of decimals\r\n *\r\n * @ignore Exclude from docs\r\n * @param number  Input number\r\n * @return Number of decimals\r\n */\r\nexport function decimalPlaces(number) {\r\n    let match = ('' + number).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\r\n    if (!match) {\r\n        return 0;\r\n    }\r\n    return Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));\r\n}\r\n/**\r\n * ============================================================================\r\n * STRING FORMATTING FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Pads a string with additional characters to certain length.\r\n *\r\n * @param value  A numeric value\r\n * @param len    Result string length in characters\r\n * @param char   A character to use for padding\r\n * @return Padded value as string\r\n */\r\nexport function padString(value, len = 0, char = \"0\") {\r\n    if (typeof value !== \"string\") {\r\n        value = value.toString();\r\n    }\r\n    return len > value.length ? Array(len - value.length + 1).join(char) + value : value;\r\n}\r\nexport function trimLeft(text) {\r\n    return text.replace(/^[\\s]*/, \"\");\r\n}\r\nexport function trimRight(text) {\r\n    return text.replace(/[\\s]*$/, \"\");\r\n}\r\nexport function trim(text) {\r\n    return trimLeft(trimRight(text));\r\n}\r\n/**\r\n * Tries to determine format type.\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format string\r\n * @return Format type (\"string\" | \"number\" | \"date\" | \"duration\")\r\n */\r\nexport function getFormat(format) {\r\n    // Undefined?\r\n    if (typeof format === \"undefined\") {\r\n        return \"string\";\r\n    }\r\n    // Cleanup and lowercase format\r\n    format = format.toLowerCase().replace(/^\\[[^\\]]*\\]/, \"\");\r\n    // Remove style tags\r\n    format = format.replace(/\\[[^\\]]+\\]/, \"\");\r\n    // Trim\r\n    format = format.trim();\r\n    // Check for any explicit format hints (i.e. /Date)\r\n    let hints = format.match(/\\/(date|number|duration)$/);\r\n    if (hints) {\r\n        return hints[1];\r\n    }\r\n    // Check for explicit hints\r\n    if (format === \"number\") {\r\n        return \"number\";\r\n    }\r\n    if (format === \"date\") {\r\n        return \"date\";\r\n    }\r\n    if (format === \"duration\") {\r\n        return \"duration\";\r\n    }\r\n    // Detect number formatting symbols\r\n    if (format.match(/[#0]/)) {\r\n        return \"number\";\r\n    }\r\n    // Detect date formatting symbols\r\n    if (format.match(/[ymwdhnsqaxkzgtei]/)) {\r\n        return \"date\";\r\n    }\r\n    // Nothing? Let's display as string\r\n    return \"string\";\r\n}\r\n/**\r\n * Cleans up format:\r\n * * Strips out formatter hints\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format\r\n * @return Cleaned format\r\n */\r\nexport function cleanFormat(format) {\r\n    return format.replace(/\\/(date|number|duration)$/i, \"\");\r\n}\r\n/**\r\n * Strips all tags from the string.\r\n *\r\n * @param text  Source string\r\n * @return String without tags\r\n */\r\nexport function stripTags(text) {\r\n    return text ? text.replace(/<[^>]*>/g, \"\") : text;\r\n}\r\n/**\r\n * Removes new lines and tags from a string.\r\n *\r\n * @param text  String to conver\r\n * @return Converted string\r\n */\r\nexport function plainText(text) {\r\n    return text ? stripTags((\"\" + text).replace(/[\\n\\r]+/g, \". \")) : text;\r\n}\r\n/**\r\n * Escapes string so it can safely be used in a Regex.\r\n *\r\n * @param value  Unsescaped string\r\n * @return Escaped string\r\n */\r\nexport function escapeForRgex(value) {\r\n    return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n}\r\n/**\r\n * Adds space before each uppercase letter.\r\n *\r\n * @param   str Input string\r\n * @return      Output string\r\n */\r\nexport function addSpacing(str) {\r\n    let result = \"\";\r\n    for (let i = 0; i < str.length; i++) {\r\n        const char = str.charAt(i);\r\n        if (char.toUpperCase() == char && i != 0) {\r\n            result += \" \";\r\n        }\r\n        result += char;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * ============================================================================\r\n * DATE-RELATED FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns a year day.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Year day\r\n * @todo Account for UTC\r\n */\r\nexport function getYearDay(date, utc = false) {\r\n    // TODO: utc needed?\r\n    utc;\r\n    const start = new Date(date.getFullYear(), 0, 0);\r\n    const diff = (date.getTime() - start.getTime()) + ((start.getTimezoneOffset() - date.getTimezoneOffset()) * 60 * 1000);\r\n    const oneDay = 1000 * 60 * 60 * 24;\r\n    return Math.floor(diff / oneDay);\r\n}\r\n/**\r\n * Returns week number for a given date.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number\r\n * @todo Account for UTC\r\n */\r\nexport function getWeek(date, _utc = false) {\r\n    const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n    const day = d.getUTCDay() || 7;\r\n    d.setUTCDate(d.getUTCDate() + 4 - day);\r\n    const firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n    return Math.ceil((((d.getTime() - firstDay.getTime()) / 86400000) + 1) / 7);\r\n}\r\n/**\r\n * Returns a \"week year\" of the given date.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Year of week\r\n * @since 5.3.0\r\n * @todo Account for UTC\r\n */\r\nexport function getWeekYear(date, _utc = false) {\r\n    const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n    const day = d.getUTCDay() || 7;\r\n    d.setUTCDate(d.getUTCDate() + 4 - day);\r\n    const firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n    return firstDay.getFullYear();\r\n}\r\n/**\r\n * Returns a week number in the month.\r\n *\r\n * @param date  Source Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number in month\r\n */\r\nexport function getMonthWeek(date, utc = false) {\r\n    const firstWeek = getWeek(new Date(date.getFullYear(), date.getMonth(), 1), utc);\r\n    let currentWeek = getWeek(date, utc);\r\n    if (currentWeek == 1) {\r\n        currentWeek = 53;\r\n    }\r\n    return currentWeek - firstWeek + 1;\r\n}\r\n/**\r\n * Returns a year day out of the given week number.\r\n *\r\n * @param week     Week\r\n * @param year     Year\r\n * @param weekday  Weekday\r\n * @param utc      Assume UTC dates\r\n * @return Day in a year\r\n */\r\nexport function getDayFromWeek(week, year, weekday = 1, utc = false) {\r\n    let date = new Date(year, 0, 4, 0, 0, 0, 0);\r\n    if (utc) {\r\n        date.setUTCFullYear(year);\r\n    }\r\n    let day = week * 7 + weekday - ((date.getDay() || 7) + 3);\r\n    return day;\r\n}\r\n/**\r\n * Returns 12-hour representation out of the 24-hour hours.\r\n *\r\n * @param hours  24-hour number\r\n * @return 12-hour number\r\n */\r\nexport function get12Hours(hours, base) {\r\n    if (hours > 12) {\r\n        hours -= 12;\r\n    }\r\n    else if (hours === 0) {\r\n        hours = 12;\r\n    }\r\n    return base != null ? hours + (base - 1) : hours;\r\n}\r\n/**\r\n * Returns a string name of the time zone.\r\n *\r\n * @param date     Date object\r\n * @param long     Should return long (\"Pacific Standard Time\") or short abbreviation (\"PST\")\r\n * @param savings  Include information if it's in daylight savings mode\r\n * @param utc      Assume UTC dates\r\n * @return Time zone name\r\n */\r\nexport function getTimeZone(date, long = false, savings = false, utc = false) {\r\n    if (utc) {\r\n        return long ? \"Coordinated Universal Time\" : \"UTC\";\r\n    }\r\n    let wotz = date.toLocaleString(\"UTC\");\r\n    let wtz = date.toLocaleString(\"UTC\", { timeZoneName: long ? \"long\" : \"short\" }).substr(wotz.length);\r\n    //wtz = wtz.replace(/[+-]+[0-9]+$/, \"\");\r\n    if (savings === false) {\r\n        wtz = wtz.replace(/ (standard|daylight|summer|winter) /i, \" \");\r\n    }\r\n    return wtz;\r\n}\r\nexport function getTimezoneOffset(timezone) {\r\n    const date = new Date(Date.UTC(2012, 0, 1, 0, 0, 0, 0));\r\n    const utcDate = new Date(date.toLocaleString('en-US', { timeZone: 'UTC' }));\r\n    const tzDate = new Date(date.toLocaleString('en-US', { timeZone: timezone }));\r\n    return (tzDate.getTime() - utcDate.getTime()) / 6e4 * -1;\r\n}\r\nexport function capitalizeFirst(text) {\r\n    return text.charAt(0).toUpperCase() + text.slice(1);\r\n}\r\n/**\r\n * The functions below are taken and adapted from Garry Tan's blog post:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * The further attributions go mjijackson.com, which now seems to be defunct.\r\n */\r\n/**\r\n * Converts an HSL color value to RGB. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes h, s, and l are contained in the set [0, 1] and\r\n * returns r, g, and b in the set [0, 255].\r\n *\r\n * Function adapted from:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * @ignore Exclude from docs\r\n * @param h       The hue\r\n * @param s       The saturation\r\n * @param l       The lightness\r\n * @return The RGB representation\r\n */\r\nexport function hslToRgb(color) {\r\n    let r, g, b;\r\n    let h = color.h;\r\n    let s = color.s;\r\n    let l = color.l;\r\n    if (s == 0) {\r\n        r = g = b = l; // achromatic\r\n    }\r\n    else {\r\n        let hue2rgb = function hue2rgb(p, q, t) {\r\n            if (t < 0) {\r\n                t += 1;\r\n            }\r\n            if (t > 1) {\r\n                t -= 1;\r\n            }\r\n            if (t < 1 / 6) {\r\n                return p + (q - p) * 6 * t;\r\n            }\r\n            if (t < 1 / 2) {\r\n                return q;\r\n            }\r\n            if (t < 2 / 3) {\r\n                return p + (q - p) * (2 / 3 - t) * 6;\r\n            }\r\n            return p;\r\n        };\r\n        let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n        let p = 2 * l - q;\r\n        r = hue2rgb(p, q, h + 1 / 3);\r\n        g = hue2rgb(p, q, h);\r\n        b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n    return {\r\n        r: Math.round(r * 255),\r\n        g: Math.round(g * 255),\r\n        b: Math.round(b * 255)\r\n    };\r\n}\r\n/**\r\n * Converts an RGB color value to HSL. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes r, g, and b are contained in the set [0, 255] and\r\n * returns h, s, and l in the set [0, 1].\r\n *\r\n * Function adapted from:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * @ignore Exclude from docs\r\n * @param r       The red color value\r\n * @param g       The green color value\r\n * @param b       The blue color value\r\n * @return The HSL representation\r\n */\r\nexport function rgbToHsl(color) {\r\n    let r = color.r / 255;\r\n    let g = color.g / 255;\r\n    let b = color.b / 255;\r\n    let max = Math.max(r, g, b);\r\n    let min = Math.min(r, g, b);\r\n    let h = 0;\r\n    let s = 0;\r\n    let l = (max + min) / 2;\r\n    if (max === min) {\r\n        h = s = 0; // achromatic\r\n    }\r\n    else {\r\n        let d = max - min;\r\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n        switch (max) {\r\n            case r:\r\n                h = (g - b) / d + (g < b ? 6 : 0);\r\n                break;\r\n            case g:\r\n                h = (b - r) / d + 2;\r\n                break;\r\n            case b:\r\n                h = (r - g) / d + 4;\r\n                break;\r\n        }\r\n        h /= 6;\r\n    }\r\n    return {\r\n        h: h,\r\n        s: s,\r\n        l: l\r\n    };\r\n}\r\n/**\r\n * Returns a color that is `percent` brighter than the reference color.\r\n *\r\n * @ignore Exclude from docs\r\n * @param color    Reference color\r\n * @param percent  Brightness percent\r\n * @return Hex code of the new color\r\n */\r\nexport function lighten(rgb, percent) {\r\n    if (rgb) {\r\n        return {\r\n            r: Math.max(0, Math.min(255, rgb.r + getLightnessStep(rgb.r, percent))),\r\n            g: Math.max(0, Math.min(255, rgb.g + getLightnessStep(rgb.g, percent))),\r\n            b: Math.max(0, Math.min(255, rgb.b + getLightnessStep(rgb.b, percent))),\r\n            a: rgb.a\r\n        };\r\n    }\r\n    else {\r\n        // TODO is this correct ?\r\n        return rgb;\r\n    }\r\n}\r\n;\r\n/**\r\n * Gets lightness step.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value    Value\r\n * @param percent  Percent\r\n * @return Step\r\n */\r\nexport function getLightnessStep(value, percent) {\r\n    let base = percent > 0 ? 255 - value : value;\r\n    return Math.round(base * percent);\r\n}\r\n/**\r\n * Returns a color that is `percent` brighter than the source `color`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param color    Source color\r\n * @param percent  Brightness percent\r\n * @return New color\r\n */\r\nexport function brighten(rgb, percent) {\r\n    if (rgb) {\r\n        let base = Math.min(Math.max(rgb.r, rgb.g, rgb.b), 230);\r\n        //let base = Math.max(rgb.r, rgb.g, rgb.b);\r\n        let step = getLightnessStep(base, percent);\r\n        return {\r\n            r: Math.max(0, Math.min(255, Math.round(rgb.r + step))),\r\n            g: Math.max(0, Math.min(255, Math.round(rgb.g + step))),\r\n            b: Math.max(0, Math.min(255, Math.round(rgb.b + step))),\r\n            a: rgb.a\r\n        };\r\n    }\r\n    else {\r\n        // TODO is this correct ?\r\n        return rgb;\r\n    }\r\n}\r\n;\r\n/**\r\n * Returns brightness step.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value    Value\r\n * @param percent  Percent\r\n * @return Step\r\n */\r\nexport function getBrightnessStep(_value, percent) {\r\n    let base = 255; //percent > 0 ? 255 - value : value;\r\n    return Math.round(base * percent);\r\n}\r\n/**\r\n * Returns `true` if color is \"light\". Useful indetermining which contrasting\r\n * color to use for elements over this color. E.g.: you would want to use\r\n * black text over light background, and vice versa.\r\n *\r\n * @ignore Exclude from docs\r\n * @param color  Source color\r\n * @return Light?\r\n */\r\nexport function isLight(color) {\r\n    return ((color.r * 299) + (color.g * 587) + (color.b * 114)) / 1000 >= 128;\r\n}\r\n/**\r\n * Returns a new [[iRGB]] object based on `rgb` parameter with specific\r\n * saturation applied.\r\n *\r\n * `saturation` can be in the range of 0 (fully desaturated) to 1 (fully\r\n * saturated).\r\n *\r\n * @ignore Exclude from docs\r\n * @param color       Base color\r\n * @param saturation  Saturation (0-1)\r\n * @return New color\r\n */\r\nexport function saturate(rgb, saturation) {\r\n    if (rgb === undefined || saturation == 1) {\r\n        return rgb;\r\n    }\r\n    let hsl = rgbToHsl(rgb);\r\n    hsl.s = saturation;\r\n    return hslToRgb(hsl);\r\n}\r\nexport function alternativeColor(color, lightAlternative = { r: 255, g: 255, b: 255 }, darkAlternative = { r: 255, g: 255, b: 255 }) {\r\n    let light = lightAlternative;\r\n    let dark = darkAlternative;\r\n    if (isLight(darkAlternative)) {\r\n        light = darkAlternative;\r\n        dark = lightAlternative;\r\n    }\r\n    return isLight(color) ? dark : light;\r\n}\r\n/**\r\n * @ignore\r\n * @deprecated\r\n */\r\n// export function unshiftThemeClass(settings: any, themeClass: string) {\r\n// \tlet themeClasses = settings.themeClasses;\r\n// \tif (!themeClasses) {\r\n// \t\tthemeClasses = [];\r\n// \t}\r\n// \tthemeClasses.unshift(themeClass);\r\n// \tsettings.themeClasses = themeClasses;\r\n// }\r\n/**\r\n * @ignore\r\n * @deprecated\r\n */\r\n// export function pushThemeClass(settings: any, themeClass: string) {\r\n// \tlet themeClasses = settings.themeClasses;\r\n// \tif (!themeClasses) {\r\n// \t\tthemeClasses = [];\r\n// \t}\r\n// \tthemeClasses.push(themeClass);\r\n// \tsettings.themeClasses = themeClasses;\r\n// }\r\n/**\r\n * @ignore\r\n */\r\nexport function mergeTags(tags1, tags2) {\r\n    if (!tags1) {\r\n        tags1 = [];\r\n    }\r\n    return [...tags1, ...tags2].filter((value, index, self) => {\r\n        return self.indexOf(value) === index;\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function sameBounds(a, b) {\r\n    if (!b) {\r\n        return false;\r\n    }\r\n    if (a.left != b.left) {\r\n        return false;\r\n    }\r\n    if (a.right != b.right) {\r\n        return false;\r\n    }\r\n    if (a.top != b.top) {\r\n        return false;\r\n    }\r\n    if (a.bottom != b.bottom) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n//# sourceMappingURL=Utils.js.map","import { range } from \"./Animation\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * @ignore\r\n */\r\nfunction string2hex(string) {\r\n    //string = cssColorNames[string.toLowerCase()] || string;\r\n    if (string[0] === \"#\") {\r\n        string = string.substr(1);\r\n    }\r\n    if (string.length == 3) {\r\n        string = string[0].repeat(2) + string[1].repeat(2) + string[2].repeat(2);\r\n    }\r\n    return parseInt(string, 16);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function rgba2hex(color) {\r\n    color = color.replace(/[ ]/g, \"\");\r\n    // Init\r\n    let matches = color.match(/^rgb\\(([0-9]*),([0-9]*),([0-9]*)\\)/i);\r\n    // Try rgb() format\r\n    if (matches) {\r\n        matches.push(\"1\");\r\n    }\r\n    else {\r\n        matches = color.match(/^rgba\\(([0-9]*),([0-9]*),([0-9]*),([.0-9]*)\\)/i);\r\n        if (!matches) {\r\n            return 0x000000;\r\n        }\r\n    }\r\n    let hex = \"\";\r\n    for (let i = 1; i <= 3; i++) {\r\n        let val = parseInt(matches[i]).toString(16);\r\n        if (val.length == 1) {\r\n            val = \"0\" + val;\r\n        }\r\n        hex += val;\r\n    }\r\n    return string2hex(hex);\r\n}\r\n/**\r\n * Returns a new [[Color]] object base on input.\r\n *\r\n * Accepts parameters in CSS hex or rgb/rtba strings, or hex numbers.\r\n *\r\n * * `\"#f00\"`\r\n * * `\"#ff0000\"`\r\n * * `\"rgb(255, 0, 0)\"`\r\n * * `\"rgba(255, 0, 0, 1)\"`\r\n * * `0xff0000`\r\n *\r\n * @param   input  Input color\r\n * @return         Color\r\n */\r\nexport function color(input) {\r\n    return Color.fromAny(input);\r\n}\r\n/**\r\n * Wherever color needs to be specified in amCharts 5, `Color` object needs to\r\n * be used.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/} for more info\r\n * @important\r\n */\r\nexport class Color {\r\n    constructor(hex) {\r\n        Object.defineProperty(this, \"_hex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._hex = hex | 0;\r\n    }\r\n    /**\r\n     * Color numeric value.\r\n     */\r\n    get hex() {\r\n        return this._hex;\r\n    }\r\n    /**\r\n     * Value of color's R channel.\r\n     * @return R value\r\n     */\r\n    get r() {\r\n        return this._hex >>> 16;\r\n    }\r\n    /**\r\n     * Value of color's G channel.\r\n     * @return G value\r\n     */\r\n    get g() {\r\n        return (this._hex >> 8) & 0xFF;\r\n    }\r\n    /**\r\n     * Value of color's B channel.\r\n     * @return B value\r\n     */\r\n    get b() {\r\n        return this._hex & 0xFF;\r\n    }\r\n    /**\r\n     * Returns color CSS representation in form of `rgba(r, g, b, a)` string.\r\n     *\r\n     * @param   alpha  Opacity\r\n     * @return         CSS string\r\n     */\r\n    toCSS(alpha = 1) {\r\n        return \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + alpha + \")\";\r\n    }\r\n    /**\r\n     * Returns color CSS representation in form of `#rgb` string.\r\n     *\r\n     * @return         CSS string\r\n     */\r\n    toCSSHex() {\r\n        return \"#\" + $utils.padString(this.r.toString(16), 2) + $utils.padString(this.g.toString(16), 2) + $utils.padString(this.b.toString(16), 2);\r\n    }\r\n    /**\r\n     * Returns color's HSL info.\r\n     * @param   alpha Opacity\r\n     * @return        HSL info\r\n     */\r\n    toHSL(alpha = 1) {\r\n        return $utils.rgbToHsl({\r\n            r: this.r,\r\n            g: this.g,\r\n            b: this.b,\r\n            a: alpha\r\n        });\r\n    }\r\n    /**\r\n     * Converts HSL values into a new [[Color]] object.\r\n     *\r\n     * @param   h H value\r\n     * @param   s S value\r\n     * @param   l L value\r\n     * @return    Color object\r\n     */\r\n    static fromHSL(h, s, l) {\r\n        const rgb = $utils.hslToRgb({\r\n            h: h,\r\n            s: s,\r\n            l: l\r\n        });\r\n        return this.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    toString() {\r\n        return this.toCSSHex();\r\n    }\r\n    /**\r\n     * Converts hex number into a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromHex(0xff0000) // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromHex(0xff0000) // red\r\n     * ```\r\n     *\r\n     * @param   hex  Hex color\r\n     * @return       Color\r\n     */\r\n    static fromHex(hex) {\r\n        return new Color(hex);\r\n    }\r\n    /**\r\n     * Converts RGB values to a new [[Color]] object.\r\n     *\r\n     * @param   r  R value\r\n     * @param   g  G value\r\n     * @param   b  B value\r\n     * @return     Color\r\n     */\r\n    static fromRGB(r, g, b) {\r\n        return new Color((b | 0) + (g << 8) + (r << 16));\r\n    }\r\n    /**\r\n     * Converts RGB string to a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromString(\"#ff0000\") // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromString(\"#ff0000\") // red\r\n     * ```\r\n     *\r\n     * @param   s  RGB string\r\n     * @return     Color\r\n     */\r\n    static fromString(s) {\r\n        return new Color(string2hex(s));\r\n    }\r\n    /**\r\n     * Converts CSS rgba() syntax to a new [[Color]] object.\r\n     *\r\n     * ```TypeScript\r\n     * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\r\n     * ```\r\n     * ```JavaScript\r\n     * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\r\n     * ```\r\n     *\r\n     * @param  {string} s [description]\r\n     * @return {Color}    [description]\r\n     */\r\n    static fromCSS(s) {\r\n        return new Color(rgba2hex(s));\r\n    }\r\n    /**\r\n     * Convert to color from virtually anything.\r\n     *\r\n     * Will throw an exception if unable to resolve the color.\r\n     *\r\n     * @param   s  Source\r\n     * @return     Color\r\n     */\r\n    static fromAny(s) {\r\n        if ($type.isString(s)) {\r\n            if (s[0] == \"#\") {\r\n                return Color.fromString(s);\r\n            }\r\n            else if (s.substr(0, 3) == \"rgb\") {\r\n                return Color.fromCSS(s);\r\n            }\r\n        }\r\n        else if ($type.isNumber(s)) {\r\n            return Color.fromHex(s);\r\n        }\r\n        else if (s instanceof Color) {\r\n            return Color.fromHex(s.hex);\r\n        }\r\n        throw new Error(\"Unknown color syntax: \" + s);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] object based on either `lightAlternative` or\r\n     * `darkAlternative` depending on which one is more contrasting with\r\n     * the `color`.\r\n     *\r\n     * @param   color             Reference color\r\n     * @param   lightAlternative  Light color\r\n     * @param   darkAlternative   Dark color\r\n     * @return                    Alternative color\r\n     */\r\n    static alternative(color, lightAlternative, darkAlternative) {\r\n        const rgb = $utils.alternativeColor({ r: color.r, g: color.g, b: color.b }, lightAlternative ? { r: lightAlternative.r, g: lightAlternative.g, b: lightAlternative.b } : undefined, darkAlternative ? { r: darkAlternative.r, g: darkAlternative.g, b: darkAlternative.b } : undefined);\r\n        return this.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns an intermediate Color between two reference colors depending on\r\n     * the progress (`diff`) between the two.\r\n     *\r\n     * @param   diff  Progress\r\n     * @param   from  Source color\r\n     * @param   to    Target color\r\n     * @param   mode  Interpolation mode\r\n     * @return        Color\r\n     */\r\n    static interpolate(diff, from, to, mode = \"rgb\") {\r\n        if (mode == \"hsl\") {\r\n            const fromHSL = from.toHSL();\r\n            const toHSL = to.toHSL();\r\n            return Color.fromHSL(range(diff, fromHSL.h, toHSL.h), range(diff, fromHSL.s, toHSL.s), range(diff, fromHSL.l, toHSL.l));\r\n        }\r\n        else {\r\n            return Color.fromRGB(range(diff, from.r, to.r), range(diff, from.g, to.g), range(diff, from.b, to.b));\r\n        }\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] lightened by `percent` value.\r\n     *\r\n     * Use negative value to darken the color.\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static lighten(color, percent) {\r\n        const rgb = $utils.lighten({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] brightened by `percent` value.\r\n     *\r\n     * Use negative value to dim the color.\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static brighten(color, percent) {\r\n        const rgb = $utils.brighten({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n    /**\r\n     * Returns a new [[Color]] saturated by `percent` value.\r\n     *\r\n     * Value range is between `0` (fully desaturated), to `1` (full color).\r\n     *\r\n     * @param   color    Source color\r\n     * @param   percent  Percent\r\n     * @return           New color\r\n     */\r\n    static saturate(color, percent) {\r\n        const rgb = $utils.saturate({ r: color.r, g: color.g, b: color.b }, percent);\r\n        return Color.fromRGB(rgb.r, rgb.g, rgb.b);\r\n    }\r\n}\r\n//# sourceMappingURL=Color.js.map","import { __awaiter } from \"tslib\";\r\nimport { Percent } from \"./Percent\";\r\nimport { Color } from \"./Color\";\r\nimport { EventDispatcher } from \"./EventDispatcher\";\r\nimport * as $object from \"./Object\";\r\n/**\r\n * @ignore\r\n */\r\nexport function waitForAnimations(animations) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (animations !== undefined) {\r\n            const promises = [];\r\n            $object.each(animations, (_, animation) => {\r\n                promises.push(animation.waitForStop());\r\n            });\r\n            yield Promise.all(promises);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function normalize(value, min, max) {\r\n    if (min === max) {\r\n        return 0;\r\n    }\r\n    else {\r\n        return Math.min(Math.max((value - min) * (1 / (max - min)), 0), 1);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function range(diff, from, to) {\r\n    return from + (diff * (to - from));\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function defaultInterpolate(diff, from, to) {\r\n    if (diff >= 1) {\r\n        return to;\r\n    }\r\n    else {\r\n        return from;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function percentInterpolate(diff, from, to) {\r\n    return new Percent(range(diff, from.percent, to.percent));\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function colorInterpolate(diff, from, to) {\r\n    return Color.interpolate(diff, from, to);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getInterpolate(from, to) {\r\n    if (typeof from === \"number\" && typeof to === \"number\") {\r\n        return range;\r\n    }\r\n    if (from instanceof Percent && to instanceof Percent) {\r\n        return percentInterpolate;\r\n    }\r\n    if (from instanceof Color && to instanceof Color) {\r\n        return colorInterpolate;\r\n    }\r\n    return defaultInterpolate;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class AnimationTime {\r\n    constructor(entity, duration) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_duration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_playingDuration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_startingTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_current\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_from\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_to\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        Object.defineProperty(this, \"easing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._entity = entity;\r\n        this._duration = duration;\r\n    }\r\n    _stopEvent() {\r\n        const type = \"stopped\";\r\n        if (this.events.isEnabled(type)) {\r\n            this.events.dispatch(type, { type: type, target: this });\r\n        }\r\n    }\r\n    _runAnimation(currentTime) {\r\n        if (this._playingDuration !== null) {\r\n            if (this._startingTime === null) {\r\n                this._startingTime = currentTime;\r\n                return true;\r\n            }\r\n            else {\r\n                const diff = (currentTime - this._startingTime) / this._playingDuration;\r\n                if (diff >= 1) {\r\n                    this._playingDuration = null;\r\n                    this._startingTime = null;\r\n                    this._from = this._to;\r\n                    this._current = this._to;\r\n                    this._entity.markDirty();\r\n                    this._stopEvent();\r\n                    const type = \"ended\";\r\n                    if (this.events.isEnabled(type)) {\r\n                        this.events.dispatch(type, { type: type, target: this });\r\n                    }\r\n                    return false;\r\n                }\r\n                else {\r\n                    this._current = range(diff, this._from, this._to);\r\n                    this._entity.markDirty();\r\n                    const type = \"progress\";\r\n                    if (this.events.isEnabled(type)) {\r\n                        this.events.dispatch(type, { type: type, target: this, progress: diff });\r\n                    }\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    _play() {\r\n        this._from = this._current;\r\n        if (this._playingDuration === null) {\r\n            this._entity._root._addAnimation(this);\r\n            const type = \"started\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this });\r\n            }\r\n        }\r\n        else {\r\n            this._startingTime = null;\r\n        }\r\n        this._playingDuration = Math.abs(this._to - this._from) * this._duration;\r\n    }\r\n    get duration() {\r\n        return this._duration;\r\n    }\r\n    set duration(value) {\r\n        if (this._duration !== value) {\r\n            this._duration = value;\r\n            if (value === 0) {\r\n                this.jumpTo(this._to);\r\n            }\r\n            else if (this._current !== this._to) {\r\n                this._play();\r\n            }\r\n        }\r\n    }\r\n    get current() {\r\n        if (this.easing) {\r\n            return this.easing(this._current);\r\n        }\r\n        else {\r\n            return this._current;\r\n        }\r\n    }\r\n    stop() {\r\n        this.jumpTo(this._current);\r\n    }\r\n    jumpTo(value) {\r\n        if (this._current !== value) {\r\n            this._entity.markDirty();\r\n        }\r\n        if (this._playingDuration !== null) {\r\n            this._stopEvent();\r\n        }\r\n        this._playingDuration = null;\r\n        this._startingTime = null;\r\n        this._current = value;\r\n        this._from = value;\r\n        this._to = value;\r\n    }\r\n    tweenTo(value) {\r\n        if (this._current === value || this._duration === 0) {\r\n            this.jumpTo(value);\r\n        }\r\n        else {\r\n            if (this._to !== value) {\r\n                this._to = value;\r\n                this._play();\r\n            }\r\n        }\r\n    }\r\n}\r\n/*export class AnimationValue extends AnimationTime {\r\n    public _min: number;\r\n    public _max: number;\r\n\r\n    constructor(entity: Entity, duration: number, min: number, max: number) {\r\n        super(entity, duration);\r\n        this._min = min;\r\n        this._max = max;\r\n    }\r\n\r\n    public get min(): number {\r\n        return this._min;\r\n    }\r\n\r\n    public set min(value: number) {\r\n        if (this._min !== value) {\r\n            this._min = value;\r\n            this._entity.markDirty();\r\n        }\r\n    }\r\n\r\n    public get max(): number {\r\n        return this._max;\r\n    }\r\n\r\n    public set max(value: number) {\r\n        if (this._max !== value) {\r\n            this._max = value;\r\n            this._entity.markDirty();\r\n        }\r\n    }\r\n\r\n    public currentValue(): number {\r\n        return range(super.currentTime(), this._min, this._max);\r\n    }\r\n\r\n    public jumpToValue(value: number) {\r\n        super.jumpToTime(normalize(value, this._min, this._max));\r\n    }\r\n\r\n    public tweenToValue(value: number) {\r\n        super.tweenToTime(normalize(value, this._min, this._max));\r\n    }\r\n}\r\n*/\r\n//# sourceMappingURL=Animation.js.map","import { isNumber } from \"./Type\";\r\n/**\r\n * ============================================================================\r\n * CONSTANTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nexport const PI = Math.PI;\r\nexport const HALFPI = PI / 2;\r\nexport const RADIANS = PI / 180;\r\nexport const DEGREES = 180 / PI;\r\n/**\r\n * Rounds the numeric value to whole number or specific precision of set.\r\n *\r\n * @param value      Value\r\n * @param precision  Precision (number of decimal points)\r\n * @param floor  In case value ends with 0.5 and precision is 0, we might need to floor the value instead of ceiling it.\r\n * @return Rounded value\r\n */\r\nexport function round(value, precision, floor) {\r\n    if (!isNumber(precision) || precision <= 0) {\r\n        let rounded = Math.round(value);\r\n        if (floor) {\r\n            if (rounded - value == 0.5) {\r\n                rounded--;\r\n            }\r\n        }\r\n        return rounded;\r\n    }\r\n    else {\r\n        let d = Math.pow(10, precision);\r\n        return Math.round(value * d) / d;\r\n    }\r\n}\r\n/**\r\n * Ceils the numeric value to whole number or specific precision of set.\r\n *\r\n * @param value      Value\r\n * @param precision  Precision (number of decimal points)\r\n * @return Rounded value\r\n */\r\nexport function ceil(value, precision) {\r\n    if (!isNumber(precision) || precision <= 0) {\r\n        return Math.ceil(value);\r\n    }\r\n    else {\r\n        let d = Math.pow(10, precision);\r\n        return Math.ceil(value * d) / d;\r\n    }\r\n}\r\n/**\r\n * [getCubicControlPointA description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param p0        [description]\r\n * @param p1        [description]\r\n * @param p2        [description]\r\n * @param p3        [description]\r\n * @param tensionX  [description]\r\n * @param tensionY  [description]\r\n * @return [description]\r\n */\r\nexport function getCubicControlPointA(p0, p1, p2, tensionX, tensionY) {\r\n    return { x: ((-p0.x + p1.x / tensionX + p2.x) * tensionX), y: ((-p0.y + p1.y / tensionY + p2.y) * tensionY) };\r\n}\r\n/**\r\n * [getCubicControlPointB description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param p0        [description]\r\n * @param p1        [description]\r\n * @param p2        [description]\r\n * @param p3        [description]\r\n * @param tensionX  [description]\r\n * @param tensionY  [description]\r\n * @return [description]\r\n */\r\nexport function getCubicControlPointB(p1, p2, p3, tensionX, tensionY) {\r\n    return { x: ((p1.x + p2.x / tensionX - p3.x) * tensionX), y: ((p1.y + p2.y / tensionY - p3.y) * tensionY) };\r\n}\r\nexport function fitToRange(value, min, max) {\r\n    return Math.min(Math.max(value, min), max);\r\n}\r\n/**\r\n * Returns sine of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Sine\r\n */\r\nexport function sin(angle) {\r\n    return Math.sin(RADIANS * angle);\r\n}\r\n/**\r\n * Returns tan of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Sine\r\n */\r\nexport function tan(angle) {\r\n    return Math.tan(RADIANS * angle);\r\n}\r\n/**\r\n * Returns cosine of an angle specified in degrees.\r\n *\r\n * @param value  Value\r\n * @return Cosine\r\n */\r\nexport function cos(angle) {\r\n    return Math.cos(RADIANS * angle);\r\n}\r\n// 0 to 360\r\nexport function normalizeAngle(value) {\r\n    value = value % 360;\r\n    if (value < 0) {\r\n        value += 360;\r\n    }\r\n    return value;\r\n}\r\n// TODO this doesn't work properly for skewing, and it's probably broken for rotation too\r\nexport function getArcBounds(cx, cy, startAngle, endAngle, radius) {\r\n    let minX = Number.MAX_VALUE;\r\n    let minY = Number.MAX_VALUE;\r\n    let maxX = -Number.MAX_VALUE;\r\n    let maxY = -Number.MAX_VALUE;\r\n    let bpoints = [];\r\n    bpoints.push(getArcPoint(radius, startAngle));\r\n    bpoints.push(getArcPoint(radius, endAngle));\r\n    let fromAngle = Math.min(Math.floor(startAngle / 90) * 90, Math.floor(endAngle / 90) * 90);\r\n    let toAngle = Math.max(Math.ceil(startAngle / 90) * 90, Math.ceil(endAngle / 90) * 90);\r\n    for (let angle = fromAngle; angle <= toAngle; angle += 90) {\r\n        if (angle >= startAngle && angle <= endAngle) {\r\n            bpoints.push(getArcPoint(radius, angle));\r\n        }\r\n    }\r\n    for (let i = 0; i < bpoints.length; i++) {\r\n        let pt = bpoints[i];\r\n        if (pt.x < minX) {\r\n            minX = pt.x;\r\n        }\r\n        if (pt.y < minY) {\r\n            minY = pt.y;\r\n        }\r\n        if (pt.x > maxX) {\r\n            maxX = pt.x;\r\n        }\r\n        if (pt.y > maxY) {\r\n            maxY = pt.y;\r\n        }\r\n    }\r\n    return ({ left: cx + minX, top: cy + minY, right: cx + maxX, bottom: cy + maxY });\r\n}\r\n/**\r\n * Returns point on arc\r\n *\r\n * @param center point\r\n * @param radius\r\n * @param arc\r\n * @return {boolean}\r\n */\r\nexport function getArcPoint(radius, arc) {\r\n    return ({ x: radius * cos(arc), y: radius * sin(arc) });\r\n}\r\nexport function mergeBounds(bounds) {\r\n    const len = bounds.length;\r\n    if (len > 0) {\r\n        let bound = bounds[0];\r\n        let left = bound.left;\r\n        let top = bound.top;\r\n        let right = bound.right;\r\n        let bottom = bound.bottom;\r\n        if (len > 1) {\r\n            for (let i = 1; i < len; i++) {\r\n                bound = bounds[i];\r\n                left = Math.min(bound.left, left);\r\n                right = Math.max(bound.right, right);\r\n                top = Math.min(bound.top, top);\r\n                bottom = Math.max(bound.bottom, bottom);\r\n            }\r\n        }\r\n        return { left, right, top, bottom };\r\n    }\r\n    return { left: 0, right: 0, top: 0, bottom: 0 };\r\n}\r\nexport function fitAngleToRange(value, startAngle, endAngle) {\r\n    if (startAngle > endAngle) {\r\n        let temp = startAngle;\r\n        startAngle = endAngle;\r\n        endAngle = temp;\r\n    }\r\n    value = normalizeAngle(value);\r\n    let count = (startAngle - normalizeAngle(startAngle)) / 360;\r\n    if (value < startAngle) {\r\n        value += 360 * (count + 1);\r\n    }\r\n    let maxEnd = startAngle + (endAngle - startAngle) / 2 + 180;\r\n    let maxStart = startAngle + (endAngle - startAngle) / 2 - 180;\r\n    if (value > endAngle) {\r\n        if (value - 360 > startAngle) {\r\n            value -= 360;\r\n        }\r\n        else {\r\n            if (value < maxEnd) {\r\n                value = endAngle;\r\n            }\r\n            else {\r\n                value = startAngle;\r\n            }\r\n        }\r\n    }\r\n    if (value < startAngle) {\r\n        if (value > maxStart) {\r\n            value = startAngle;\r\n        }\r\n        else {\r\n            value = endAngle;\r\n        }\r\n    }\r\n    return value;\r\n}\r\nexport function inBounds(point, bounds) {\r\n    if (point.x >= bounds.left && point.y >= bounds.top && point.x <= bounds.right && point.y <= bounds.bottom) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport function getAngle(point1, point2) {\r\n    if (!point2) {\r\n        point2 = { x: point1.x * 2, y: point1.y * 2 };\r\n    }\r\n    let diffX = point2.x - point1.x;\r\n    let diffY = point2.y - point1.y;\r\n    let angle = Math.atan2(diffY, diffX) * DEGREES;\r\n    if (angle < 0) {\r\n        angle += 360;\r\n    }\r\n    return normalizeAngle(angle);\r\n}\r\n/**\r\n * [getPointOnQuadraticCurve description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param pointA        [description]\r\n * @param pointB        [description]\r\n * @param controlPoint  [description]\r\n * @param position      [description]\r\n * @return [description]\r\n */\r\nexport function getPointOnQuadraticCurve(pointA, pointB, controlPoint, position) {\r\n    let x = (1 - position) * (1 - position) * pointA.x + 2 * (1 - position) * position * controlPoint.x + position * position * pointB.x;\r\n    let y = (1 - position) * (1 - position) * pointA.y + 2 * (1 - position) * position * controlPoint.y + position * position * pointB.y;\r\n    return { x: x, y: y };\r\n}\r\nexport function getPointOnLine(pointA, pointB, position) {\r\n    return { x: pointA.x + (pointB.x - pointA.x) * position, y: pointA.y + (pointB.y - pointA.y) * position };\r\n}\r\n/**\r\n * Returns the closest value from the array of values to the reference value.\r\n *\r\n * @param values  Array of values\r\n * @param value   Reference value\r\n * @return Closes value from the array\r\n */\r\nexport function closest(values, referenceValue) {\r\n    return values.reduce(function (prev, curr) {\r\n        return (Math.abs(curr - referenceValue) < Math.abs(prev - referenceValue) ? curr : prev);\r\n    });\r\n}\r\nexport function boundsOverlap(bounds1, bounds2) {\r\n    return !(bounds1.bottom < bounds2.top || bounds2.bottom < bounds1.top || bounds1.right < bounds2.left || bounds2.right < bounds1.left);\r\n}\r\n//# sourceMappingURL=Math.js.map","/**\r\n * A collection of easing functions\r\n *\r\n * Parts of this collection are taken from D3.js library (https://d3js.org/)\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $math from \"./Math\";\r\n/**\r\n * The functions below are from D3.js library (https://d3js.org/)\r\n *\r\n * ----------------------------------------------------------------------------\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *\tthis list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *\tthis list of conditions and the following disclaimer in the documentation\r\n *\tand/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *\tcontributors may be used to endorse or promote products derived from this\r\n *\tsoftware without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ----------------------------------------------------------------------------\r\n * @hidden\r\n */\r\n/**\r\n */\r\nexport function linear(t) {\r\n    return t;\r\n}\r\nexport function quad(t) {\r\n    return t * t;\r\n}\r\nexport function cubic(t) {\r\n    return t * t * t;\r\n}\r\nexport function pow(t, e) {\r\n    return Math.pow(t, e);\r\n}\r\nexport function exp(t) {\r\n    return Math.pow(2, 10 * t - 10);\r\n}\r\nexport function sine(t) {\r\n    return 1 - Math.cos(t * $math.HALFPI);\r\n}\r\nexport function circle(t) {\r\n    return 1 - Math.sqrt(1 - t * t);\r\n}\r\n/**\r\n * ============================================================================\r\n * TRANSFORMERS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n */\r\nexport function yoyo(ease) {\r\n    return function (t) {\r\n        if (t < 0.5) {\r\n            return ease(t * 2.0);\r\n        }\r\n        else {\r\n            return ease((1.0 - t) * 2.0);\r\n        }\r\n    };\r\n}\r\nexport function out(ease) {\r\n    return function (t) {\r\n        return 1.0 - ease(1.0 - t);\r\n    };\r\n}\r\nexport function inOut(ease) {\r\n    return function (t) {\r\n        if (t <= 0.5) {\r\n            return ease(t * 2.0) / 2.0;\r\n        }\r\n        else {\r\n            return 1.0 - (ease((1.0 - t) * 2.0) / 2.0);\r\n        }\r\n    };\r\n}\r\n/**\r\n * ============================================================================\r\n * BOUNCE\r\n * ============================================================================\r\n * @hidden\r\n */\r\nlet b1 = 4 / 11, b2 = 6 / 11, b3 = 8 / 11, b4 = 3 / 4, b5 = 9 / 11, b6 = 10 / 11, b7 = 15 / 16, b8 = 21 / 22, b9 = 63 / 64, b0 = 1 / b1 / b1;\r\nexport function bounce(t) {\r\n    return 1 - bounceOut(1 - t);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction bounceOut(t) {\r\n    t = t;\r\n    if (t < b1) {\r\n        return b0 * t * t;\r\n    }\r\n    else if (t < b3) {\r\n        return b0 * (t -= b2) * t + b4;\r\n    }\r\n    else if (t < b6) {\r\n        return b0 * (t -= b5) * t + b7;\r\n    }\r\n    else {\r\n        return b0 * (t -= b8) * t + b9;\r\n    }\r\n}\r\n/**\r\n * ============================================================================\r\n * ELASTIC\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * @ignore\r\n */\r\nlet tau = 2 * Math.PI;\r\n/**\r\n * @ignore\r\n */\r\nlet amplitude = 1;\r\n/**\r\n * @ignore\r\n */\r\nlet period = 0.3 / tau;\r\n/**\r\n * @ignore\r\n */\r\nlet s = Math.asin(1 / amplitude) * period;\r\nexport function elastic(t) {\r\n    let v = t;\r\n    return amplitude * Math.pow(2, 10 * --v) * Math.sin((s - v) / period);\r\n}\r\n//# sourceMappingURL=Ease.js.map","import * as $object from \"./Object\";\r\nimport * as $ease from \"./Ease\";\r\n/**\r\n * An object representing a collection of setting values to apply as required.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/states/} for more info\r\n */\r\nexport class State {\r\n    constructor(entity, settings) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_userSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._entity = entity;\r\n        this._settings = settings;\r\n    }\r\n    get(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        this._settings[key] = value;\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key` to be set when the state\r\n     * is applied.\r\n     *\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._userSettings[key] = true;\r\n        this.setRaw(key, value);\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        delete this._userSettings[key];\r\n        delete this._settings[key];\r\n    }\r\n    /**\r\n     * Sets multiple settings at once.\r\n     *\r\n     * `settings` must be an object with key: value pairs.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param settings Settings\r\n     */\r\n    setAll(settings) {\r\n        $object.keys(settings).forEach((key) => {\r\n            this.set(key, settings[key]);\r\n        });\r\n    }\r\n    _eachSetting(f) {\r\n        $object.each(this._settings, f);\r\n    }\r\n    /**\r\n     * Applies the state to the target element.\r\n     *\r\n     * All setting values are set immediately.\r\n     */\r\n    apply() {\r\n        const seen = {};\r\n        seen[\"stateAnimationEasing\"] = true;\r\n        seen[\"stateAnimationDuration\"] = true;\r\n        const defaultState = this._entity.states.lookup(\"default\");\r\n        this._eachSetting((key, value) => {\r\n            if (!seen[key]) {\r\n                seen[key] = true;\r\n                // save values to default state\r\n                if (this !== defaultState) {\r\n                    if (!(key in defaultState._settings)) {\r\n                        defaultState._settings[key] = this._entity.get(key);\r\n                    }\r\n                }\r\n                this._entity.set(key, value);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Applies the state to the target element.\r\n     *\r\n     * Returns an object representing all [[Animation]] objects created for\r\n     * each setting key transition.\r\n     *\r\n     * @return           Animations\r\n     */\r\n    applyAnimate(duration) {\r\n        if (duration == null) {\r\n            duration = this._settings.stateAnimationDuration;\r\n        }\r\n        if (duration == null) {\r\n            duration = this.get(\"stateAnimationDuration\", this._entity.get(\"stateAnimationDuration\", 0));\r\n        }\r\n        let easing = this._settings.stateAnimationEasing;\r\n        if (easing == null) {\r\n            easing = this.get(\"stateAnimationEasing\", this._entity.get(\"stateAnimationEasing\", $ease.cubic));\r\n        }\r\n        const defaultState = this._entity.states.lookup(\"default\");\r\n        const seen = {};\r\n        seen[\"stateAnimationEasing\"] = true;\r\n        seen[\"stateAnimationDuration\"] = true;\r\n        const animations = {};\r\n        this._eachSetting((key, value) => {\r\n            if (!seen[key]) {\r\n                seen[key] = true;\r\n                // save values to default state\r\n                if (this != defaultState) {\r\n                    if (!(key in defaultState._settings)) {\r\n                        defaultState._settings[key] = this._entity.get(key);\r\n                    }\r\n                }\r\n                const animation = this._entity.animate({\r\n                    key: key,\r\n                    to: value,\r\n                    duration: duration,\r\n                    easing: easing\r\n                });\r\n                if (animation) {\r\n                    animations[key] = animation;\r\n                }\r\n            }\r\n        });\r\n        return animations;\r\n    }\r\n}\r\n/**\r\n * Collection of [[State]] objects for an element.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/states/} for more info\r\n */\r\nexport class States {\r\n    constructor(entity) {\r\n        Object.defineProperty(this, \"_states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._entity = entity;\r\n    }\r\n    /**\r\n     * Checks if a state by `name` exists. Returns it there is one.\r\n     *\r\n     * @param  name  State name\r\n     * @return       State\r\n     */\r\n    lookup(name) {\r\n        return this._states[name];\r\n    }\r\n    /**\r\n     * Sets supplied `settings` on a state by the `name`.\r\n     *\r\n     * If such state does not yet exists, it is created.\r\n     *\r\n     * @param   name      State name\r\n     * @param   settings  Settings\r\n     * @return            New State\r\n     */\r\n    create(name, settings) {\r\n        const state = this._states[name];\r\n        if (state) {\r\n            state.setAll(settings);\r\n            return state;\r\n        }\r\n        else {\r\n            const state = new State(this._entity, settings);\r\n            this._states[name] = state;\r\n            return state;\r\n        }\r\n    }\r\n    /**\r\n     * Removes the state called `name`.\r\n     *\r\n     * @param   name      State name\r\n     */\r\n    remove(name) {\r\n        delete this._states[name];\r\n    }\r\n    /**\r\n     * Applies a named state to the target element.\r\n     *\r\n     * @param  newState  State name\r\n     */\r\n    apply(newState) {\r\n        const state = this._states[newState];\r\n        if (state) {\r\n            state.apply();\r\n        }\r\n        this._entity._applyState(newState);\r\n    }\r\n    /**\r\n     * Applies a named state to the element.\r\n     *\r\n     * Returns an object representing all [[Animation]] objects created for\r\n     * each setting key transition.\r\n     *\r\n     * @param   newState  State name\r\n     * @return            Animations\r\n     */\r\n    applyAnimate(newState, duration) {\r\n        let animations;\r\n        const state = this._states[newState];\r\n        if (state) {\r\n            animations = state.applyAnimate(duration);\r\n        }\r\n        this._entity._applyStateAnimated(newState, duration);\r\n        return animations;\r\n    }\r\n}\r\n//# sourceMappingURL=States.js.map","/**\r\n * @ignore\r\n */\r\nexport class Registry {\r\n    constructor() {\r\n        /**\r\n         * Currently running version of amCharts.\r\n         */\r\n        Object.defineProperty(this, \"version\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"5.3.0\"\r\n        });\r\n        /**\r\n         * List of applied licenses.\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"licenses\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * Entities that have their `id` setting set.\r\n         */\r\n        Object.defineProperty(this, \"entitiesById\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        /**\r\n         * All created [[Root]] elements.\r\n         */\r\n        Object.defineProperty(this, \"rootElements\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n}\r\n/**\r\n    * @ignore\r\n */\r\nexport const registry = new Registry();\r\n/**\r\n * Adds a license, e.g.:\r\n *\r\n * ```TypeScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n * ```JavaScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n *\r\n * Multiple licenses can be added to cover for multiple products.\r\n *\r\n * @param  license  License key\r\n */\r\nexport function addLicense(license) {\r\n    registry.licenses.push(license);\r\n}\r\n/**\r\n * Disposes all [[Root]] elements.\r\n */\r\nexport function disposeAllRootElements() {\r\n    let root;\r\n    while (root = registry.rootElements.pop()) {\r\n        root.dispose();\r\n    }\r\n}\r\n//# sourceMappingURL=Registry.js.map","/**\r\n * @ignore\r\n */\r\nexport function compare(left, right) {\r\n    if (left === right) {\r\n        return 0;\r\n    }\r\n    else if (left < right) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function compareArray(left, right, f) {\r\n    const leftLength = left.length;\r\n    const rightLength = right.length;\r\n    const length = Math.min(leftLength, rightLength);\r\n    for (let i = 0; i < length; ++i) {\r\n        const order = f(left[i], right[i]);\r\n        if (order !== 0) {\r\n            return order;\r\n        }\r\n    }\r\n    return compare(leftLength, rightLength);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function reverse(order) {\r\n    if (order < 0) {\r\n        return 1;\r\n    }\r\n    else if (order > 0) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function compareNumber(a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n//# sourceMappingURL=Order.js.map","import { Disposer } from \"./Disposer\";\r\nimport { EventDispatcher } from \"./EventDispatcher\";\r\nimport { getInterpolate } from \"./Animation\";\r\nimport { States } from \"./States\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $object from \"./Object\";\r\nimport * as $ease from \"./Ease\";\r\nimport * as $array from \"./Array\";\r\nimport * as $order from \"./Order\";\r\n/**\r\n * Allows to dynamically modify setting value of its target element.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\r\n */\r\nexport class Adapters {\r\n    constructor(entity) {\r\n        Object.defineProperty(this, \"_entity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_callbacks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_disabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._entity = entity;\r\n    }\r\n    /**\r\n     * Add a function (`callback`) that will modify value for setting `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\r\n     */\r\n    add(key, callback) {\r\n        let callbacks = this._callbacks[key];\r\n        if (callbacks === undefined) {\r\n            callbacks = this._callbacks[key] = [];\r\n        }\r\n        callbacks.push(callback);\r\n        this._entity._markDirtyKey(key);\r\n        return new Disposer(() => {\r\n            if ($array.removeFirst(callbacks, callback)) {\r\n                this._entity._markDirtyKey(key);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Removes all adapters for the specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    remove(key) {\r\n        const callbacks = this._callbacks[key];\r\n        if (callbacks !== undefined) {\r\n            delete this._callbacks[key];\r\n            if (callbacks.length !== 0) {\r\n                this._entity._markDirtyKey(key);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Enables (previously disabled) adapters for specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    enable(key) {\r\n        if (this._disabled[key]) {\r\n            delete this._disabled[key];\r\n            this._entity._markDirtyKey(key);\r\n        }\r\n    }\r\n    /**\r\n     * Disables all adapters for specific key.\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    disable(key) {\r\n        if (!this._disabled[key]) {\r\n            this._disabled[key] = true;\r\n            this._entity._markDirtyKey(key);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    fold(key, value) {\r\n        if (!this._disabled[key]) {\r\n            const callbacks = this._callbacks[key];\r\n            if (callbacks !== undefined) {\r\n                for (let i = 0, len = callbacks.length; i < len; ++i) {\r\n                    value = callbacks[i](value, this._entity, key);\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n}\r\n/**\r\n * Animation object.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/} for more info\r\n */\r\nexport class Animation {\r\n    constructor(animation, from, to, duration, easing, loops, startingTime) {\r\n        Object.defineProperty(this, \"_animation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_from\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_to\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_duration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_easing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_loops\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_interpolate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_oldTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_time\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_stopped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_playing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        this._animation = animation;\r\n        this._from = from;\r\n        this._to = to;\r\n        this._duration = duration;\r\n        this._easing = easing;\r\n        this._loops = loops;\r\n        this._interpolate = getInterpolate(from, to);\r\n        this._oldTime = startingTime;\r\n    }\r\n    get to() {\r\n        return this._to;\r\n    }\r\n    get from() {\r\n        return this._from;\r\n    }\r\n    get playing() {\r\n        return this._playing;\r\n    }\r\n    get stopped() {\r\n        return this._stopped;\r\n    }\r\n    stop() {\r\n        if (!this._stopped) {\r\n            this._stopped = true;\r\n            this._playing = false;\r\n            if (this.events.isEnabled(\"stopped\")) {\r\n                this.events.dispatch(\"stopped\", {\r\n                    type: \"stopped\",\r\n                    target: this,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    pause() {\r\n        this._playing = false;\r\n        this._oldTime = null;\r\n    }\r\n    play() {\r\n        if (!this._stopped && !this._playing) {\r\n            this._playing = true;\r\n            this._animation._startAnimation();\r\n        }\r\n    }\r\n    get percentage() {\r\n        return this._time / this._duration;\r\n    }\r\n    waitForStop() {\r\n        return new Promise((resolve, _reject) => {\r\n            if (this._stopped) {\r\n                resolve();\r\n            }\r\n            else {\r\n                const listener = () => {\r\n                    stopped.dispose();\r\n                    resolve();\r\n                };\r\n                const stopped = this.events.on(\"stopped\", listener);\r\n            }\r\n        });\r\n    }\r\n    _checkEnded() {\r\n        if (this._loops > 1) {\r\n            --this._loops;\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    _run(currentTime) {\r\n        if (this._oldTime !== null) {\r\n            this._time += currentTime - this._oldTime;\r\n            if (this._time > this._duration) {\r\n                this._time = this._duration;\r\n            }\r\n        }\r\n        this._oldTime = currentTime;\r\n    }\r\n    _reset(currentTime) {\r\n        this._oldTime = currentTime;\r\n        this._time = 0;\r\n    }\r\n    _value(diff) {\r\n        return this._interpolate(this._easing(diff), this._from, this._to);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nlet counter = 0;\r\n/**\r\n * Base class for [[Entity]] objects that support Settings.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n */\r\nexport class Settings {\r\n    constructor(settings) {\r\n        /**\r\n         * Unique ID.\r\n         */\r\n        Object.defineProperty(this, \"uid\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: ++counter\r\n        });\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_privateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_settingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_privateSettingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_prevSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_prevPrivateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_animatingSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_animatingPrivateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // TODO move this into Entity\r\n        Object.defineProperty(this, \"_userProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._settings = settings;\r\n    }\r\n    _checkDirty() {\r\n        $object.keys(this._settings).forEach((key) => {\r\n            this._userProperties[key] = true;\r\n            this._markDirtyKey(key);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    resetUserSettings() {\r\n        this._userProperties = {};\r\n    }\r\n    _runAnimation(currentTime) {\r\n        if (!this.isDisposed()) {\r\n            let playing = false;\r\n            $object.each(this._animatingSettings, (key, animation) => {\r\n                if (animation._stopped) {\r\n                    this._stopAnimation(key);\r\n                }\r\n                else if (animation._playing) {\r\n                    animation._run(currentTime);\r\n                    const diff = animation.percentage;\r\n                    if (diff >= 1) {\r\n                        if (animation._checkEnded()) {\r\n                            this.set(key, animation._value(1));\r\n                        }\r\n                        else {\r\n                            playing = true;\r\n                            animation._reset(currentTime);\r\n                            this._set(key, animation._value(1));\r\n                        }\r\n                    }\r\n                    else {\r\n                        playing = true;\r\n                        this._set(key, animation._value(diff));\r\n                    }\r\n                }\r\n            });\r\n            $object.each(this._animatingPrivateSettings, (key, animation) => {\r\n                if (animation._stopped) {\r\n                    this._stopAnimationPrivate(key);\r\n                }\r\n                else if (animation._playing) {\r\n                    animation._run(currentTime);\r\n                    const diff = animation.percentage;\r\n                    if (diff >= 1) {\r\n                        if (animation._checkEnded()) {\r\n                            this.setPrivate(key, animation._value(1));\r\n                        }\r\n                        else {\r\n                            playing = true;\r\n                            animation._reset(currentTime);\r\n                            this._setPrivate(key, animation._value(1));\r\n                        }\r\n                    }\r\n                    else {\r\n                        playing = true;\r\n                        this._setPrivate(key, animation._value(diff));\r\n                    }\r\n                }\r\n            });\r\n            return playing;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    _markDirtyKey(_key) {\r\n        this.markDirty();\r\n    }\r\n    _markDirtyPrivateKey(_key) {\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * Sets a callback function to invoke when specific key of settings changes\r\n     * or is set.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @param   key       Settings key\r\n     * @param   callback  Callback\r\n     * @return            Disposer for event\r\n     */\r\n    on(key, callback) {\r\n        let events = this._settingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._settingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._settingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Sets a callback function to invoke when specific key of private settings\r\n     * changes or is set.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\r\n     * @ignore\r\n     * @param   key       Private settings key\r\n     * @param   callback  Callback\r\n     * @return            Disposer for event\r\n     */\r\n    onPrivate(key, callback) {\r\n        let events = this._privateSettingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._privateSettingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._privateSettingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getRaw(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    get(key, fallback) {\r\n        return this.getRaw(key, fallback);\r\n    }\r\n    _sendKeyEvent(key, value) {\r\n        const events = this._settingEvents[key];\r\n        if (events !== undefined) {\r\n            $array.each(events, (callback) => {\r\n                callback(value, this, key);\r\n            });\r\n        }\r\n    }\r\n    _sendPrivateKeyEvent(key, value) {\r\n        const events = this._privateSettingEvents[key];\r\n        if (events !== undefined) {\r\n            $array.each(events, (callback) => {\r\n                callback(value, this, key);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setRaw(key, old, value) {\r\n        this._prevSettings[key] = old;\r\n        this._sendKeyEvent(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        const old = this._settings[key];\r\n        this._settings[key] = value;\r\n        if (old !== value) {\r\n            this._setRaw(key, old, value);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _set(key, value) {\r\n        const old = this._settings[key];\r\n        this._settings[key] = value;\r\n        if (old !== value) {\r\n            this._setRaw(key, old, value);\r\n            this._markDirtyKey(key);\r\n        }\r\n    }\r\n    _stopAnimation(key) {\r\n        const animation = this._animatingSettings[key];\r\n        if (animation) {\r\n            delete this._animatingSettings[key];\r\n            animation.stop();\r\n        }\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key`, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._set(key, value);\r\n        this._stopAnimation(key);\r\n        return value;\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`;\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        if (key in this._settings) {\r\n            this._prevSettings[key] = this._settings[key];\r\n            delete this._settings[key];\r\n            this._sendKeyEvent(key, undefined);\r\n            this._markDirtyKey(key);\r\n        }\r\n        this._stopAnimation(key);\r\n    }\r\n    /**\r\n     * Removes all keys;\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     */\r\n    removeAll() {\r\n        $array.each($object.keys(this._settings), (key) => {\r\n            this.remove(key);\r\n        });\r\n    }\r\n    /**\r\n     * Returns a value of a private setting.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/#Private_settings} for more info\r\n     */\r\n    getPrivate(key, fallback) {\r\n        const value = this._privateSettings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setPrivateRaw(key, old, value) {\r\n        this._prevPrivateSettings[key] = old;\r\n        this._sendPrivateKeyEvent(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivateRaw(key, value) {\r\n        const old = this._privateSettings[key];\r\n        this._privateSettings[key] = value;\r\n        if (old !== value) {\r\n            this._setPrivateRaw(key, old, value);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _setPrivate(key, value) {\r\n        const old = this._privateSettings[key];\r\n        this._privateSettings[key] = value;\r\n        if (old !== value) {\r\n            this._setPrivateRaw(key, old, value);\r\n            this._markDirtyPrivateKey(key);\r\n        }\r\n    }\r\n    _stopAnimationPrivate(key) {\r\n        const animation = this._animatingPrivateSettings[key];\r\n        if (animation) {\r\n            animation.stop();\r\n            delete this._animatingPrivateSettings[key];\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivate(key, value) {\r\n        this._setPrivate(key, value);\r\n        this._stopAnimationPrivate(key);\r\n        return value;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removePrivate(key) {\r\n        if (key in this._privateSettings) {\r\n            this._prevPrivateSettings[key] = this._privateSettings[key];\r\n            delete this._privateSettings[key];\r\n            this._markDirtyPrivateKey(key);\r\n        }\r\n        this._stopAnimationPrivate(key);\r\n    }\r\n    /**\r\n     * Sets multiple settings at once.\r\n     *\r\n     * `settings` must be an object with key: value pairs.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param settings Settings\r\n     */\r\n    setAll(settings) {\r\n        $object.each(settings, (key, value) => {\r\n            this.set(key, value);\r\n        });\r\n    }\r\n    /**\r\n     * Animates setting values from current/start values to new ones.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animating_settings} for more info\r\n     * @param   options  Animation options\r\n     * @return           Animation object\r\n     */\r\n    animate(options) {\r\n        const key = options.key;\r\n        const to = options.to;\r\n        const duration = options.duration || 0;\r\n        const loops = options.loops || 1;\r\n        const from = (options.from === undefined ? this.get(key) : options.from);\r\n        const easing = (options.easing === undefined ? $ease.linear : options.easing);\r\n        if (duration === 0) {\r\n            this.set(key, to);\r\n        }\r\n        else {\r\n            if (from === undefined || from === to) {\r\n                this.set(key, to);\r\n            }\r\n            else {\r\n                this.set(key, from);\r\n                const animation = this._animatingSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\r\n                this._startAnimation();\r\n                return animation;\r\n            }\r\n        }\r\n        const animation = new Animation(this, from, to, duration, easing, loops, null);\r\n        animation.stop();\r\n        return animation;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    animatePrivate(options) {\r\n        const key = options.key;\r\n        const to = options.to;\r\n        const duration = options.duration || 0;\r\n        const loops = options.loops || 1;\r\n        const from = (options.from === undefined ? this.getPrivate(key) : options.from);\r\n        const easing = (options.easing === undefined ? $ease.linear : options.easing);\r\n        if (duration === 0) {\r\n            this.setPrivate(key, to);\r\n        }\r\n        else {\r\n            if (from === undefined || from === to) {\r\n                this.setPrivate(key, to);\r\n            }\r\n            else {\r\n                this.setPrivate(key, from);\r\n                const animation = this._animatingPrivateSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\r\n                this._startAnimation();\r\n                return animation;\r\n            }\r\n        }\r\n        const animation = new Animation(this, from, to, duration, easing, loops, null);\r\n        animation.stop();\r\n        return animation;\r\n    }\r\n    _dispose() { }\r\n    /**\r\n     * Returns `true` if this element is disposed.\r\n     *\r\n     * @return Disposed\r\n     */\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    /**\r\n     * Disposes this object.\r\n     */\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    }\r\n}\r\n/**\r\n * Base class.\r\n *\r\n * @important\r\n */\r\nexport class Entity extends Settings {\r\n    /**\r\n     * IMPORTANT! Do not instantiate this class via `new Class()` syntax.\r\n     *\r\n     * Use static method `Class.new()` instead.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @ignore\r\n     */\r\n    constructor(root, settings, isReal, templates = []) {\r\n        super(settings);\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_user_id\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        }); // for testing purposes\r\n        Object.defineProperty(this, \"states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new States(this)\r\n        });\r\n        Object.defineProperty(this, \"adapters\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Adapters(this)\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._createEvents()\r\n        });\r\n        Object.defineProperty(this, \"_userPrivateProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyPrivate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Templates for the themes\r\n        Object.defineProperty(this, \"_templates\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Internal templates which can be overridden by the user's templates\r\n        Object.defineProperty(this, \"_internalTemplates\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Default themes which can be overridden by the user's themes\r\n        Object.defineProperty(this, \"_defaultThemes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Disposers for all of the templates\r\n        Object.defineProperty(this, \"_templateDisposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        // Whether the template setup function should be run\r\n        Object.defineProperty(this, \"_runSetup\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_disposerProperties\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this._root = root;\r\n        this._internalTemplates = templates;\r\n        if (settings.id) {\r\n            this._registerId(settings.id);\r\n        }\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    static new(root, settings, template) {\r\n        const x = (new this(root, settings, true));\r\n        x._template = template;\r\n        x._afterNew();\r\n        return x;\r\n    }\r\n    static _new(root, settings, templates = []) {\r\n        const x = (new this(root, settings, true, templates));\r\n        x._afterNew();\r\n        return x;\r\n    }\r\n    _afterNew() {\r\n        this._checkDirty();\r\n        let shouldApply = false;\r\n        const template = this._template;\r\n        if (template) {\r\n            shouldApply = true;\r\n            template._setObjectTemplate(this);\r\n        }\r\n        $array.each(this._internalTemplates, (template) => {\r\n            shouldApply = true;\r\n            template._setObjectTemplate(this);\r\n        });\r\n        if (shouldApply) {\r\n            this._applyTemplates(false);\r\n        }\r\n        this.states.create(\"default\", {});\r\n        this._setDefaults();\r\n    }\r\n    // This is the same as _afterNew, except it also applies the themes.\r\n    // This should only be used for classes which don't have a parent (because they extend from Entity and not Sprite).\r\n    _afterNewApplyThemes() {\r\n        this._checkDirty();\r\n        const template = this._template;\r\n        if (template) {\r\n            template._setObjectTemplate(this);\r\n        }\r\n        $array.each(this._internalTemplates, (template) => {\r\n            template._setObjectTemplate(this);\r\n        });\r\n        this.states.create(\"default\", {});\r\n        this._setDefaults();\r\n        this._applyThemes();\r\n    }\r\n    _createEvents() {\r\n        return new EventDispatcher();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get classNames() {\r\n        return this.constructor.classNames;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get className() {\r\n        return this.constructor.className;\r\n    }\r\n    _setDefaults() {\r\n    }\r\n    _setDefault(key, value) {\r\n        if (!(key in this._settings)) {\r\n            super.set(key, value);\r\n        }\r\n    }\r\n    _setRawDefault(key, value) {\r\n        if (!(key in this._settings)) {\r\n            super.setRaw(key, value);\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        $object.keys(this._dirty).forEach((key) => {\r\n            this._dirty[key] = false;\r\n        });\r\n        $object.keys(this._dirtyPrivate).forEach((key) => {\r\n            this._dirtyPrivate[key] = false;\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isDirty(key) {\r\n        return !!this._dirty[key];\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isPrivateDirty(key) {\r\n        return !!this._dirtyPrivate[key];\r\n    }\r\n    _markDirtyKey(key) {\r\n        this._dirty[key] = true;\r\n        super._markDirtyKey(key);\r\n    }\r\n    _markDirtyPrivateKey(key) {\r\n        this._dirtyPrivate[key] = true;\r\n        super._markDirtyKey(key);\r\n    }\r\n    /**\r\n     * Checks if element is of certain class (or inherits one).\r\n     *\r\n     * @param   type  Class name to check\r\n     * @return {boolean} Is of class?\r\n     */\r\n    isType(type) {\r\n        return this.classNames.indexOf(type) !== -1;\r\n    }\r\n    _pushPropertyDisposer(key, disposer) {\r\n        let disposers = this._disposerProperties[key];\r\n        if (disposers === undefined) {\r\n            disposers = this._disposerProperties[key] = [];\r\n        }\r\n        disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _disposeProperty(key) {\r\n        const disposers = this._disposerProperties[key];\r\n        if (disposers !== undefined) {\r\n            $array.each(disposers, (disposer) => {\r\n                disposer.dispose();\r\n            });\r\n            delete this._disposerProperties[key];\r\n        }\r\n    }\r\n    /**\r\n     * @todo needs description\r\n     * @param  value  Template\r\n     */\r\n    set template(value) {\r\n        const template = this._template;\r\n        if (template !== value) {\r\n            this._template = value;\r\n            if (template) {\r\n                template._removeObjectTemplate(this);\r\n            }\r\n            if (value) {\r\n                value._setObjectTemplate(this);\r\n            }\r\n            this._applyTemplates();\r\n        }\r\n    }\r\n    get template() {\r\n        return this._template;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        this._root._addDirtyEntity(this);\r\n    }\r\n    _startAnimation() {\r\n        this._root._addAnimation(this);\r\n    }\r\n    _animationTime() {\r\n        return this._root.animationTime;\r\n    }\r\n    _applyState(_name) { }\r\n    _applyStateAnimated(_name, _duration) { }\r\n    get(key, fallback) {\r\n        const value = this.adapters.fold(key, this._settings[key]);\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    isUserSetting(key) {\r\n        return this._userProperties[key] || false;\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key`, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    set(key, value) {\r\n        this._userProperties[key] = true;\r\n        return super.set(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setRaw(key, value) {\r\n        this._userProperties[key] = true;\r\n        super.setRaw(key, value);\r\n    }\r\n    /**\r\n     * Sets a setting `value` for the specified `key` only if the value for this key was not set previously using set method, and returns the same `value`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     * @param   value     Setting value\r\n     * @return            Setting value\r\n     */\r\n    _setSoft(key, value) {\r\n        if (!this._userProperties[key]) {\r\n            return super.set(key, value);\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * Removes a setting value for the specified `key`.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\r\n     * @param   key       Setting key\r\n     */\r\n    remove(key) {\r\n        delete this._userProperties[key];\r\n        this._removeTemplateProperty(key);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivate(key, value) {\r\n        this._userPrivateProperties[key] = true;\r\n        return super.setPrivate(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPrivateRaw(key, value) {\r\n        this._userPrivateProperties[key] = true;\r\n        super.setPrivateRaw(key, value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removePrivate(key) {\r\n        delete this._userPrivateProperties[key];\r\n        this._removeTemplatePrivateProperty(key);\r\n    }\r\n    _setTemplateProperty(template, key, value) {\r\n        if (!this._userProperties[key]) {\r\n            const match = this._findTemplateByKey(key);\r\n            if (template === match) {\r\n                super.set(key, value);\r\n            }\r\n        }\r\n    }\r\n    _setTemplatePrivateProperty(template, key, value) {\r\n        if (!this._userPrivateProperties[key]) {\r\n            const match = this._findTemplateByPrivateKey(key);\r\n            if (template === match) {\r\n                super.setPrivate(key, value);\r\n            }\r\n        }\r\n    }\r\n    _removeTemplateProperty(key) {\r\n        if (!this._userProperties[key]) {\r\n            const match = this._findTemplateByKey(key);\r\n            if (match) {\r\n                // TODO don't stop the animation if the property didn't change\r\n                super.set(key, match._settings[key]);\r\n            }\r\n            else {\r\n                super.remove(key);\r\n            }\r\n        }\r\n    }\r\n    _removeTemplatePrivateProperty(key) {\r\n        if (!this._userPrivateProperties[key]) {\r\n            const match = this._findTemplateByPrivateKey(key);\r\n            if (match) {\r\n                // TODO don't stop the animation if the property didn't change\r\n                super.setPrivate(key, match._privateSettings[key]);\r\n            }\r\n            else {\r\n                super.removePrivate(key);\r\n            }\r\n        }\r\n    }\r\n    _walkParents(f) {\r\n        f(this._root._rootContainer);\r\n        f(this);\r\n    }\r\n    // TODO faster version of this method which is specialized to just 1 key\r\n    _applyStateByKey(name) {\r\n        const other = this.states.create(name, {});\r\n        const seen = {};\r\n        this._eachTemplate((template) => {\r\n            const state = template.states.lookup(name);\r\n            if (state) {\r\n                state._apply(other, seen);\r\n            }\r\n        });\r\n        $object.each(other._settings, (key) => {\r\n            if (!seen[key] && !other._userSettings[key]) {\r\n                other.remove(key);\r\n            }\r\n        });\r\n    }\r\n    _applyTemplate(template, state) {\r\n        this._templateDisposers.push(template._apply(this, state));\r\n        $object.each(template._settings, (key, value) => {\r\n            if (!state.settings[key] && !this._userProperties[key]) {\r\n                state.settings[key] = true;\r\n                super.set(key, value);\r\n            }\r\n        });\r\n        $object.each(template._privateSettings, (key, value) => {\r\n            if (!state.privateSettings[key] && !this._userPrivateProperties[key]) {\r\n                state.privateSettings[key] = true;\r\n                super.setPrivate(key, value);\r\n            }\r\n        });\r\n        if (this._runSetup && template.setup) {\r\n            this._runSetup = false;\r\n            template.setup(this);\r\n        }\r\n    }\r\n    /**\r\n     * Calls the closure with each template and returns the first template which is true\r\n     */\r\n    _findStaticTemplate(f) {\r\n        if (this._template) {\r\n            if (f(this._template)) {\r\n                return this._template;\r\n            }\r\n        }\r\n    }\r\n    _eachTemplate(f) {\r\n        this._findStaticTemplate((template) => {\r\n            f(template);\r\n            return false;\r\n        });\r\n        // _internalTemplates is sorted with most specific to the right\r\n        $array.eachReverse(this._internalTemplates, f);\r\n        // _templates is sorted with most specific to the left\r\n        $array.each(this._templates, f);\r\n    }\r\n    _applyTemplates(remove = true) {\r\n        if (remove) {\r\n            this._disposeTemplates();\r\n        }\r\n        const state = {\r\n            settings: {},\r\n            privateSettings: {},\r\n            states: {},\r\n        };\r\n        this._eachTemplate((template) => {\r\n            this._applyTemplate(template, state);\r\n        });\r\n        if (remove) {\r\n            $object.each(this._settings, (key) => {\r\n                if (!this._userProperties[key] && !state.settings[key]) {\r\n                    super.remove(key);\r\n                }\r\n            });\r\n            $object.each(this._privateSettings, (key) => {\r\n                if (!this._userPrivateProperties[key] && !state.privateSettings[key]) {\r\n                    super.removePrivate(key);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _findTemplate(f) {\r\n        const value = this._findStaticTemplate(f);\r\n        if (value === undefined) {\r\n            // _internalTemplates is sorted with most specific to the right\r\n            const value = $array.findReverse(this._internalTemplates, f);\r\n            if (value === undefined) {\r\n                // _templates is sorted with most specific to the left\r\n                return $array.find(this._templates, f);\r\n            }\r\n            else {\r\n                return value;\r\n            }\r\n        }\r\n        else {\r\n            return value;\r\n        }\r\n    }\r\n    _findTemplateByKey(key) {\r\n        return this._findTemplate((template) => {\r\n            return key in template._settings;\r\n        });\r\n    }\r\n    _findTemplateByPrivateKey(key) {\r\n        return this._findTemplate((template) => {\r\n            return key in template._privateSettings;\r\n        });\r\n    }\r\n    _disposeTemplates() {\r\n        $array.each(this._templateDisposers, (disposer) => {\r\n            disposer.dispose();\r\n        });\r\n        this._templateDisposers.length = 0;\r\n    }\r\n    _removeTemplates() {\r\n        $array.each(this._templates, (template) => {\r\n            template._removeObjectTemplate(this);\r\n        });\r\n        this._templates.length = 0;\r\n    }\r\n    _applyThemes() {\r\n        let isConnected = false;\r\n        const defaults = [];\r\n        let themes = [];\r\n        const themeTags = new Set();\r\n        const tags = this.get(\"themeTagsSelf\");\r\n        if (tags) {\r\n            $array.each(tags, (tag) => {\r\n                themeTags.add(tag);\r\n            });\r\n        }\r\n        this._walkParents((entity) => {\r\n            if (entity === this._root._rootContainer) {\r\n                isConnected = true;\r\n            }\r\n            if (entity._defaultThemes.length > 0) {\r\n                defaults.push(entity._defaultThemes);\r\n            }\r\n            const theme = entity.get(\"themes\");\r\n            if (theme) {\r\n                themes.push(theme);\r\n            }\r\n            const tags = entity.get(\"themeTags\");\r\n            if (tags) {\r\n                $array.each(tags, (tag) => {\r\n                    themeTags.add(tag);\r\n                });\r\n            }\r\n        });\r\n        themes = defaults.concat(themes);\r\n        this._removeTemplates();\r\n        if (isConnected) {\r\n            $array.eachReverse(this.classNames, (name) => {\r\n                const allRules = [];\r\n                $array.each(themes, (themes) => {\r\n                    $array.each(themes, (theme) => {\r\n                        const rules = theme._lookupRules(name);\r\n                        if (rules) {\r\n                            $array.eachReverse(rules, (rule) => {\r\n                                const matches = rule.tags.every((tag) => {\r\n                                    return themeTags.has(tag);\r\n                                });\r\n                                if (matches) {\r\n                                    const result = $array.getFirstSortedIndex(allRules, (x) => {\r\n                                        const order = $order.compare(rule.tags.length, x.tags.length);\r\n                                        if (order === 0) {\r\n                                            return $order.compareArray(rule.tags, x.tags, $order.compare);\r\n                                        }\r\n                                        else {\r\n                                            return order;\r\n                                        }\r\n                                    });\r\n                                    allRules.splice(result.index, 0, rule);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n                $array.each(allRules, (rule) => {\r\n                    this._templates.push(rule.template);\r\n                    rule.template._setObjectTemplate(this);\r\n                });\r\n            });\r\n        }\r\n        this._applyTemplates();\r\n        if (isConnected) {\r\n            // This causes it to only run the setup function the first time that the themes are applied\r\n            this._runSetup = false;\r\n        }\r\n        return isConnected;\r\n    }\r\n    _changed() { }\r\n    _beforeChanged() {\r\n        if (this.isDirty(\"id\")) {\r\n            const id = this.get(\"id\");\r\n            if (id) {\r\n                this._registerId(id);\r\n            }\r\n            const prevId = this._prevSettings.id;\r\n            if (prevId) {\r\n                delete registry.entitiesById[prevId];\r\n            }\r\n        }\r\n    }\r\n    _registerId(id) {\r\n        if (registry.entitiesById[id] && registry.entitiesById[id] !== this) {\r\n            throw new Error(\"An entity with id \\\"\" + id + \"\\\" already exists.\");\r\n        }\r\n        registry.entitiesById[id] = this;\r\n    }\r\n    _afterChanged() { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addDisposer(disposer) {\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        const template = this._template;\r\n        if (template) {\r\n            template._removeObjectTemplate(this);\r\n        }\r\n        $array.each(this._internalTemplates, (template) => {\r\n            template._removeObjectTemplate(this);\r\n        });\r\n        this._removeTemplates();\r\n        this._disposeTemplates();\r\n        this.events.dispose();\r\n        this._disposers.forEach((x) => {\r\n            x.dispose();\r\n        });\r\n        $object.each(this._disposerProperties, (_, disposers) => {\r\n            $array.each(disposers, (disposer) => {\r\n                disposer.dispose();\r\n            });\r\n        });\r\n        const id = this.get(\"id\");\r\n        if (id) {\r\n            delete registry.entitiesById[id];\r\n        }\r\n    }\r\n    /**\r\n     * Creates and returns a \"disposable\" timeout.\r\n     *\r\n     * @param   fn     Callback\r\n     * @param   delay  Delay in milliseconds\r\n     * @return         Timeout disposer\r\n     */\r\n    setTimeout(fn, delay) {\r\n        const id = setTimeout(() => {\r\n            this.removeDispose(disposer);\r\n            fn();\r\n        }, delay);\r\n        const disposer = new Disposer(() => {\r\n            clearTimeout(id);\r\n        });\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removeDispose(target) {\r\n        if (!this.isDisposed()) {\r\n            let index = $array.indexOf(this._disposers, target);\r\n            if (index > -1) {\r\n                this._disposers.splice(index, 1);\r\n            }\r\n        }\r\n        target.dispose();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    hasTag(tag) {\r\n        return $array.indexOf(this.get(\"themeTags\", []), tag) !== -1;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addTag(tag) {\r\n        if (!this.hasTag(tag)) {\r\n            const tags = this.get(\"themeTags\", []);\r\n            tags.push(tag);\r\n            this.set(\"themeTags\", tags);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    removeTag(tag) {\r\n        if (this.hasTag(tag)) {\r\n            const tags = this.get(\"themeTags\", []);\r\n            $array.remove(tags, tag);\r\n            this.set(\"themeTags\", tags);\r\n        }\r\n    }\r\n    _t(text, locale, ...rest) {\r\n        return this._root.language.translate(text, locale, ...rest);\r\n    }\r\n    /**\r\n     * An instance of [[Root]] object.\r\n     *\r\n     * @readonly\r\n     * @since 5.0.6\r\n     * @return Root object\r\n     */\r\n    get root() {\r\n        return this._root;\r\n    }\r\n}\r\nObject.defineProperty(Entity, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Entity\"\r\n});\r\nObject.defineProperty(Entity, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: [\"Entity\"]\r\n});\r\n//# sourceMappingURL=Entity.js.map","import { EventDispatcher } from \"./EventDispatcher\";\r\nimport { Disposer, MultiDisposer } from \"./Disposer\";\r\nimport * as $array from \"./Array\";\r\nimport * as $object from \"./Object\";\r\nexport class TemplateState {\r\n    constructor(name, template, settings) {\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_name\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._name = name;\r\n        this._template = template;\r\n        this._settings = settings;\r\n    }\r\n    get(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    set(key, value) {\r\n        this._settings[key] = value;\r\n        // TODO maybe only do this if the value changed ?\r\n        this._template._stateChanged(this._name);\r\n    }\r\n    remove(key) {\r\n        delete this._settings[key];\r\n        // TODO maybe only do this if the value changed ?\r\n        this._template._stateChanged(this._name);\r\n    }\r\n    setAll(settings) {\r\n        $object.keys(settings).forEach((key) => {\r\n            this._settings[key] = settings[key];\r\n        });\r\n        this._template._stateChanged(this._name);\r\n    }\r\n    _apply(other, seen) {\r\n        $object.each(this._settings, (key, value) => {\r\n            if (!seen[key] && !other._userSettings[key]) {\r\n                seen[key] = true;\r\n                other.setRaw(key, value);\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class TemplateStates {\r\n    constructor(template) {\r\n        Object.defineProperty(this, \"_template\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._template = template;\r\n    }\r\n    lookup(name) {\r\n        return this._states[name];\r\n    }\r\n    create(name, settings) {\r\n        const state = this._states[name];\r\n        if (state) {\r\n            state.setAll(settings);\r\n            return state;\r\n        }\r\n        else {\r\n            const state = new TemplateState(name, this._template, settings);\r\n            this._states[name] = state;\r\n            this._template._stateChanged(name);\r\n            return state;\r\n        }\r\n    }\r\n    remove(name) {\r\n        delete this._states[name];\r\n        this._template._stateChanged(name);\r\n    }\r\n    _apply(entity, state) {\r\n        $object.each(this._states, (key, value) => {\r\n            let seen = state.states[key];\r\n            if (seen == null) {\r\n                seen = state.states[key] = {};\r\n            }\r\n            const other = entity.states.create(key, {});\r\n            value._apply(other, seen);\r\n        });\r\n    }\r\n}\r\nexport class TemplateAdapters {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_callbacks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n    }\r\n    add(key, callback) {\r\n        let callbacks = this._callbacks[key];\r\n        if (callbacks === undefined) {\r\n            callbacks = this._callbacks[key] = [];\r\n        }\r\n        callbacks.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(callbacks, callback);\r\n            if (callbacks.length === 0) {\r\n                delete this._callbacks[key];\r\n            }\r\n        });\r\n    }\r\n    remove(key) {\r\n        const callbacks = this._callbacks[key];\r\n        if (callbacks !== undefined) {\r\n            delete this._callbacks[key];\r\n        }\r\n    }\r\n    _apply(entity) {\r\n        const disposers = [];\r\n        $object.each(this._callbacks, (key, callbacks) => {\r\n            $array.each(callbacks, (callback) => {\r\n                disposers.push(entity.adapters.add(key, callback));\r\n            });\r\n        });\r\n        return new MultiDisposer(disposers);\r\n    }\r\n}\r\n// TODO maybe extend from Properties ?\r\nexport class Template {\r\n    constructor(settings, isReal) {\r\n        Object.defineProperty(this, \"_settings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_privateSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        // TODO code duplication with Properties\r\n        Object.defineProperty(this, \"_settingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_privateSettingEvents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_entities\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"states\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new TemplateStates(this)\r\n        });\r\n        Object.defineProperty(this, \"adapters\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new TemplateAdapters()\r\n        });\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        Object.defineProperty(this, \"setup\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this._settings = settings;\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    static new(settings) {\r\n        return new Template(settings, true);\r\n    }\r\n    get(key, fallback) {\r\n        const value = this._settings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    setRaw(key, value) {\r\n        this._settings[key] = value;\r\n    }\r\n    set(key, value) {\r\n        if (this._settings[key] !== value) {\r\n            this.setRaw(key, value);\r\n            this._entities.forEach((entity) => {\r\n                entity._setTemplateProperty(this, key, value);\r\n            });\r\n        }\r\n    }\r\n    remove(key) {\r\n        if (key in this._settings) {\r\n            delete this._settings[key];\r\n            this._entities.forEach((entity) => {\r\n                entity._removeTemplateProperty(key);\r\n            });\r\n        }\r\n    }\r\n    removeAll() {\r\n        $object.each(this._settings, (key, _value) => {\r\n            this.remove(key);\r\n        });\r\n    }\r\n    getPrivate(key, fallback) {\r\n        const value = this._privateSettings[key];\r\n        if (value !== undefined) {\r\n            return value;\r\n        }\r\n        else {\r\n            return fallback;\r\n        }\r\n    }\r\n    setPrivateRaw(key, value) {\r\n        this._privateSettings[key] = value;\r\n        return value;\r\n    }\r\n    setPrivate(key, value) {\r\n        if (this._privateSettings[key] !== value) {\r\n            this.setPrivateRaw(key, value);\r\n            this._entities.forEach((entity) => {\r\n                entity._setTemplatePrivateProperty(this, key, value);\r\n            });\r\n        }\r\n        return value;\r\n    }\r\n    removePrivate(key) {\r\n        if (key in this._privateSettings) {\r\n            delete this._privateSettings[key];\r\n            this._entities.forEach((entity) => {\r\n                entity._removeTemplatePrivateProperty(key);\r\n            });\r\n        }\r\n    }\r\n    setAll(value) {\r\n        $object.each(value, (key, value) => {\r\n            this.set(key, value);\r\n        });\r\n    }\r\n    // TODO code duplication with Properties\r\n    on(key, callback) {\r\n        let events = this._settingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._settingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._settingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    // TODO code duplication with Properties\r\n    onPrivate(key, callback) {\r\n        let events = this._privateSettingEvents[key];\r\n        if (events === undefined) {\r\n            events = this._privateSettingEvents[key] = [];\r\n        }\r\n        events.push(callback);\r\n        return new Disposer(() => {\r\n            $array.removeFirst(events, callback);\r\n            if (events.length === 0) {\r\n                delete this._privateSettingEvents[key];\r\n            }\r\n        });\r\n    }\r\n    _apply(entity, state) {\r\n        const disposers = [];\r\n        $object.each(this._settingEvents, (key, events) => {\r\n            $array.each(events, (event) => {\r\n                disposers.push(entity.on(key, event));\r\n            });\r\n        });\r\n        $object.each(this._privateSettingEvents, (key, events) => {\r\n            $array.each(events, (event) => {\r\n                disposers.push(entity.onPrivate(key, event));\r\n            });\r\n        });\r\n        this.states._apply(entity, state);\r\n        disposers.push(this.adapters._apply(entity));\r\n        disposers.push(entity.events.copyFrom(this.events));\r\n        return new MultiDisposer(disposers);\r\n    }\r\n    _setObjectTemplate(entity) {\r\n        this._entities.push(entity);\r\n    }\r\n    _removeObjectTemplate(entity) {\r\n        $array.remove(this._entities, entity);\r\n    }\r\n    _stateChanged(name) {\r\n        this._entities.forEach((entity) => {\r\n            entity._applyStateByKey(name);\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=Template.js.map","import { __awaiter } from \"tslib\";\r\nimport { Entity } from \"../util/Entity\";\r\nimport { Template } from \"../util/Template\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { EventDispatcher } from \"../util/EventDispatcher\";\r\nimport { MultiDisposer, CounterDisposer } from \"../util/Disposer\";\r\nimport { waitForAnimations } from \"../util/Animation\";\r\nimport * as $utils from \"../util/Utils\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $object from \"../util/Object\";\r\nimport * as $math from \"../util/Math\";\r\n//import { populateString } from \"../util/PopulateString\";\r\n/**\r\n * An [[EventDispatcher]] for [[Sprite]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n */\r\nclass SpriteEventDispatcher extends EventDispatcher {\r\n    constructor(sprite) {\r\n        super();\r\n        Object.defineProperty(this, \"_sprite\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rendererDisposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dispatchParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        this._sprite = sprite;\r\n    }\r\n    _makePointerEvent(key, event) {\r\n        return {\r\n            type: key,\r\n            originalEvent: event.event,\r\n            point: event.point,\r\n            simulated: event.simulated,\r\n            native: event.native,\r\n            target: this._sprite\r\n        };\r\n    }\r\n    _onRenderer(key, dispatch) {\r\n        // TODO: is this OK? it'd be good not to require to set this on each individual element\r\n        this._sprite.set(\"interactive\", true);\r\n        this._sprite._display.interactive = true;\r\n        let events = this._rendererDisposers[key];\r\n        if (events === undefined) {\r\n            const disposer = this._sprite._display.on(key, (e) => {\r\n                dispatch.call(this, e);\r\n            });\r\n            events = this._rendererDisposers[key] = new CounterDisposer(() => {\r\n                delete this._rendererDisposers[key];\r\n                disposer.dispose();\r\n            });\r\n        }\r\n        return events.increment();\r\n    }\r\n    _on(once, type, callback, context, shouldClone, dispatch) {\r\n        const info = super._on(once, type, callback, context, shouldClone, dispatch);\r\n        const rendererEvent = SpriteEventDispatcher.RENDERER_EVENTS[type];\r\n        if (rendererEvent !== undefined) {\r\n            info.disposer = new MultiDisposer([\r\n                info.disposer,\r\n                this._onRenderer(type, rendererEvent),\r\n            ]);\r\n        }\r\n        return info;\r\n    }\r\n    /**\r\n     * Will stop any bubbling up of the event to element's parents.\r\n     *\r\n     * Should be called in an event handler, e.g.:\r\n     *\r\n     * ```TypeScript\r\n     * element.events.on(\"pointerdown\", function(ev) {\r\n     *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n     *   // ...\r\n     *   ev.target.events.stopParentDispatch();\r\n     * });\r\n     * ```\r\n     * ```JavaScript\r\n     * element.events.on(\"pointerdown\", function(ev) {\r\n     *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n     *   // ...\r\n     *   ev.target.events.stopParentDispatch();\r\n     * });\r\n     * ```\r\n     */\r\n    stopParentDispatch() {\r\n        this._dispatchParents = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    dispatchParents(type, event) {\r\n        const old = this._dispatchParents;\r\n        this._dispatchParents = true;\r\n        try {\r\n            this.dispatch(type, event);\r\n            if (this._dispatchParents && this._sprite.parent) {\r\n                this._sprite.parent.events.dispatchParents(type, event);\r\n            }\r\n        }\r\n        finally {\r\n            this._dispatchParents = old;\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(SpriteEventDispatcher, \"RENDERER_EVENTS\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: {\r\n        \"click\": function (event) {\r\n            if (this.isEnabled(\"click\") && !this._sprite.isDragging() && this._sprite._hasDown() && !this._sprite._hasMoved(this._makePointerEvent(\"click\", event))) {\r\n                this.dispatch(\"click\", this._makePointerEvent(\"click\", event));\r\n            }\r\n        },\r\n        \"rightclick\": function (event) {\r\n            if (this.isEnabled(\"rightclick\")) {\r\n                this.dispatch(\"rightclick\", this._makePointerEvent(\"rightclick\", event));\r\n            }\r\n        },\r\n        \"middleclick\": function (event) {\r\n            if (this.isEnabled(\"middleclick\")) {\r\n                this.dispatch(\"middleclick\", this._makePointerEvent(\"middleclick\", event));\r\n            }\r\n        },\r\n        \"dblclick\": function (event) {\r\n            this.dispatchParents(\"dblclick\", this._makePointerEvent(\"dblclick\", event));\r\n        },\r\n        \"pointerover\": function (event) {\r\n            if (this.isEnabled(\"pointerover\")) {\r\n                this.dispatch(\"pointerover\", this._makePointerEvent(\"pointerover\", event));\r\n            }\r\n        },\r\n        \"pointerout\": function (event) {\r\n            if (this.isEnabled(\"pointerout\")) {\r\n                this.dispatch(\"pointerout\", this._makePointerEvent(\"pointerout\", event));\r\n            }\r\n        },\r\n        \"pointerdown\": function (event) {\r\n            this.dispatchParents(\"pointerdown\", this._makePointerEvent(\"pointerdown\", event));\r\n        },\r\n        \"pointerup\": function (event) {\r\n            if (this.isEnabled(\"pointerup\")) {\r\n                this.dispatch(\"pointerup\", this._makePointerEvent(\"pointerup\", event));\r\n            }\r\n        },\r\n        \"globalpointerup\": function (event) {\r\n            if (this.isEnabled(\"globalpointerup\")) {\r\n                this.dispatch(\"globalpointerup\", this._makePointerEvent(\"globalpointerup\", event));\r\n            }\r\n        },\r\n        \"globalpointermove\": function (event) {\r\n            if (this.isEnabled(\"globalpointermove\")) {\r\n                this.dispatch(\"globalpointermove\", this._makePointerEvent(\"globalpointermove\", event));\r\n            }\r\n        },\r\n        \"wheel\": function (event) {\r\n            this.dispatchParents(\"wheel\", {\r\n                type: \"wheel\",\r\n                target: this._sprite,\r\n                originalEvent: event.event,\r\n                point: event.point,\r\n            });\r\n        },\r\n    }\r\n});\r\n/**\r\n * A base class for all visual elements.\r\n *\r\n * @important\r\n */\r\nexport class Sprite extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_adjustedLocalBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { left: 0, right: 0, top: 0, bottom: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_localBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { left: 0, right: 0, top: 0, bottom: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_parent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dataItem\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_templateField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_sizeDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // Will be true only when dragging\r\n        Object.defineProperty(this, \"_isDragging\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // The event when the dragging starts\r\n        Object.defineProperty(this, \"_dragEvent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // The position when dragging starts\r\n        Object.defineProperty(this, \"_dragPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isHidden\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isShowing\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isHiding\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isDown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_downPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downPoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_toggleDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dragDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_hoverDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_focusDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipMoveDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipPointerDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_statesHandled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.setPrivateRaw(\"visible\", true);\r\n        super._afterNew();\r\n    }\r\n    _markDirtyKey(key) {\r\n        super._markDirtyKey(key);\r\n        if (key == \"x\" || key == \"y\" || key == \"dx\" || key == \"dy\") {\r\n            this.markDirtyBounds();\r\n            this._addPercentagePositionChildren();\r\n            this.markDirtyPosition();\r\n        }\r\n    }\r\n    _markDirtyPrivateKey(key) {\r\n        super._markDirtyPrivateKey(key);\r\n        if (key == \"x\" || key == \"y\") {\r\n            this.markDirtyPosition();\r\n        }\r\n    }\r\n    _removeTemplateField() {\r\n        if (this._templateField) {\r\n            this._templateField._removeObjectTemplate(this);\r\n        }\r\n    }\r\n    _createEvents() {\r\n        return new SpriteEventDispatcher(this);\r\n    }\r\n    _processTemplateField() {\r\n        let template;\r\n        const field = this.get(\"templateField\");\r\n        if (field) {\r\n            const dataItem = this.dataItem;\r\n            if (dataItem) {\r\n                const context = dataItem.dataContext;\r\n                if (context) {\r\n                    template = context[field];\r\n                    if (!(template instanceof Template) && template) {\r\n                        template = Template.new(template);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this._templateField !== template) {\r\n            this._removeTemplateField();\r\n            this._templateField = template;\r\n            if (template) {\r\n                template._setObjectTemplate(this);\r\n            }\r\n            this._applyTemplates();\r\n        }\r\n    }\r\n    // TODO change this to run before the element is added to the parent, so that way\r\n    //      it doesn't need to apply the themes twice\r\n    _setDataItem(dataItem) {\r\n        const oldDataItem = this._dataItem;\r\n        this._dataItem = dataItem;\r\n        this._processTemplateField();\r\n        const eventType = \"dataitemchanged\";\r\n        if (this.events.isEnabled(eventType)) {\r\n            this.events.dispatch(eventType, {\r\n                type: eventType,\r\n                target: this,\r\n                oldDataItem: oldDataItem,\r\n                newDataItem: dataItem\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * A [[DataItem]] used for this element.\r\n     *\r\n     * NOTE: data item is being assigned automatically in most cases where it\r\n     * matters. Use this accessor to set data item only if you know what you're\r\n     * doing.\r\n     *\r\n     * @param  value  Data item\r\n     */\r\n    set dataItem(value) {\r\n        this._setDataItem(value);\r\n    }\r\n    /**\r\n     * @return DataItem\r\n     */\r\n    get dataItem() {\r\n        if (this._dataItem) {\r\n            return this._dataItem;\r\n        }\r\n        else {\r\n            let parent = this._parent;\r\n            while (parent) {\r\n                if (parent._dataItem) {\r\n                    return parent._dataItem;\r\n                }\r\n                else {\r\n                    parent = parent._parent;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _addPercentageSizeChildren() {\r\n        let parent = this.parent;\r\n        if (parent) {\r\n            if (this.get(\"width\") instanceof Percent || this.get(\"height\") instanceof Percent) {\r\n                $array.pushOne(parent._percentageSizeChildren, this);\r\n            }\r\n            else {\r\n                $array.removeFirst(parent._percentageSizeChildren, this);\r\n            }\r\n        }\r\n    }\r\n    _addPercentagePositionChildren() {\r\n        let parent = this.parent;\r\n        if (parent) {\r\n            if (this.get(\"x\") instanceof Percent || this.get(\"y\") instanceof Percent) {\r\n                $array.pushOne(parent._percentagePositionChildren, this);\r\n            }\r\n            else {\r\n                $array.removeFirst(parent._percentagePositionChildren, this);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyPosition() {\r\n        this._root._addDirtyPosition(this);\r\n    }\r\n    updatePivotPoint() {\r\n        const bounds = this._localBounds;\r\n        if (bounds) {\r\n            const centerX = this.get(\"centerX\");\r\n            if (centerX != null) {\r\n                this._display.pivot.x = bounds.left + $utils.relativeToValue(centerX, bounds.right - bounds.left);\r\n            }\r\n            const centerY = this.get(\"centerY\");\r\n            if (centerY != null) {\r\n                this._display.pivot.y = bounds.top + $utils.relativeToValue(centerY, bounds.bottom - bounds.top);\r\n            }\r\n        }\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        // handling states in beforeChanged, otherwise states is not applied without animated theme\r\n        this._handleStates();\r\n        if (this.isDirty(\"tooltip\")) {\r\n            const previous = this._prevSettings.tooltip;\r\n            if (previous) {\r\n                previous.dispose();\r\n            }\r\n        }\r\n        if (this.isDirty(\"layer\") || this.isDirty(\"layerMargin\")) {\r\n            this._display.setLayer(this.get(\"layer\"), this.get(\"layerMargin\"));\r\n            this.markDirtyLayer();\r\n        }\r\n        if (this.isDirty(\"tooltipPosition\")) {\r\n            const tooltipMoveDp = this._tooltipMoveDp;\r\n            if (tooltipMoveDp) {\r\n                tooltipMoveDp.dispose();\r\n                this._tooltipMoveDp = undefined;\r\n            }\r\n            const tooltipPointerDp = this._tooltipPointerDp;\r\n            if (tooltipPointerDp) {\r\n                tooltipPointerDp.dispose();\r\n                this._tooltipPointerDp = undefined;\r\n            }\r\n            if (this.get(\"tooltipPosition\") == \"pointer\") {\r\n                this._tooltipPointerDp = new MultiDisposer([\r\n                    this.events.on(\"pointerover\", () => {\r\n                        this._tooltipMoveDp = this.events.on(\"globalpointermove\", (e) => {\r\n                            this.showTooltip(e.point);\r\n                        });\r\n                    }),\r\n                    this.events.on(\"pointerout\", () => {\r\n                        const tooltipMoveDp = this._tooltipMoveDp;\r\n                        if (tooltipMoveDp) {\r\n                            tooltipMoveDp.dispose();\r\n                            this._tooltipMoveDp = undefined;\r\n                        }\r\n                    })\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n    _handleStates() {\r\n        if (!this._statesHandled) {\r\n            if (this.isDirty(\"active\")) {\r\n                if (this.get(\"active\")) {\r\n                    this.states.applyAnimate(\"active\");\r\n                    this.set(\"ariaChecked\", true);\r\n                }\r\n                else {\r\n                    if (!this.isHidden()) {\r\n                        this.states.applyAnimate(\"default\");\r\n                    }\r\n                    this.set(\"ariaChecked\", false);\r\n                }\r\n                this.markDirtyAccessibility();\r\n            }\r\n            if (this.isDirty(\"disabled\")) {\r\n                if (this.get(\"disabled\")) {\r\n                    this.states.applyAnimate(\"disabled\");\r\n                    this.set(\"ariaChecked\", false);\r\n                }\r\n                else {\r\n                    if (!this.isHidden()) {\r\n                        this.states.applyAnimate(\"default\");\r\n                    }\r\n                    this.set(\"ariaChecked\", true);\r\n                }\r\n                this.markDirtyAccessibility();\r\n            }\r\n            this._statesHandled = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        const display = this._display;\r\n        const events = this.events;\r\n        if (this.isDirty(\"draggable\")) {\r\n            const draggable = this.get(\"draggable\");\r\n            if (draggable) {\r\n                this.set(\"interactive\", true);\r\n                this._dragDp = new MultiDisposer([\r\n                    events.on(\"pointerdown\", (ev) => {\r\n                        this.dragStart(ev);\r\n                    }),\r\n                    events.on(\"globalpointermove\", (ev) => {\r\n                        this.dragMove(ev);\r\n                    }),\r\n                    events.on(\"globalpointerup\", (ev) => {\r\n                        this.dragStop(ev);\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                if (this._dragDp) {\r\n                    this._dragDp.dispose();\r\n                    this._dragDp = undefined;\r\n                }\r\n            }\r\n            display.cancelTouch = draggable ? true : false;\r\n        }\r\n        if (this.isDirty(\"tooltipText\") || this.isDirty(\"tooltipHTML\") || this.isDirty(\"showTooltipOn\")) {\r\n            const tooltipText = this.get(\"tooltipText\");\r\n            const tooltipHTML = this.get(\"tooltipHTML\");\r\n            const showTooltipOn = this.get(\"showTooltipOn\", \"hover\");\r\n            if (this._tooltipDp) {\r\n                this._tooltipDp.dispose();\r\n                this._tooltipDp = undefined;\r\n            }\r\n            if (tooltipText || tooltipHTML) {\r\n                if (showTooltipOn == \"click\") {\r\n                    this._tooltipDp = new MultiDisposer([\r\n                        events.on(\"click\", () => {\r\n                            this.setTimeout(() => this.showTooltip(), 10);\r\n                        }),\r\n                        $utils.addEventListener(document, \"click\", (_ev) => {\r\n                            this.hideTooltip();\r\n                        })\r\n                    ]);\r\n                }\r\n                else if (showTooltipOn == \"always\") {\r\n                    // nothing\r\n                }\r\n                else {\r\n                    this._tooltipDp = new MultiDisposer([\r\n                        events.on(\"pointerover\", () => {\r\n                            this.showTooltip();\r\n                        }),\r\n                        events.on(\"pointerout\", () => {\r\n                            this.hideTooltip();\r\n                        })\r\n                    ]);\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"toggleKey\")) {\r\n            let toggleKey = this.get(\"toggleKey\");\r\n            if (toggleKey && toggleKey != \"none\") {\r\n                this._toggleDp = events.on(\"click\", () => {\r\n                    if (!this._isDragging) {\r\n                        this.set(toggleKey, !this.get(toggleKey));\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (this._toggleDp) {\r\n                    this._toggleDp.dispose();\r\n                    this._toggleDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"opacity\")) {\r\n            display.alpha = Math.max(0, this.get(\"opacity\", 1));\r\n        }\r\n        if (this.isDirty(\"rotation\")) {\r\n            this.markDirtyBounds();\r\n            display.angle = this.get(\"rotation\", 0);\r\n        }\r\n        if (this.isDirty(\"scale\")) {\r\n            this.markDirtyBounds();\r\n            display.scale = this.get(\"scale\", 0);\r\n        }\r\n        if (this.isDirty(\"centerX\") || this.isDirty(\"centerY\")) {\r\n            this.markDirtyBounds();\r\n            this.updatePivotPoint();\r\n        }\r\n        if (this.isDirty(\"visible\") || this.isPrivateDirty(\"visible\") || this.isDirty(\"forceHidden\")) {\r\n            if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\r\n                display.visible = false;\r\n                this.hideTooltip();\r\n            }\r\n            else {\r\n                display.visible = true;\r\n            }\r\n            this.markDirtyBounds();\r\n            if (this.get(\"focusable\")) {\r\n                this.markDirtyAccessibility();\r\n            }\r\n        }\r\n        if (this.isDirty(\"width\") || this.isDirty(\"height\")) {\r\n            this.markDirtyBounds();\r\n            this._addPercentageSizeChildren();\r\n            const parent = this.parent;\r\n            if (parent) {\r\n                if ((this.isDirty(\"width\") && this.get(\"width\") instanceof Percent) || (this.isDirty(\"height\") && this.get(\"height\") instanceof Percent)) {\r\n                    parent.markDirty();\r\n                    parent._prevWidth = 0;\r\n                }\r\n            }\r\n            this._sizeDirty = true;\r\n        }\r\n        if (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"minWidth\") || this.isDirty(\"minHeight\") || this.isPrivateDirty(\"maxWidth\") || this.isPrivateDirty(\"maxHeight\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\")) {\r\n            this.markDirtyBounds();\r\n            this._sizeDirty = true;\r\n        }\r\n        if (this._sizeDirty) {\r\n            this._updateSize();\r\n        }\r\n        if (this.isDirty(\"wheelable\")) {\r\n            const wheelable = this.get(\"wheelable\");\r\n            if (wheelable) {\r\n                this.set(\"interactive\", true);\r\n            }\r\n            display.wheelable = wheelable ? true : false;\r\n        }\r\n        // Accessibility\r\n        if (this.isDirty(\"tabindexOrder\") || this.isDirty(\"focusableGroup\")) {\r\n            if (this.get(\"focusable\")) {\r\n                this._root._registerTabindexOrder(this);\r\n            }\r\n            else {\r\n                this._root._unregisterTabindexOrder(this);\r\n            }\r\n        }\r\n        if (this.isDirty(\"filter\")) {\r\n            //this.markDirtyBounds();\r\n            display.filter = this.get(\"filter\");\r\n        }\r\n        if (this.isDirty(\"cursorOverStyle\")) {\r\n            display.cursorOverStyle = this.get(\"cursorOverStyle\");\r\n        }\r\n        if (this.isDirty(\"hoverOnFocus\")) {\r\n            if (this.get(\"hoverOnFocus\")) {\r\n                this._focusDp = new MultiDisposer([\r\n                    events.on(\"focus\", () => {\r\n                        // TODO: proper hover, not just tooltip\r\n                        this.showTooltip();\r\n                    }),\r\n                    events.on(\"blur\", () => {\r\n                        // TODO: proper hover, not just tooltip\r\n                        this.hideTooltip();\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                if (this._focusDp) {\r\n                    this._focusDp.dispose();\r\n                    this._focusDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"focusable\")) {\r\n            if (this.get(\"focusable\")) {\r\n                this._root._registerTabindexOrder(this);\r\n            }\r\n            else {\r\n                this._root._unregisterTabindexOrder(this);\r\n            }\r\n            this.markDirtyAccessibility();\r\n        }\r\n        if (this.isDirty(\"role\") || this.isDirty(\"ariaLive\") || this.isDirty(\"ariaChecked\") || this.isDirty(\"ariaHidden\") || this.isDirty(\"ariaOrientation\") || this.isDirty(\"ariaValueNow\") || this.isDirty(\"ariaValueMin\") || this.isDirty(\"ariaValueMax\") || this.isDirty(\"ariaValueText\") || this.isDirty(\"ariaLabel\") || this.isDirty(\"ariaControls\")) {\r\n            // display.accessibility.ariaLabel = populateString(this, this.get(\"ariaLabel\", \"\"));\r\n            // @todo make sure ariaLabel gets populated in Root\r\n            this.markDirtyAccessibility();\r\n        }\r\n        if (this.isDirty(\"exportable\")) {\r\n            display.exportable = this.get(\"exportable\");\r\n        }\r\n        if (this.isDirty(\"interactive\")) {\r\n            const events = this.events;\r\n            if (this.get(\"interactive\")) {\r\n                this._hoverDp = new MultiDisposer([\r\n                    events.on(\"click\", (ev) => {\r\n                        if ($utils.isTouchEvent(ev.originalEvent)) {\r\n                            if (!this.getPrivate(\"touchHovering\")) {\r\n                                this.setTimeout(() => {\r\n                                    this._handleOver();\r\n                                    if (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\r\n                                        this.showTooltip();\r\n                                    }\r\n                                    this.setPrivateRaw(\"touchHovering\", true);\r\n                                    this.events.dispatch(\"pointerover\", {\r\n                                        type: \"pointerover\",\r\n                                        target: ev.target,\r\n                                        originalEvent: ev.originalEvent,\r\n                                        point: ev.point,\r\n                                        simulated: ev.simulated\r\n                                    });\r\n                                }, 10);\r\n                            }\r\n                        }\r\n                    }),\r\n                    events.on(\"globalpointerup\", (ev) => {\r\n                        if ($utils.isTouchEvent(ev.originalEvent)) {\r\n                            if (this.getPrivate(\"touchHovering\")) {\r\n                                this._handleOut();\r\n                                if (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\r\n                                    this.hideTooltip();\r\n                                }\r\n                            }\r\n                            this.setPrivateRaw(\"touchHovering\", false);\r\n                            this.events.dispatch(\"pointerout\", {\r\n                                type: \"pointerout\",\r\n                                target: ev.target,\r\n                                originalEvent: ev.originalEvent,\r\n                                point: ev.point,\r\n                                simulated: ev.simulated\r\n                            });\r\n                        }\r\n                        if (this._isDown) {\r\n                            this._handleUp(ev);\r\n                        }\r\n                        //this._isDown = false;\r\n                    }),\r\n                    events.on(\"pointerover\", () => {\r\n                        this._handleOver();\r\n                    }),\r\n                    events.on(\"pointerout\", () => {\r\n                        this._handleOut();\r\n                    }),\r\n                    events.on(\"pointerdown\", (e) => {\r\n                        this._handleDown(e);\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                this._display.interactive = false;\r\n                if (this._hoverDp) {\r\n                    this._hoverDp.dispose();\r\n                    this._hoverDp = undefined;\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"forceInactive\")) {\r\n            this._display.inactive = this.get(\"forceInactive\", false);\r\n        }\r\n        if (this.get(\"showTooltipOn\") == \"always\" && this._display.visible) {\r\n            this.showTooltip();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragStart(e) {\r\n        this._dragEvent = e;\r\n        this.events.stopParentDispatch();\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragStop(e) {\r\n        this._dragEvent = undefined;\r\n        this._dragPoint = undefined;\r\n        this.events.stopParentDispatch();\r\n        if (this._isDragging) {\r\n            this._isDragging = false;\r\n            const type = \"dragstop\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, {\r\n                    type: type,\r\n                    target: this,\r\n                    originalEvent: e.originalEvent,\r\n                    point: e.point,\r\n                    simulated: e.simulated,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    _handleOver() {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"hoverActive\")) {\r\n                this.states.applyAnimate(\"hoverActive\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"hoverDisabled\")) {\r\n                this.states.applyAnimate(\"hoverDisabled\");\r\n            }\r\n            else {\r\n                this.states.applyAnimate(\"hover\");\r\n            }\r\n        }\r\n    }\r\n    _handleOut() {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"active\")) {\r\n                this.states.applyAnimate(\"active\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\r\n                this.states.applyAnimate(\"disabled\");\r\n            }\r\n            else {\r\n                if (this.states.lookup(\"hover\") || this.states.lookup(\"hoverActive\")) {\r\n                    this.states.applyAnimate(\"default\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleUp(e) {\r\n        if (!this.isHidden()) {\r\n            if (this.get(\"active\") && this.states.lookup(\"active\")) {\r\n                this.states.applyAnimate(\"active\");\r\n            }\r\n            else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\r\n                this.states.applyAnimate(\"disabled\");\r\n            }\r\n            else if (this.states.lookup(\"down\")) {\r\n                if (this.isHover()) {\r\n                    this.states.applyAnimate(\"hover\");\r\n                }\r\n                else {\r\n                    this.states.applyAnimate(\"default\");\r\n                }\r\n            }\r\n            // @todo remove this once migrated to _downPoints\r\n            this._downPoint = undefined;\r\n            const pointerId = $utils.getPointerId(e.originalEvent);\r\n            delete this._downPoints[pointerId];\r\n            if ($object.keys(this._downPoints).length == 0) {\r\n                this._isDown = false;\r\n            }\r\n        }\r\n    }\r\n    _hasMoved(e) {\r\n        // @todo remove this once migrated to _downPoints\r\n        // if (this._downPoint) {\r\n        // \tconst x = Math.abs(this._downPoint.x - e.point.x);\r\n        // \tconst y = Math.abs(this._downPoint.y - e.point.y);\r\n        // \treturn (x > 5) || (y > 5);\r\n        // }\r\n        const pointerId = $utils.getPointerId(e.originalEvent);\r\n        const downPoint = this._downPoints[pointerId];\r\n        if (downPoint) {\r\n            const x = Math.abs(downPoint.x - e.point.x);\r\n            const y = Math.abs(downPoint.y - e.point.y);\r\n            return (x > 5) || (y > 5);\r\n        }\r\n        return false;\r\n    }\r\n    _hasDown() {\r\n        return $object.keys(this._downPoints).length > 0;\r\n    }\r\n    _handleDown(e) {\r\n        const parent = this.parent;\r\n        if (parent && !this.get(\"draggable\")) {\r\n            parent._handleDown(e);\r\n        }\r\n        if (this.get(\"interactive\") && !this.isHidden()) {\r\n            if (this.states.lookup(\"down\")) {\r\n                this.states.applyAnimate(\"down\");\r\n            }\r\n            this._downPoint = {\r\n                x: e.point.x,\r\n                y: e.point.y\r\n            };\r\n            // @todo remove this once migrated to _downPoints\r\n            this._isDown = true;\r\n            const pointerId = $utils.getPointerId(e.originalEvent);\r\n            this._downPoints[pointerId] = {\r\n                x: e.point.x,\r\n                y: e.point.y\r\n            };\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * @todo should this be user-accessible?\r\n     */\r\n    dragMove(e) {\r\n        let dragEvent = this._dragEvent;\r\n        if (dragEvent) {\r\n            if (dragEvent.simulated && !e.simulated) {\r\n                return true;\r\n            }\r\n            let angle = 0;\r\n            let parent = this.parent;\r\n            while (parent != null) {\r\n                angle += parent.get(\"rotation\", 0);\r\n                parent = parent.parent;\r\n            }\r\n            let x = e.point.x - dragEvent.point.x;\r\n            let y = e.point.y - dragEvent.point.y;\r\n            const events = this.events;\r\n            if (dragEvent.simulated && !this._isDragging) {\r\n                this._isDragging = true;\r\n                this._dragEvent = e;\r\n                this._dragPoint = {\r\n                    x: this.x(),\r\n                    y: this.y()\r\n                };\r\n                const type = \"dragstart\";\r\n                if (events.isEnabled(type)) {\r\n                    events.dispatch(type, {\r\n                        type: type,\r\n                        target: this,\r\n                        originalEvent: e.originalEvent,\r\n                        point: e.point,\r\n                        simulated: e.simulated,\r\n                    });\r\n                }\r\n            }\r\n            if (this._isDragging) {\r\n                let dragPoint = this._dragPoint;\r\n                this.set(\"x\", dragPoint.x + x * $math.cos(angle) + y * $math.sin(angle));\r\n                this.set(\"y\", dragPoint.y + y * $math.cos(angle) - x * $math.sin(angle));\r\n                const type = \"dragged\";\r\n                if (events.isEnabled(type)) {\r\n                    events.dispatch(type, {\r\n                        type: type,\r\n                        target: this,\r\n                        originalEvent: e.originalEvent,\r\n                        point: e.point,\r\n                        simulated: e.simulated,\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                if (Math.hypot(x, y) > 5) {\r\n                    this._isDragging = true;\r\n                    this._dragEvent = e;\r\n                    this._dragPoint = {\r\n                        x: this.x(),\r\n                        y: this.y()\r\n                    };\r\n                    const type = \"dragstart\";\r\n                    if (events.isEnabled(type)) {\r\n                        events.dispatch(type, {\r\n                            type: type,\r\n                            target: this,\r\n                            originalEvent: e.originalEvent,\r\n                            point: e.point,\r\n                            simulated: e.simulated\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateSize() {\r\n    }\r\n    _getBounds() {\r\n        this._localBounds = this._display.getLocalBounds();\r\n    }\r\n    /**\r\n     * Returns depth (how deep in the hierachy of the content tree) of this\r\n     * element.\r\n     *\r\n     * @return Depth\r\n     */\r\n    depth() {\r\n        let self = this.parent;\r\n        let depth = 0;\r\n        while (true) {\r\n            if (self) {\r\n                ++depth;\r\n                self = self.parent;\r\n            }\r\n            else {\r\n                return depth;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySize() {\r\n        this._sizeDirty = true;\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyBounds() {\r\n        const display = this._display;\r\n        if (this.get(\"isMeasured\")) {\r\n            this._root._addDirtyBounds(this);\r\n            display.isMeasured = true;\r\n            display.invalidateBounds();\r\n            const parent = this.parent;\r\n            if (parent && this.get(\"position\") != \"absolute\") {\r\n                if (parent.get(\"width\") == null || parent.get(\"height\") == null || parent.get(\"layout\")) {\r\n                    parent.markDirtyBounds();\r\n                }\r\n            }\r\n            if (this.get(\"focusable\") && this.isFocus()) {\r\n                this.markDirtyAccessibility();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyAccessibility() {\r\n        //if (this._root.focused(this)) {\r\n        this._root._invalidateAccessibility(this);\r\n        //}\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyLayer() {\r\n        //this._display.markDirtyLayer(this.isDirty(\"opacity\") || this.isDirty(\"visible\")); https://codepen.io/team/amcharts/pen/gOWZPmP <- problems\r\n        this._display.markDirtyLayer(true);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        super.markDirty();\r\n        this.markDirtyLayer();\r\n    }\r\n    _updateBounds() {\r\n        const oldBounds = this._adjustedLocalBounds;\r\n        let newBounds;\r\n        // if display.visible == false, it still returns bounds\r\n        if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\r\n            newBounds = {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0\r\n            };\r\n            this._localBounds = newBounds;\r\n            this._adjustedLocalBounds = newBounds;\r\n        }\r\n        else {\r\n            this._getBounds();\r\n            this._fixMinBounds(this._localBounds);\r\n            this.updatePivotPoint();\r\n            this._adjustedLocalBounds = this._display.getAdjustedBounds(this._localBounds);\r\n            newBounds = this._adjustedLocalBounds;\r\n        }\r\n        if (!oldBounds || (oldBounds.left !== newBounds.left || oldBounds.top !== newBounds.top || oldBounds.right !== newBounds.right || oldBounds.bottom !== newBounds.bottom)) {\r\n            const eventType = \"boundschanged\";\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, { type: eventType, target: this });\r\n            }\r\n            if (this.parent) {\r\n                this.parent.markDirty();\r\n                this.parent.markDirtyBounds();\r\n            }\r\n        }\r\n    }\r\n    _fixMinBounds(bounds) {\r\n        let minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\r\n        let minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\r\n        if ($type.isNumber(minWidth)) {\r\n            if (bounds.right - bounds.left < minWidth) {\r\n                bounds.right = bounds.left + minWidth;\r\n            }\r\n        }\r\n        if ($type.isNumber(minHeight)) {\r\n            if (bounds.bottom - bounds.top < minHeight) {\r\n                bounds.bottom = bounds.top + minHeight;\r\n            }\r\n        }\r\n        let privateWidth = this.getPrivate(\"width\");\r\n        let privateHeight = this.getPrivate(\"height\");\r\n        if ($type.isNumber(privateWidth)) {\r\n            bounds.right = bounds.left + privateWidth;\r\n        }\r\n        if ($type.isNumber(privateHeight)) {\r\n            bounds.bottom = bounds.top + privateHeight;\r\n        }\r\n    }\r\n    _removeParent(parent) {\r\n        if (parent) {\r\n            parent.children.removeValue(this);\r\n            $array.removeFirst(parent._percentageSizeChildren, this);\r\n            $array.removeFirst(parent._percentagePositionChildren, this);\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._sizeDirty = false;\r\n        this._statesHandled = false;\r\n    }\r\n    /**\r\n     * Simulate hover over element.\r\n     */\r\n    hover() {\r\n        this.showTooltip();\r\n        this._handleOver();\r\n    }\r\n    /**\r\n     * Simulate unhover over element.\r\n     */\r\n    unhover() {\r\n        this.hideTooltip();\r\n        this._handleOut();\r\n    }\r\n    /**\r\n     * Shows element's [[Tooltip]].\r\n     */\r\n    showTooltip(point) {\r\n        const tooltip = this.getTooltip();\r\n        const tooltipText = this.get(\"tooltipText\");\r\n        const tooltipHTML = this.get(\"tooltipHTML\");\r\n        if ((tooltipText || tooltipHTML) && tooltip) {\r\n            const tooltipPosition = this.get(\"tooltipPosition\");\r\n            const tooltipTarget = this.getPrivate(\"tooltipTarget\", this);\r\n            if (tooltipPosition == \"fixed\" || !point) {\r\n                this._display._setMatrix();\r\n                point = this.toGlobal(tooltipTarget._getTooltipPoint());\r\n            }\r\n            tooltip.set(\"pointTo\", point);\r\n            tooltip.set(\"tooltipTarget\", tooltipTarget);\r\n            if (!tooltip.get(\"x\")) {\r\n                tooltip.set(\"x\", point.x);\r\n            }\r\n            if (!tooltip.get(\"y\")) {\r\n                tooltip.set(\"y\", point.y);\r\n            }\r\n            if (tooltipText) {\r\n                tooltip.label.set(\"text\", tooltipText);\r\n            }\r\n            if (tooltipHTML) {\r\n                tooltip.label.set(\"html\", tooltipHTML);\r\n            }\r\n            const dataItem = this.dataItem;\r\n            if (dataItem) {\r\n                tooltip.label._setDataItem(dataItem);\r\n            }\r\n            if (this.get(\"showTooltipOn\") == \"always\" && (point.x < 0 || point.x > this._root.width() || point.y < 0 || point.y > this._root.height())) {\r\n                this.hideTooltip();\r\n                return;\r\n            }\r\n            tooltip.label.text.markDirtyText();\r\n            const promise = tooltip.show();\r\n            this.setPrivateRaw(\"showingTooltip\", true);\r\n            return promise;\r\n        }\r\n    }\r\n    /**\r\n     * Hides element's [[Tooltip]].\r\n     */\r\n    hideTooltip() {\r\n        const tooltip = this.getTooltip();\r\n        if (tooltip) {\r\n            if (tooltip.get(\"tooltipTarget\") == this.getPrivate(\"tooltipTarget\", this)) {\r\n                let timeout = tooltip.get(\"keepTargetHover\") && tooltip.get(\"stateAnimationDuration\", 0) == 0 ? 400 : undefined;\r\n                const promise = tooltip.hide(timeout);\r\n                this.setPrivateRaw(\"showingTooltip\", false);\r\n                return promise;\r\n            }\r\n        }\r\n    }\r\n    _getTooltipPoint() {\r\n        const bounds = this._localBounds;\r\n        if (bounds) {\r\n            let x = 0;\r\n            let y = 0;\r\n            if (!this.get(\"isMeasured\")) {\r\n                x = $utils.relativeToValue(this.get(\"tooltipX\", 0), this.width());\r\n                y = $utils.relativeToValue(this.get(\"tooltipY\", 0), this.height());\r\n            }\r\n            else {\r\n                x = bounds.left + $utils.relativeToValue(this.get(\"tooltipX\", 0), bounds.right - bounds.left);\r\n                y = bounds.top + $utils.relativeToValue(this.get(\"tooltipY\", 0), bounds.bottom - bounds.top);\r\n            }\r\n            return { x, y };\r\n        }\r\n        return { x: 0, y: 0 };\r\n    }\r\n    /**\r\n     * Returns [[Tooltip]] used for this element.\r\n     *\r\n     * @return Tooltip\r\n     */\r\n    getTooltip() {\r\n        let tooltip = this.get(\"tooltip\");\r\n        if (!tooltip) {\r\n            let parent = this.parent;\r\n            if (parent) {\r\n                return parent.getTooltip();\r\n            }\r\n        }\r\n        else {\r\n            return tooltip;\r\n        }\r\n    }\r\n    _updatePosition() {\r\n        const parent = this.parent;\r\n        let dx = this.get(\"dx\", 0);\r\n        let dy = this.get(\"dy\", 0);\r\n        let x = this.get(\"x\");\r\n        let _x = this.getPrivate(\"x\");\r\n        let xx = 0;\r\n        let yy = 0;\r\n        const position = this.get(\"position\");\r\n        if (x instanceof Percent) {\r\n            if (parent) {\r\n                x = parent.innerWidth() * x.value + parent.get(\"paddingLeft\", 0);\r\n            }\r\n            else {\r\n                x = 0;\r\n            }\r\n        }\r\n        if ($type.isNumber(x)) {\r\n            xx = x + dx;\r\n        }\r\n        else {\r\n            if (_x != null) {\r\n                xx = _x;\r\n            }\r\n            else if (parent) {\r\n                if (position == \"relative\") {\r\n                    xx = parent.get(\"paddingLeft\", 0) + dx;\r\n                }\r\n            }\r\n        }\r\n        let y = this.get(\"y\");\r\n        let _y = this.getPrivate(\"y\");\r\n        if (y instanceof Percent) {\r\n            if (parent) {\r\n                y = parent.innerHeight() * y.value + parent.get(\"paddingTop\", 0);\r\n            }\r\n            else {\r\n                y = 0;\r\n            }\r\n        }\r\n        if ($type.isNumber(y)) {\r\n            yy = y + dy;\r\n        }\r\n        else {\r\n            if (_y != null) {\r\n                yy = _y;\r\n            }\r\n            else if (parent) {\r\n                if (position == \"relative\") {\r\n                    yy = parent.get(\"paddingTop\", 0) + dy;\r\n                }\r\n            }\r\n        }\r\n        const display = this._display;\r\n        if (display.x != xx || display.y != yy) {\r\n            display.invalidateBounds();\r\n            display.x = xx;\r\n            display.y = yy;\r\n            const eventType = \"positionchanged\";\r\n            if (this.events.isEnabled(eventType)) {\r\n                this.events.dispatch(eventType, { type: eventType, target: this });\r\n            }\r\n        }\r\n        // Update tooltip position together with the Sprite\r\n        if (this.getPrivate(\"showingTooltip\")) {\r\n            this.showTooltip();\r\n        }\r\n    }\r\n    /**\r\n     * Returns element's actual X position in pixels.\r\n     *\r\n     * @return X (px)\r\n     */\r\n    x() {\r\n        let x = this.get(\"x\");\r\n        let _x = this.getPrivate(\"x\");\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            if (x instanceof Percent) {\r\n                return $utils.relativeToValue(x, parent.innerWidth()) + parent.get(\"paddingLeft\", 0);\r\n            }\r\n            else {\r\n                if (!$type.isNumber(x)) {\r\n                    if (_x != null) {\r\n                        return _x;\r\n                    }\r\n                    else {\r\n                        return parent.get(\"paddingLeft\", this._display.x);\r\n                    }\r\n                }\r\n                else {\r\n                    return x;\r\n                }\r\n            }\r\n        }\r\n        return this._display.x;\r\n    }\r\n    /**\r\n     * Returns element's actual Y position in pixels.\r\n     *\r\n     * @return Y (px)\r\n     */\r\n    y() {\r\n        let _y = this.getPrivate(\"y\");\r\n        if (_y != null) {\r\n            return _y;\r\n        }\r\n        let y = this.get(\"y\");\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            if (y instanceof Percent) {\r\n                return $utils.relativeToValue(y, parent.innerHeight()) + parent.get(\"paddingTop\", 0);\r\n            }\r\n            else {\r\n                if (!$type.isNumber(y)) {\r\n                    if (_y != null) {\r\n                        return _y;\r\n                    }\r\n                    else {\r\n                        return parent.get(\"paddingTop\", this._display.y);\r\n                    }\r\n                }\r\n                else {\r\n                    return y;\r\n                }\r\n            }\r\n        }\r\n        return this._display.y;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this._display.dispose();\r\n        this._removeTemplateField();\r\n        this._removeParent(this.parent);\r\n        this._root._removeFocusElement(this);\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.dispose();\r\n        }\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    adjustedLocalBounds() {\r\n        this._fixMinBounds(this._adjustedLocalBounds);\r\n        return this._adjustedLocalBounds;\r\n    }\r\n    /**\r\n     * Returns local coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    localBounds() {\r\n        return this._localBounds;\r\n    }\r\n    /**\r\n     * Returns adjusted local coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    bounds() {\r\n        const bounds = this._adjustedLocalBounds;\r\n        const x = this.x();\r\n        const y = this.y();\r\n        return { left: bounds.left + x, right: bounds.right + x, top: bounds.top + y, bottom: bounds.bottom + y };\r\n    }\r\n    /**\r\n     * Returns global coordinates of the element's bounds.\r\n     *\r\n     * @ignore\r\n     * @return Global bounds\r\n     */\r\n    globalBounds() {\r\n        const bounds = this.localBounds();\r\n        const p0 = this.toGlobal({ x: bounds.left, y: bounds.top });\r\n        const p1 = this.toGlobal({ x: bounds.right, y: bounds.top });\r\n        const p2 = this.toGlobal({ x: bounds.right, y: bounds.bottom });\r\n        const p3 = this.toGlobal({ x: bounds.left, y: bounds.bottom });\r\n        return {\r\n            left: Math.min(p0.x, p1.x, p2.x, p3.x),\r\n            top: Math.min(p0.y, p1.y, p2.y, p3.y),\r\n            right: Math.max(p0.x, p1.x, p2.x, p3.x),\r\n            bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\r\n        };\r\n    }\r\n    _onShow(_duration) {\r\n    }\r\n    _onHide(_duration) {\r\n    }\r\n    /**\r\n     * Plays initial reveal animation regardless if element is currently hidden\r\n     * or visible.\r\n     *\r\n     * @param   duration  Duration of the animation in milliseconds\r\n     * @param   delay     Delay showing of the element by X milliseconds\r\n     * @return            Promise\r\n     */\r\n    appear(duration, delay) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.hide(0);\r\n            if (delay) {\r\n                return new Promise((success, _error) => {\r\n                    this.setTimeout(() => {\r\n                        success(this.show(duration));\r\n                    }, delay);\r\n                });\r\n            }\r\n            else {\r\n                return this.show(duration);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Shows currently hidden element and returns a `Promise` which completes\r\n     * when all showing animations are finished.\r\n     *\r\n     * ```TypeScript\r\n     * series.show().then(function(ev) {\r\n     *   console.log(\"Series is now fully visible\");\r\n     * })\r\n     * ```\r\n     * ```JavaScript\r\n     * series.show().then(function(ev) {\r\n     *   console.log(\"Series is now fully visible\");\r\n     * })\r\n     * ```\r\n     *\r\n     * @return Promise\r\n     */\r\n    show(duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._isShowing) {\r\n                this._isHidden = false;\r\n                this._isShowing = true;\r\n                this._isHiding = false;\r\n                if (this.states.lookup(\"default\").get(\"visible\")) {\r\n                    this.set(\"visible\", true);\r\n                }\r\n                this._onShow(duration);\r\n                const animations = this.states.applyAnimate(\"default\", duration);\r\n                yield waitForAnimations(animations);\r\n                this._isShowing = false;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Hides the element and returns a `Promise` which completes when all hiding\r\n     * animations are finished.\r\n     *\r\n     * ```TypeScript\r\n     * series.hide().then(function(ev) {\r\n     *   console.log(\"Series finished hiding\");\r\n     * })\r\n     * ```\r\n     * ```JavaScript\r\n     * series.hide().then(function(ev) {\r\n     *   console.log(\"Series finished hiding\");\r\n     * })\r\n     * ```\r\n     *\r\n     * @return Promise\r\n     */\r\n    hide(duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._isHiding && !this._isHidden) {\r\n                this._isHiding = true;\r\n                this._isShowing = false;\r\n                let state = this.states.lookup(\"hidden\");\r\n                if (!state) {\r\n                    state = this.states.create(\"hidden\", {\r\n                        \"opacity\": 0,\r\n                        \"visible\": false\r\n                    });\r\n                }\r\n                this._isHidden = true;\r\n                this._onHide(duration);\r\n                const animations = this.states.applyAnimate(\"hidden\", duration);\r\n                yield waitForAnimations(animations);\r\n                this._isHiding = false;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently hidden.\r\n     *\r\n     * @return Is hidden?\r\n     */\r\n    isHidden() {\r\n        return this._isHidden;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently animating to a default state.\r\n     *\r\n     * @return Is showing?\r\n     */\r\n    isShowing() {\r\n        return this._isShowing;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently animating to a hidden state.\r\n     *\r\n     * @return Is hiding?\r\n     */\r\n    isHiding() {\r\n        return this._isHiding;\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently hovered by a pointer.\r\n     *\r\n     * @return Is hovered?\r\n     */\r\n    isHover() {\r\n        return this._display.hovering();\r\n    }\r\n    /**\r\n     * Returns `true` if this element does currently have focus.\r\n     *\r\n     * @return Is focused?\r\n     */\r\n    isFocus() {\r\n        return this._root.focused(this);\r\n    }\r\n    /**\r\n     * Returns `true` if this element is currently being dragged.\r\n     *\r\n     * @return Is dragged?\r\n     */\r\n    isDragging() {\r\n        return this._isDragging;\r\n    }\r\n    /**\r\n     * Returns `false` if if either public or private setting `visible` is set\r\n     * to `false`, or `forceHidden` is set to `true`.\r\n     *\r\n     * @return Visible?\r\n     */\r\n    isVisible() {\r\n        if (this.get(\"visible\") && this.getPrivate(\"visible\") && !this.get(\"forceHidden\")) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Same as `isVisible()`, except it checks all ascendants, too.\r\n     *\r\n     * @since 5.2.7\r\n     * @return Visible?\r\n     */\r\n    isVisibleDeep() {\r\n        return this._parent ? (this._parent.isVisibleDeep() && this.isVisible()) : this.isVisible();\r\n    }\r\n    /**\r\n     * Returns an actual opacity of the element, taking into account all parents.\r\n     *\r\n     * @return Opacity\r\n     * @since 5.2.11\r\n     */\r\n    compositeOpacity() {\r\n        const opacity = this.get(\"opacity\", 1);\r\n        return this._parent ? (this._parent.compositeOpacity() * opacity) : opacity;\r\n    }\r\n    /**\r\n     * Returns width of this element in pixels.\r\n     *\r\n     * @return Width (px)\r\n     */\r\n    width() {\r\n        let width = this.get(\"width\");\r\n        let maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n        let minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\r\n        let privateWidth = this.getPrivate(\"width\");\r\n        let w = 0;\r\n        if ($type.isNumber(privateWidth)) {\r\n            w = privateWidth;\r\n        }\r\n        else {\r\n            if (width == null) {\r\n                if (this._adjustedLocalBounds) {\r\n                    w = this._adjustedLocalBounds.right - this._adjustedLocalBounds.left;\r\n                }\r\n            }\r\n            else {\r\n                if (width instanceof Percent) {\r\n                    const parent = this.parent;\r\n                    if (parent) {\r\n                        w = parent.innerWidth() * width.value;\r\n                    }\r\n                    else {\r\n                        w = this._root.width() * width.value;\r\n                    }\r\n                }\r\n                else if ($type.isNumber(width)) {\r\n                    w = width;\r\n                }\r\n            }\r\n        }\r\n        if ($type.isNumber(minWidth)) {\r\n            w = Math.max(minWidth, w);\r\n        }\r\n        if ($type.isNumber(maxWidth)) {\r\n            w = Math.min(maxWidth, w);\r\n        }\r\n        return w;\r\n    }\r\n    /**\r\n     * Returns maximum allowed width of this element in pixels.\r\n     *\r\n     * @return Maximum width (px)\r\n     */\r\n    maxWidth() {\r\n        let maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n        if ($type.isNumber(maxWidth)) {\r\n            return maxWidth;\r\n        }\r\n        else {\r\n            let width = this.get(\"width\");\r\n            if ($type.isNumber(width)) {\r\n                return width;\r\n            }\r\n        }\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            return parent.innerWidth();\r\n        }\r\n        return this._root.width();\r\n    }\r\n    /**\r\n     * Returns maximum allowed height of this element in pixels.\r\n     *\r\n     * @return Maximum height (px)\r\n     */\r\n    maxHeight() {\r\n        let maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n        if ($type.isNumber(maxHeight)) {\r\n            return maxHeight;\r\n        }\r\n        else {\r\n            let height = this.get(\"height\");\r\n            if ($type.isNumber(height)) {\r\n                return height;\r\n            }\r\n        }\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            return parent.innerHeight();\r\n        }\r\n        return this._root.height();\r\n    }\r\n    /**\r\n     * Returns height of this element in pixels.\r\n     *\r\n     * @return Height (px)\r\n     */\r\n    height() {\r\n        let height = this.get(\"height\");\r\n        let maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n        let minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\r\n        let privateHeight = this.getPrivate(\"height\");\r\n        let h = 0;\r\n        if ($type.isNumber(privateHeight)) {\r\n            h = privateHeight;\r\n        }\r\n        else {\r\n            if (height == null) {\r\n                if (this._adjustedLocalBounds) {\r\n                    h = this._adjustedLocalBounds.bottom - this._adjustedLocalBounds.top;\r\n                }\r\n            }\r\n            else {\r\n                if (height instanceof Percent) {\r\n                    const parent = this.parent;\r\n                    if (parent) {\r\n                        h = parent.innerHeight() * height.value;\r\n                    }\r\n                    else {\r\n                        h = this._root.height() * height.value;\r\n                    }\r\n                }\r\n                else if ($type.isNumber(height)) {\r\n                    h = height;\r\n                }\r\n            }\r\n        }\r\n        if ($type.isNumber(minHeight)) {\r\n            h = Math.max(minHeight, h);\r\n        }\r\n        if ($type.isNumber(maxHeight)) {\r\n            h = Math.min(maxHeight, h);\r\n        }\r\n        return h;\r\n    }\r\n    _findStaticTemplate(f) {\r\n        // templateField overrides template\r\n        if (this._templateField && f(this._templateField)) {\r\n            return this._templateField;\r\n        }\r\n        return super._findStaticTemplate(f);\r\n    }\r\n    _walkParents(f) {\r\n        if (this._parent) {\r\n            this._walkParent(f);\r\n        }\r\n    }\r\n    _walkParent(f) {\r\n        if (this._parent) {\r\n            this._parent._walkParent(f);\r\n        }\r\n        f(this);\r\n    }\r\n    /**\r\n     * Parent [[Container]] of this element.\r\n     *\r\n     * @return Parent container\r\n     */\r\n    get parent() {\r\n        return this._parent;\r\n    }\r\n    _setParent(parent, updateChildren = false) {\r\n        const prevParent = this._parent;\r\n        if (parent !== prevParent) {\r\n            this.markDirtyBounds();\r\n            parent.markDirty();\r\n            this._parent = parent;\r\n            if (updateChildren) {\r\n                this._removeParent(prevParent);\r\n                if (parent) {\r\n                    this._addPercentageSizeChildren();\r\n                    this._addPercentagePositionChildren();\r\n                }\r\n            }\r\n            this.markDirtyPosition();\r\n            this._applyThemes();\r\n        }\r\n    }\r\n    /**\r\n     * Returns an instance of [[NumberFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return NumberFormatter instace\r\n     */\r\n    getNumberFormatter() {\r\n        return this.get(\"numberFormatter\", this._root.numberFormatter);\r\n    }\r\n    /**\r\n     * Returns an instance of [[DateFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return DateFormatter instace\r\n     */\r\n    getDateFormatter() {\r\n        return this.get(\"dateFormatter\", this._root.dateFormatter);\r\n    }\r\n    /**\r\n     * Returns an instance of [[DurationFormatter]] used in this element.\r\n     *\r\n     * If this element does not have it set, global one form [[Root]] is used.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n     * @return DurationFormatter instace\r\n     */\r\n    getDurationFormatter() {\r\n        return this.get(\"durationFormatter\", this._root.durationFormatter);\r\n    }\r\n    /**\r\n     * Converts X/Y coordinate within this element to a global coordinate.\r\n     *\r\n     * @param  point  Local coordinate\r\n     * @return        Global coordinate\r\n     */\r\n    toGlobal(point) {\r\n        return this._display.toGlobal(point);\r\n    }\r\n    /**\r\n     * Converts global X/Y coordinate to a coordinate within this element.\r\n     *\r\n     * @param  point  Global coordinate\r\n     * @return        Local coordinate\r\n     */\r\n    toLocal(point) {\r\n        return this._display.toLocal(point);\r\n    }\r\n    _getDownPoint() {\r\n        const id = this._getDownPointId();\r\n        if (id) {\r\n            return this._downPoints[id];\r\n        }\r\n    }\r\n    _getDownPointId() {\r\n        if (this._downPoints) {\r\n            return $object.keysOrdered(this._downPoints, (a, b) => {\r\n                if (a > b) {\r\n                    return 1;\r\n                }\r\n                if (a < b) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            })[0];\r\n        }\r\n    }\r\n    /**\r\n     * Moves sprite to the end of the parent's children array.\r\n     *\r\n     * Depending on `layout` setting of the parten container, it may effect the\r\n     * positioning or overlapping order of the elements.\r\n     */\r\n    toFront() {\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            parent.children.moveValue(this, parent.children.length - 1);\r\n        }\r\n    }\r\n    /**\r\n     * Moves sprite to the beginning of the parent's children array.\r\n     *\r\n     * Depending on `layout` setting of the parten container, it may effect the\r\n     * positioning or overlapping order of the elements.\r\n     */\r\n    toBack() {\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            parent.children.moveValue(this, 0);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Sprite, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Sprite\"\r\n});\r\nObject.defineProperty(Sprite, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Sprite.className])\r\n});\r\n//# sourceMappingURL=Sprite.js.map","import { Entity } from \"../../util/Entity\";\r\n/**\r\n * Base class for patterns.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nexport class Pattern extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_backgroundDisplay\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_clear\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_pattern\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        // Applying themes because pattern will not have parent\r\n        super._afterNewApplyThemes();\r\n    }\r\n    get pattern() {\r\n        return this._pattern;\r\n    }\r\n    _draw() { }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"repetition\") || this.isDirty(\"width\") || this.isDirty(\"height\") || this.isDirty(\"rotation\") || this.isDirty(\"color\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"colorOpacity\") || this.isDirty(\"fill\") || this.isDirty(\"fillOpacity\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            const repetition = this.get(\"repetition\", \"\");\r\n            const width = this.get(\"width\", 100);\r\n            const height = this.get(\"height\", 100);\r\n            const fill = this.get(\"fill\");\r\n            const fillOpacity = this.get(\"fillOpacity\", 1);\r\n            this._display.clear();\r\n            this._backgroundDisplay.clear();\r\n            if (fill && (fillOpacity > 0)) {\r\n                this._backgroundDisplay.beginFill(fill, fillOpacity);\r\n                this._backgroundDisplay.drawRect(0, 0, width, height);\r\n                this._backgroundDisplay.endFill();\r\n            }\r\n            this._display.angle = this.get(\"rotation\", 0);\r\n            //this._display.pivot = { x: width / 2, y: height / 2 };\r\n            this._draw();\r\n            this._pattern = this._root._renderer.createPattern(this._display, this._backgroundDisplay, repetition, width, height);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Pattern, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Pattern\"\r\n});\r\nObject.defineProperty(Pattern, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Pattern.className])\r\n});\r\n//# sourceMappingURL=Pattern.js.map","import { Pattern } from \"./Pattern\";\r\n/**\r\n * Picture pattern.\r\n *\r\n * @since 5.2.15\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\r\n */\r\nexport class PicturePattern extends Pattern {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        this._clear = true;\r\n        if (this.isDirty(\"src\")) {\r\n            this._load();\r\n        }\r\n    }\r\n    _draw() {\r\n        super._draw();\r\n        const image = this._image;\r\n        if (image) {\r\n            const patternWidth = this.get(\"width\", 100);\r\n            const patternHeight = this.get(\"height\", 100);\r\n            // Fit\r\n            const fit = this.get(\"fit\", \"image\");\r\n            let width = 0;\r\n            let height = 0;\r\n            if (fit == \"pattern\") {\r\n                width = patternWidth;\r\n                height = patternHeight;\r\n            }\r\n            else {\r\n                width = image.width;\r\n                height = image.height;\r\n                if (fit == \"image\") {\r\n                    this.set(\"width\", width);\r\n                    this.set(\"height\", height);\r\n                }\r\n            }\r\n            // Position\r\n            const centered = this.get(\"centered\", true);\r\n            let x = 0;\r\n            let y = 0;\r\n            if (centered) {\r\n                x = patternWidth / 2 - width / 2;\r\n                y = patternHeight / 2 - height / 2;\r\n            }\r\n            this._display.image(image, width, height, x, y);\r\n        }\r\n    }\r\n    _load() {\r\n        const src = this.get(\"src\");\r\n        if (src) {\r\n            const image = new Image();\r\n            //image.crossOrigin = \"Anonymous\";\r\n            image.src = src;\r\n            image.decode().then(() => {\r\n                this._image = image;\r\n                this._draw();\r\n                if (this.events.isEnabled(\"loaded\")) {\r\n                    this.events.dispatch(\"loaded\", { type: \"loaded\", target: this });\r\n                }\r\n            }).catch((_error) => {\r\n                // TODO: maybe raise error?\r\n            });\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PicturePattern, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PicturePattern\"\r\n});\r\nObject.defineProperty(PicturePattern, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Pattern.classNames.concat([PicturePattern.className])\r\n});\r\n//# sourceMappingURL=PicturePattern.js.map",";\r\n/**\r\n * From https://github.com/pixijs/pixi.js/blob/3dd0ff9a935f0bc13a09aefff9eb2872f02c51b9/packages/canvas/canvas-renderer/src/utils/mapCanvasBlendModesToPixi.ts#L13\r\n */\r\nexport var BlendMode;\r\n(function (BlendMode) {\r\n    BlendMode[\"ADD\"] = \"lighter\";\r\n    BlendMode[\"COLOR\"] = \"color\";\r\n    BlendMode[\"COLOR_BURN\"] = \"color-burn\";\r\n    BlendMode[\"COLOR_DODGE\"] = \"color-dodge\";\r\n    BlendMode[\"DARKEN\"] = \"darken\";\r\n    BlendMode[\"DIFFERENCE\"] = \"difference\";\r\n    BlendMode[\"DST_OVER\"] = \"destination-over\";\r\n    BlendMode[\"EXCLUSION\"] = \"exclusion\";\r\n    BlendMode[\"HARD_LIGHT\"] = \"hard-light\";\r\n    BlendMode[\"HUE\"] = \"hue\";\r\n    BlendMode[\"LIGHTEN\"] = \"lighten\";\r\n    BlendMode[\"LUMINOSITY\"] = \"luminosity\";\r\n    BlendMode[\"MULTIPLY\"] = \"multiply\";\r\n    BlendMode[\"NORMAL\"] = \"source-over\";\r\n    BlendMode[\"OVERLAY\"] = \"overlay\";\r\n    BlendMode[\"SATURATION\"] = \"saturation\";\r\n    BlendMode[\"SCREEN\"] = \"screen\";\r\n    BlendMode[\"SOFT_LIGHT\"] = \"soft-light\";\r\n    BlendMode[\"SRC_ATOP\"] = \"source-atop\";\r\n    BlendMode[\"XOR\"] = \"xor\";\r\n})(BlendMode || (BlendMode = {}));\r\n//# sourceMappingURL=Renderer.js.map","import { PicturePattern } from \"../render/patterns/PicturePattern\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport { BlendMode } from \"./backend/Renderer\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $array from \"../util/Array\";\r\nexport const visualSettings = [\"fill\", \"fillOpacity\", \"stroke\", \"strokeWidth\", \"strokeOpacity\", \"fillPattern\", \"strokePattern\", \"fillGradient\", \"strokeGradient\", \"strokeDasharray\", \"strokeDashoffset\"];\r\n/**\r\n * Base class used for drawing shapes.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Graphics extends Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeGraphics()\r\n        });\r\n        Object.defineProperty(this, \"_clear\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"draw\") || this.isDirty(\"svgPath\")) {\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"stroke\") || this.isDirty(\"visible\") || this.isDirty(\"forceHidden\") || this.isDirty(\"scale\") || this.isDirty(\"fillGradient\") || this.isDirty(\"strokeGradient\") || this.isDirty(\"fillPattern\") || this.isDirty(\"strokePattern\") || this.isDirty(\"fillOpacity\") || this.isDirty(\"strokeOpacity\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"draw\") || this.isDirty(\"blendMode\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"svgPath\") || this.isDirty(\"lineJoin\") || this.isDirty(\"shadowColor\") || this.isDirty(\"shadowBlur\") || this.isDirty(\"shadowOffsetX\") || this.isDirty(\"shadowOffsetY\")) {\r\n            this._clear = true;\r\n        }\r\n        this._display.crisp = this.get(\"crisp\", false);\r\n        if (this.isDirty(\"fillGradient\")) {\r\n            const gradient = this.get(\"fillGradient\");\r\n            if (gradient) {\r\n                this._display.isMeasured = true;\r\n                const gradientTarget = gradient.get(\"target\");\r\n                if (gradientTarget) {\r\n                    this._disposers.push(gradientTarget.events.on(\"boundschanged\", () => {\r\n                        this._markDirtyKey(\"fill\");\r\n                    }));\r\n                    this._disposers.push(gradientTarget.events.on(\"positionchanged\", () => {\r\n                        this._markDirtyKey(\"fill\");\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"strokeGradient\")) {\r\n            const gradient = this.get(\"strokeGradient\");\r\n            if (gradient) {\r\n                this._display.isMeasured = true;\r\n                const gradientTarget = gradient.get(\"target\");\r\n                if (gradientTarget) {\r\n                    this._disposers.push(gradientTarget.events.on(\"boundschanged\", () => {\r\n                        this._markDirtyKey(\"stroke\");\r\n                    }));\r\n                    this._disposers.push(gradientTarget.events.on(\"positionchanged\", () => {\r\n                        this._markDirtyKey(\"stroke\");\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this.markDirtyBounds();\r\n            this.markDirtyLayer();\r\n            this._display.clear();\r\n            let strokeDasharray = this.get(\"strokeDasharray\");\r\n            if ($type.isNumber(strokeDasharray)) {\r\n                if (strokeDasharray < 0.5) {\r\n                    strokeDasharray = [0];\r\n                }\r\n                else {\r\n                    strokeDasharray = [strokeDasharray];\r\n                }\r\n            }\r\n            this._display.setLineDash(strokeDasharray);\r\n            const strokeDashoffset = this.get(\"strokeDashoffset\");\r\n            if (strokeDashoffset) {\r\n                this._display.setLineDashOffset(strokeDashoffset);\r\n            }\r\n            const blendMode = this.get(\"blendMode\", BlendMode.NORMAL);\r\n            this._display.blendMode = blendMode;\r\n            const draw = this.get(\"draw\");\r\n            if (draw) {\r\n                draw(this._display, this);\r\n            }\r\n            const svgPath = this.get(\"svgPath\");\r\n            if (svgPath != null) {\r\n                this._display.svgPath(svgPath);\r\n            }\r\n        }\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        if (this._clear) {\r\n            const fill = this.get(\"fill\");\r\n            const fillGradient = this.get(\"fillGradient\");\r\n            const fillPattern = this.get(\"fillPattern\");\r\n            const fillOpacity = this.get(\"fillOpacity\");\r\n            const stroke = this.get(\"stroke\");\r\n            const strokeGradient = this.get(\"strokeGradient\");\r\n            const strokePattern = this.get(\"strokePattern\");\r\n            const shadowColor = this.get(\"shadowColor\");\r\n            const shadowBlur = this.get(\"shadowBlur\");\r\n            const shadowOffsetX = this.get(\"shadowOffsetX\");\r\n            const shadowOffsetY = this.get(\"shadowOffsetY\");\r\n            const shadowOpacity = this.get(\"shadowOpacity\");\r\n            //const bounds = this._display.getLocalBounds();\r\n            if (shadowColor && (shadowBlur || shadowOffsetX || shadowOffsetY)) {\r\n                this._display.shadow(shadowColor, shadowBlur, shadowOffsetX, shadowOffsetY, shadowOpacity);\r\n            }\r\n            if (fillPattern) {\r\n                let changed = false;\r\n                if (fill && (!fillPattern.get(\"fill\") || fillPattern.get(\"fillInherited\"))) {\r\n                    fillPattern.set(\"fill\", fill);\r\n                    fillPattern.set(\"fillInherited\", true);\r\n                    changed = true;\r\n                }\r\n                if (stroke && (!fillPattern.get(\"color\") || fillPattern.get(\"colorInherited\"))) {\r\n                    fillPattern.set(\"color\", stroke);\r\n                    fillPattern.set(\"colorInherited\", true);\r\n                    changed = true;\r\n                }\r\n                if (changed) {\r\n                    // @todo: is this OK?\r\n                    fillPattern._changed();\r\n                }\r\n                const pattern = fillPattern.pattern;\r\n                if (pattern) {\r\n                    this._display.beginFill(pattern, fillOpacity);\r\n                    this._display.endFill();\r\n                    if (fillPattern instanceof PicturePattern) {\r\n                        fillPattern.events.once(\"loaded\", () => {\r\n                            this._clear = true;\r\n                            this.markDirty();\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            else if (fillGradient) {\r\n                if (fill) {\r\n                    const stops = fillGradient.get(\"stops\", []);\r\n                    if (stops.length) {\r\n                        $array.each(stops, (stop) => {\r\n                            if ((!stop.color || stop.colorInherited) && fill) {\r\n                                stop.color = fill;\r\n                                stop.colorInherited = true;\r\n                            }\r\n                            if (stop.opacity == null || stop.opacityInherited) {\r\n                                stop.opacity = fillOpacity;\r\n                                stop.opacityInherited = true;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                const gradient = fillGradient.getFill(this);\r\n                if (gradient) {\r\n                    this._display.beginFill(gradient, fillOpacity);\r\n                    this._display.endFill();\r\n                }\r\n            }\r\n            else if (fill) {\r\n                this._display.beginFill(fill, fillOpacity);\r\n                this._display.endFill();\r\n            }\r\n            if (stroke || strokeGradient || strokePattern) {\r\n                const strokeOpacity = this.get(\"strokeOpacity\");\r\n                let strokeWidth = this.get(\"strokeWidth\", 1);\r\n                if (this.get(\"nonScalingStroke\")) {\r\n                    strokeWidth = strokeWidth / this.get(\"scale\", 1);\r\n                }\r\n                if (this.get(\"crisp\")) {\r\n                    strokeWidth /= this._root._renderer.resolution;\r\n                }\r\n                const lineJoin = this.get(\"lineJoin\");\r\n                if (strokePattern) {\r\n                    let changed = false;\r\n                    if (stroke && (!strokePattern.get(\"color\") || strokePattern.get(\"colorInherited\"))) {\r\n                        strokePattern.set(\"color\", stroke);\r\n                        strokePattern.set(\"colorInherited\", true);\r\n                        changed = true;\r\n                    }\r\n                    if (changed) {\r\n                        // @todo: is this OK?\r\n                        strokePattern._changed();\r\n                    }\r\n                    const pattern = strokePattern.pattern;\r\n                    if (pattern) {\r\n                        this._display.lineStyle(strokeWidth, pattern, strokeOpacity, lineJoin);\r\n                        this._display.endStroke();\r\n                        if (strokePattern instanceof PicturePattern) {\r\n                            strokePattern.events.once(\"loaded\", () => {\r\n                                this._clear = true;\r\n                                this.markDirty();\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                else if (strokeGradient) {\r\n                    const stops = strokeGradient.get(\"stops\", []);\r\n                    if (stops.length) {\r\n                        $array.each(stops, (stop) => {\r\n                            if ((!stop.color || stop.colorInherited) && stroke) {\r\n                                stop.color = stroke;\r\n                                stop.colorInherited = true;\r\n                            }\r\n                            if (stop.opacity == null || stop.opacityInherited) {\r\n                                stop.opacity = strokeOpacity;\r\n                                stop.opacityInherited = true;\r\n                            }\r\n                        });\r\n                    }\r\n                    const gradient = strokeGradient.getFill(this);\r\n                    if (gradient) {\r\n                        this._display.lineStyle(strokeWidth, gradient, strokeOpacity, lineJoin);\r\n                        this._display.endStroke();\r\n                    }\r\n                }\r\n                else if (stroke) {\r\n                    this._display.lineStyle(strokeWidth, stroke, strokeOpacity, lineJoin);\r\n                    this._display.endStroke();\r\n                }\r\n            }\r\n        }\r\n        this._clear = false;\r\n    }\r\n}\r\nObject.defineProperty(Graphics, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Graphics\"\r\n});\r\nObject.defineProperty(Graphics, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Sprite.classNames.concat([Graphics.className])\r\n});\r\n//# sourceMappingURL=Graphics.js.map","import { Graphics } from \"./Graphics\";\r\n/**\r\n * Draws a rectangle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Rectangle extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear && !this.get(\"draw\")) {\r\n            this._draw();\r\n        }\r\n    }\r\n    _draw() {\r\n        this._display.drawRect(0, 0, this.width(), this.height());\r\n    }\r\n    _updateSize() {\r\n        this.markDirty();\r\n        this._clear = true;\r\n    }\r\n}\r\nObject.defineProperty(Rectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Rectangle\"\r\n});\r\nObject.defineProperty(Rectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Rectangle.className])\r\n});\r\n//# sourceMappingURL=Rectangle.js.map","import { Entity } from \"../util/Entity\";\r\nexport function eachChildren(container, f) {\r\n    if (container.get(\"reverseChildren\", false)) {\r\n        container.children.eachReverse(f);\r\n    }\r\n    else {\r\n        container.children.each(f);\r\n    }\r\n}\r\n/**\r\n * Base class for [[Container]] layouts.\r\n */\r\nexport class Layout extends Entity {\r\n}\r\nObject.defineProperty(Layout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Layout\"\r\n});\r\nObject.defineProperty(Layout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Layout.className])\r\n});\r\n//# sourceMappingURL=Layout.js.map","import { Layout, eachChildren } from \"./Layout\";\r\nimport * as $type from \"../util/Type\";\r\nimport { Percent } from \"../util/Percent\";\r\n/**\r\n * A horizontal children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nexport class HorizontalLayout extends Layout {\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingLeft = container.get(\"paddingLeft\", 0);\r\n        let availableWidth = container.innerWidth();\r\n        let totalPercent = 0;\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childWidth = child.get(\"width\");\r\n                    if (childWidth instanceof Percent) {\r\n                        totalPercent += childWidth.value;\r\n                        let w = availableWidth * childWidth.value;\r\n                        let minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\r\n                        if (minWidth > w) {\r\n                            availableWidth -= minWidth;\r\n                            totalPercent -= childWidth.value;\r\n                        }\r\n                        let maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\r\n                        if (w > maxWidth) {\r\n                            availableWidth -= maxWidth;\r\n                            totalPercent -= childWidth.value;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (!$type.isNumber(childWidth)) {\r\n                            childWidth = child.width();\r\n                        }\r\n                        availableWidth -= childWidth + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        if (availableWidth < 0) {\r\n            availableWidth = 0.01;\r\n        }\r\n        //if (availableWidth > 0) {\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childWidth = child.get(\"width\");\r\n                    if (childWidth instanceof Percent) {\r\n                        let privateWidth = availableWidth * childWidth.value / totalPercent - child.get(\"marginLeft\", 0) - child.get(\"marginRight\", 0);\r\n                        let minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\r\n                        let maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\r\n                        privateWidth = Math.min(Math.max(minWidth, privateWidth), maxWidth);\r\n                        child.setPrivate(\"width\", privateWidth);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        //}\r\n        let prevX = paddingLeft;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\") {\r\n                if (child.isVisible()) {\r\n                    let bounds = child.adjustedLocalBounds();\r\n                    let marginLeft = child.get(\"marginLeft\", 0);\r\n                    let marginRight = child.get(\"marginRight\", 0);\r\n                    let maxWidth = child.get(\"maxWidth\");\r\n                    let left = bounds.left;\r\n                    let right = bounds.right;\r\n                    if (maxWidth) {\r\n                        if (right - left > maxWidth) {\r\n                            right = left + maxWidth;\r\n                        }\r\n                    }\r\n                    let x = prevX + marginLeft - left;\r\n                    child.setPrivate(\"x\", x);\r\n                    prevX = x + right + marginRight;\r\n                }\r\n                else {\r\n                    child.setPrivate(\"x\", undefined);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(HorizontalLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"HorizontalLayout\"\r\n});\r\nObject.defineProperty(HorizontalLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Layout.classNames.concat([HorizontalLayout.className])\r\n});\r\n//# sourceMappingURL=HorizontalLayout.js.map","import { Layout, eachChildren } from \"./Layout\";\r\nimport * as $type from \"../util/Type\";\r\nimport { Percent } from \"../util/Percent\";\r\n/**\r\n * A vertical children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nexport class VerticalLayout extends Layout {\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingTop = container.get(\"paddingTop\", 0);\r\n        let availableHeight = container.innerHeight();\r\n        let totalPercent = 0;\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childHeight = child.get(\"height\");\r\n                    if (childHeight instanceof Percent) {\r\n                        totalPercent += childHeight.value;\r\n                        let h = availableHeight * childHeight.value;\r\n                        let minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\r\n                        if (minHeight > h) {\r\n                            availableHeight -= minHeight;\r\n                            totalPercent -= childHeight.value;\r\n                        }\r\n                        let maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\r\n                        if (h > maxHeight) {\r\n                            availableHeight -= maxHeight;\r\n                            totalPercent -= childHeight.value;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (!$type.isNumber(childHeight)) {\r\n                            childHeight = child.height();\r\n                        }\r\n                        availableHeight -= childHeight + child.get(\"marginTop\", 0) + child.get(\"marginBottom\", 0);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        if (availableHeight < 0) {\r\n            availableHeight = 0.01;\r\n        }\r\n        //if (availableHeight > 0) {\r\n        eachChildren(container, (child) => {\r\n            if (child.isVisible()) {\r\n                if (child.get(\"position\") == \"relative\") {\r\n                    let childHeight = child.get(\"height\");\r\n                    if (childHeight instanceof Percent) {\r\n                        let privateHeight = availableHeight * childHeight.value / totalPercent - child.get(\"marginTop\", 0) - child.get(\"marginBottom\", 0);\r\n                        let minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\r\n                        let maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\r\n                        privateHeight = Math.min(Math.max(minHeight, privateHeight), maxHeight);\r\n                        child.setPrivate(\"height\", privateHeight);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        //}\r\n        let prevY = paddingTop;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\") {\r\n                if (child.isVisible()) {\r\n                    let bounds = child.adjustedLocalBounds();\r\n                    let marginTop = child.get(\"marginTop\", 0);\r\n                    let top = bounds.top;\r\n                    let bottom = bounds.bottom;\r\n                    let maxHeight = child.get(\"maxHeight\");\r\n                    if (maxHeight) {\r\n                        if (bottom - top > maxHeight) {\r\n                            bottom = top + maxHeight;\r\n                        }\r\n                    }\r\n                    let marginBottom = child.get(\"marginBottom\", 0);\r\n                    let y = prevY + marginTop - top;\r\n                    child.setPrivate(\"y\", y);\r\n                    prevY = y + bottom + marginBottom;\r\n                }\r\n                else {\r\n                    child.setPrivate(\"y\", undefined);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(VerticalLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"VerticalLayout\"\r\n});\r\nObject.defineProperty(VerticalLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Layout.classNames.concat([VerticalLayout.className])\r\n});\r\n//# sourceMappingURL=VerticalLayout.js.map","import { Layout, eachChildren } from \"./Layout\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * A grid children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\r\nexport class GridLayout extends Layout {\r\n    _afterNew() {\r\n        this._setRawDefault(\"maxColumns\", Number.MAX_VALUE);\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateContainer(container) {\r\n        let paddingLeft = container.get(\"paddingLeft\", 0);\r\n        let paddingRight = container.get(\"paddingRight\", 0);\r\n        let paddingTop = container.get(\"paddingTop\", 0);\r\n        let availableWidth = container.maxWidth() - paddingLeft - paddingRight;\r\n        let minCellWidth = availableWidth;\r\n        let maxCellWidth = 1;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"visible\") && child.getPrivate(\"visible\") && !child.get(\"forceHidden\")) {\r\n                if (child.get(\"position\") != \"absolute\") {\r\n                    let childWidth = child.width();\r\n                    if (childWidth < minCellWidth) {\r\n                        minCellWidth = childWidth;\r\n                    }\r\n                    if (childWidth > maxCellWidth) {\r\n                        maxCellWidth = childWidth;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        minCellWidth = $math.fitToRange(minCellWidth, 1, availableWidth);\r\n        maxCellWidth = $math.fitToRange(maxCellWidth, 1, availableWidth);\r\n        let columnCount = 1;\r\n        if (this.get(\"fixedWidthGrid\")) {\r\n            columnCount = availableWidth / maxCellWidth;\r\n        }\r\n        else {\r\n            columnCount = availableWidth / minCellWidth;\r\n        }\r\n        columnCount = Math.max(1, Math.floor(columnCount));\r\n        columnCount = Math.min(this.get(\"maxColumns\", Number.MAX_VALUE), columnCount);\r\n        let columnWidths = this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\r\n        let prevY = paddingTop;\r\n        let column = 0;\r\n        let maxColumnHeight = 0;\r\n        columnCount = columnWidths.length;\r\n        let prevX = paddingLeft;\r\n        eachChildren(container, (child) => {\r\n            if (child.get(\"position\") == \"relative\" && child.isVisible()) {\r\n                const marginTop = child.get(\"marginTop\", 0);\r\n                const marginBottom = child.get(\"marginBottom\", 0);\r\n                let bounds = child.adjustedLocalBounds();\r\n                let marginLeft = child.get(\"marginLeft\", 0);\r\n                let marginRight = child.get(\"marginRight\", 0);\r\n                let x = prevX + marginLeft - bounds.left;\r\n                let y = prevY + marginTop - bounds.top;\r\n                child.setPrivate(\"x\", x);\r\n                child.setPrivate(\"y\", y);\r\n                prevX += columnWidths[column] + marginRight;\r\n                maxColumnHeight = Math.max(maxColumnHeight, child.height() + marginTop + marginBottom);\r\n                column++;\r\n                if (column >= columnCount) {\r\n                    column = 0;\r\n                    prevX = paddingLeft;\r\n                    prevY += maxColumnHeight;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getColumnWidths(container, columnCount, maxCellWidth, availableWidth) {\r\n        let totalWidth = 0;\r\n        let columnWidths = [];\r\n        let column = 0;\r\n        eachChildren(container, (child) => {\r\n            let bounds = child.adjustedLocalBounds();\r\n            if (child.get(\"position\") != \"absolute\" && child.isVisible()) {\r\n                if (this.get(\"fixedWidthGrid\")) {\r\n                    columnWidths[column] = maxCellWidth;\r\n                }\r\n                else {\r\n                    columnWidths[column] = Math.max(columnWidths[column] | 0, bounds.right - bounds.left + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0));\r\n                }\r\n                if (column < container.children.length - 1) {\r\n                    column++;\r\n                    if (column == columnCount) {\r\n                        column = 0;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        $array.each(columnWidths, (w) => {\r\n            totalWidth += w;\r\n        });\r\n        if (totalWidth > availableWidth) {\r\n            if (columnCount > 2) {\r\n                columnCount -= 1;\r\n                return this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\r\n            }\r\n            else {\r\n                return [availableWidth];\r\n            }\r\n        }\r\n        return columnWidths;\r\n    }\r\n}\r\nObject.defineProperty(GridLayout, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"GridLayout\"\r\n});\r\nObject.defineProperty(GridLayout, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Layout.classNames.concat([GridLayout.className])\r\n});\r\n//# sourceMappingURL=GridLayout.js.map","import { Color } from \"./Color\";\r\nimport * as $type from \"./Type\";\r\nexport class TextFormatter {\r\n    /**\r\n     * Replaces brackets with temporary placeholders.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Escaped text\r\n     */\r\n    static escape(text) {\r\n        return text.\r\n            replace(/\\[\\[/g, this.prefix + \"1\").\r\n            replace(/([^\\/\\]]{1})\\]\\]/g, \"$1\" + this.prefix + \"2\").\r\n            replace(/\\]\\]/g, this.prefix + \"2\").\r\n            replace(/\\{\\{/g, this.prefix + \"3\").\r\n            replace(/\\}\\}/g, this.prefix + \"4\").\r\n            replace(/\\'\\'/g, this.prefix + \"5\");\r\n    }\r\n    /**\r\n     * Replaces placeholders back to brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Escaped text\r\n     * @return Unescaped text\r\n     */\r\n    static unescape(text) {\r\n        return text.\r\n            replace(new RegExp(this.prefix + \"1\", \"g\"), \"[[\").\r\n            replace(new RegExp(this.prefix + \"2\", \"g\"), \"]]\").\r\n            replace(new RegExp(this.prefix + \"3\", \"g\"), \"{{\").\r\n            replace(new RegExp(this.prefix + \"4\", \"g\"), \"}}\").\r\n            replace(new RegExp(this.prefix + \"5\", \"g\"), \"''\");\r\n    }\r\n    /**\r\n     * Cleans up the text text for leftover double square brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Cleaned up text\r\n     */\r\n    static cleanUp(text) {\r\n        return text.\r\n            replace(/\\[\\[/g, \"[\").\r\n            replace(/\\]\\]/g, \"]\").\r\n            replace(/\\{\\{/g, \"{\").\r\n            replace(/\\}\\}/g, \"}\").\r\n            replace(/\\'\\'/g, \"'\");\r\n    }\r\n    /**\r\n     * Splits string into chunks. (style blocks, quoted blocks, regular blocks)\r\n     *\r\n     * If the second parameter `quotedBlocks` is set to `true` this method will\r\n     * also single out text blocks enclosed within single quotes that no\r\n     * formatting should be applied to, and they should be displayed as is.\r\n     *\r\n     * Default for the above is `false`, so that you can use single quote in text\r\n     * without escaping it.\r\n     *\r\n     * If enabled, single quotes can be escaped by doubling it - adding two\r\n     * single quotes, which will be replaced by a one single quote in the final\r\n     * output.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text          Text to chunk\r\n     * @param quotedBlocks  Use quoted blocks\r\n     * @param noFormatting  Formatting blocks will be treated as regular text\r\n     * @return Array of string chunks\r\n     */\r\n    static chunk(text, quotedBlocks = false, noFormatting = false) {\r\n        // Init result\r\n        let res = [];\r\n        // Replace double (escaped) square spaces and quotes with temporary codes\r\n        text = this.escape(text);\r\n        // Deal with style blocks\r\n        let chunks = quotedBlocks ? text.split(\"'\") : [text];\r\n        for (let i = 0; i < chunks.length; i++) {\r\n            let chunk = chunks[i];\r\n            // Empty?\r\n            if (chunk === \"\") {\r\n                continue;\r\n            }\r\n            if ((i % 2) === 0) {\r\n                // Text outside quotes\r\n                // Parse for style blocks which are \"text\" chunks, the rest chunks are\r\n                // \"value\"\r\n                chunk = chunk.replace(/\\]\\[/g, \"]\" + $type.PLACEHOLDER + \"[\");\r\n                chunk = chunk.replace(/\\[\\]/g, \"[ ]\");\r\n                let chunks2 = chunk.split(/[\\[\\]]+/);\r\n                for (let i2 = 0; i2 < chunks2.length; i2++) {\r\n                    let chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\r\n                    // Placeholder?\r\n                    if (chunk2 === $type.PLACEHOLDER) {\r\n                        continue;\r\n                    }\r\n                    // Empty?\r\n                    if (chunk2 === \"\") {\r\n                        continue;\r\n                    }\r\n                    // Block or value\r\n                    if ((i2 % 2) === 0) {\r\n                        res.push({\r\n                            \"type\": \"value\",\r\n                            \"text\": chunk2\r\n                        });\r\n                    }\r\n                    else {\r\n                        res.push({\r\n                            \"type\": noFormatting ? \"value\" : \"format\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // A text within doublequotes\r\n                // All chunks are \"text\"\r\n                let chunks2 = chunk.split(/[\\[\\]]+/);\r\n                for (let i2 = 0; i2 < chunks2.length; i2++) {\r\n                    let chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\r\n                    // Empty?\r\n                    if (chunk2 === \"\") {\r\n                        continue;\r\n                    }\r\n                    // Block or text\r\n                    if ((i2 % 2) === 0) {\r\n                        res.push({\r\n                            \"type\": \"text\",\r\n                            \"text\": chunk2\r\n                        });\r\n                    }\r\n                    else if (this.isImage(chunk2)) {\r\n                        res.push({\r\n                            \"type\": \"image\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                    else {\r\n                        res.push({\r\n                            \"type\": \"format\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Checks if supplied format contains image information and should be\r\n     * formatted as such.\r\n     * I.e.: `[img: myImage.png]`\r\n     *\r\n     * @ignore\r\n     * @param  text  Format\r\n     * @return true if it is an image\r\n     */\r\n    static isImage(text) {\r\n        return text.match(/img[ ]?:/) ? true : false;\r\n    }\r\n    static getTextStyle(style) {\r\n        // let textStyle: string[] = [];\r\n        // let textFill: string | undefined;\r\n        let format = {};\r\n        if (style == \"\" || style == \"[ ]\") {\r\n            return {};\r\n        }\r\n        // Pre-process quoted text\r\n        const q = style.match(/('[^']*')|(\"[^\"]*\")/gi);\r\n        if (q) {\r\n            for (let i = 0; i < q.length; i++) {\r\n                style = style.replace(q[i], q[i].replace(/['\"]*/g, \"\").replace(/[ ]+/g, \"+\"));\r\n            }\r\n        }\r\n        // Get style parts\r\n        let b = style.match(/([\\w\\-]*:[\\s]?[^;\\s\\]]*)|(\\#[\\w]{1,6})|([\\w\\-]+)|(\\/)/gi);\r\n        // Empty?\r\n        if (!b) {\r\n            return {};\r\n        }\r\n        // Check each part\r\n        for (let i = 0; i < b.length; i++) {\r\n            if (b[i].match(/^(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)$/i)) {\r\n                format.fontWeight = b[i];\r\n            }\r\n            else if (b[i].match(/^(underline|line-through)$/i)) {\r\n                format.textDecoration = b[i];\r\n            }\r\n            else if (b[i] == \"/\") {\r\n                // Just closing tag\r\n                // Do nothing\r\n            }\r\n            else if (!b[i].match(/:/)) {\r\n                // Color\r\n                format.fill = Color.fromString(b[i]);\r\n            }\r\n            else {\r\n                const p = b[i].replace(\"+\", \" \").split(/:[ ]*/);\r\n                format[p[0]] = p[1];\r\n                //textStyle.push(b[i].replace(/^[a-zA-Z]:[ ]*/, \"\"));\r\n                //b[i] = b[i].replace(/\\+/g, \" \");\r\n            }\r\n        }\r\n        return format;\r\n    }\r\n}\r\nObject.defineProperty(TextFormatter, \"prefix\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"__amcharts__\"\r\n});\r\n//# sourceMappingURL=TextFormatter.js.map","/** @ignore */ /** */\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\nimport { Sprite } from \"../render/Sprite\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\n/**\r\n * @ignore\r\n */\r\nexport function populateString(target, string) {\r\n    if (string != null) {\r\n        string = \"\" + string;\r\n        string = TextFormatter.escape(string);\r\n        let tags = string.match(/\\{([^}]+)\\}/g);\r\n        let i;\r\n        if (tags) {\r\n            for (i = 0; i < tags.length; i++) {\r\n                let tag = tags[i].replace(/\\{([^}]+)\\}/, \"$1\");\r\n                let value = getTagValue(target, tag, \"\");\r\n                if (value == null) {\r\n                    value = \"\";\r\n                }\r\n                string = string.split(tags[i]).join(value);\r\n            }\r\n        }\r\n        string = TextFormatter.unescape(string);\r\n    }\r\n    else {\r\n        string = \"\";\r\n    }\r\n    // TODO: apply adapter?\r\n    return string;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction getTagValue(target, tagName, format) {\r\n    let value;\r\n    const dataItem = target.dataItem;\r\n    // Parse parts\r\n    let parts = [];\r\n    let reg = /([^.]+)\\(([^)]*)\\)|([^.]+)/g;\r\n    ;\r\n    let matches;\r\n    while (true) {\r\n        matches = reg.exec(tagName);\r\n        if (matches === null) {\r\n            break;\r\n        }\r\n        if (matches[3]) {\r\n            // Simple property\r\n            parts.push({\r\n                prop: matches[3]\r\n            });\r\n            // Check if maybe we should force a formatter on this value\r\n            const dateFields = target.getDateFormatter().get(\"dateFields\", []);\r\n            const numericFields = target.getNumberFormatter().get(\"numericFields\", []);\r\n            const durationFields = target.getDurationFormatter().get(\"durationFields\", []);\r\n            if (dateFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatDate\",\r\n                    params: []\r\n                });\r\n            }\r\n            else if (numericFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatNumber\",\r\n                    params: []\r\n                });\r\n            }\r\n            else if (durationFields.indexOf(matches[3]) !== -1) {\r\n                parts.push({\r\n                    method: \"formatDuration\",\r\n                    params: []\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            // Method\r\n            // Parse parameters\r\n            let params = [];\r\n            if ($utils.trim(matches[2]) != \"\") {\r\n                let reg2 = /'([^']*)'|\"([^\"]*)\"|([0-9\\-]+)/g;\r\n                let matches2;\r\n                while (true) {\r\n                    matches2 = reg2.exec(matches[2]);\r\n                    if (matches2 === null) {\r\n                        break;\r\n                    }\r\n                    params.push(matches2[1] || matches2[2] || matches2[3]);\r\n                }\r\n            }\r\n            parts.push({\r\n                method: matches[1],\r\n                params: params\r\n            });\r\n        }\r\n    }\r\n    // Check if we can retrieve the value from data item\r\n    if (dataItem) {\r\n        // Check values\r\n        value = getTagValueFromObject(target, parts, dataItem._settings);\r\n        // Check properties\r\n        if (value == null || $type.isObject(value)) { // isObject helps to solve problem with date axis, as for example dateX will get dateX from values object and won't get to the dateX date.\r\n            value = getTagValueFromObject(target, parts, dataItem);\r\n        }\r\n        // Check data context\r\n        let dataContext = dataItem.dataContext;\r\n        if (value == null && dataContext) {\r\n            value = getTagValueFromObject(target, parts, dataContext);\r\n            // Maybe it's a literal dot-separated name of the key in dataContext?\r\n            if (value == null) {\r\n                value = getTagValueFromObject(target, [{\r\n                        prop: tagName\r\n                    }], dataContext);\r\n            }\r\n            // scond data context level sometimes exist (tree map)\r\n            if (value == null && dataContext.dataContext) {\r\n                value = getTagValueFromObject(target, parts, dataContext.dataContext);\r\n            }\r\n        }\r\n        // Check component's data item\r\n        if (value == null && dataItem.component && dataItem.component.dataItem !== dataItem) {\r\n            value = getTagValue(dataItem.component, tagName, format);\r\n        }\r\n    }\r\n    // Check sprite's properties\r\n    if (value == null) {\r\n        value = getTagValueFromObject(target, parts, target);\r\n    }\r\n    // Finally, check the parent\r\n    if (value == null && target.parent) {\r\n        value = getTagValue(target.parent, tagName, format);\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction getCustomDataValue(target, prop) {\r\n    const customData = target.getPrivate(\"customData\");\r\n    if ($type.isObject(customData)) {\r\n        return customData[prop];\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getTagValueFromObject(target, parts, object, format) {\r\n    let current = object;\r\n    let formatApplied = false;\r\n    for (let i = 0, len = parts.length; i < len; i++) {\r\n        let part = parts[i];\r\n        if (part.prop) {\r\n            // Regular property\r\n            if (current instanceof Sprite) {\r\n                let tmp = current.get(part.prop);\r\n                if (tmp == null)\r\n                    tmp = current.getPrivate(part.prop);\r\n                if (tmp == null)\r\n                    tmp = getCustomDataValue(current, part.prop);\r\n                if (tmp == null)\r\n                    tmp = current[part.prop];\r\n                current = tmp;\r\n            }\r\n            else if (current.get) {\r\n                let tmp = current.get(part.prop);\r\n                if (tmp == null)\r\n                    tmp = current[part.prop];\r\n                current = tmp;\r\n            }\r\n            else {\r\n                current = current[part.prop];\r\n            }\r\n            if (current == null) {\r\n                // Not set, return undefined\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            // Method\r\n            switch (part.method) {\r\n                case \"formatNumber\":\r\n                    let numberValue = $type.toNumber(current);\r\n                    if (numberValue != null) {\r\n                        current = target.getNumberFormatter().format(numberValue, format || part.params[0] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"formatDate\":\r\n                    let dateValue = $type.toDate(current);\r\n                    if (!$type.isDate(dateValue) || $type.isNaN(dateValue.getTime())) {\r\n                        // Was not able to get date out of value, quitting and letting\r\n                        // calling method try another value\r\n                        return;\r\n                    }\r\n                    if (dateValue != null) {\r\n                        current = target.getDateFormatter().format(dateValue, format || part.params[0] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"formatDuration\":\r\n                    let durationValue = $type.toNumber(current);\r\n                    if (durationValue != null) {\r\n                        current = target.getDurationFormatter().format(durationValue, format || part.params[0] || undefined, part.params[1] || undefined);\r\n                        formatApplied = true;\r\n                    }\r\n                    break;\r\n                case \"urlEncode\":\r\n                case \"encodeURIComponent\":\r\n                    current = encodeURIComponent(current);\r\n                    break;\r\n                default:\r\n                    if (current[part.method]) {\r\n                        current[part.method].apply(object, part.params);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    // Apply default format if it wasn't applied explicitly\r\n    if (!formatApplied) {\r\n        let formatParts = [{\r\n                method: \"\",\r\n                params: format\r\n            }];\r\n        if (format == null) {\r\n            // Format is not set\r\n            // Determine from the type of the value\r\n            if ($type.isNumber(current)) {\r\n                formatParts[0].method = \"formatNumber\";\r\n                formatParts[0].params = \"\";\r\n            }\r\n            else if ($type.isDate(current)) {\r\n                formatParts[0].method = \"formatDate\";\r\n                formatParts[0].params = \"\";\r\n            }\r\n        }\r\n        else {\r\n            // Format set\r\n            // Try to determine formatter based on the format\r\n            let formatterType = $utils.getFormat(format);\r\n            // format\r\n            if (formatterType === \"number\") {\r\n                formatParts[0].method = \"formatNumber\";\r\n            }\r\n            else if (formatterType === \"date\") {\r\n                formatParts[0].method = \"formatDate\";\r\n            }\r\n            else if (formatterType === \"duration\") {\r\n                formatParts[0].method = \"formatDuration\";\r\n            }\r\n        }\r\n        // Apply format\r\n        if (formatParts[0].method) {\r\n            current = getTagValueFromObject(target, formatParts, current);\r\n        }\r\n    }\r\n    return current;\r\n}\r\n//# sourceMappingURL=PopulateString.js.map","import { Children } from \"../util/Children\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport { Rectangle } from \"./Rectangle\";\r\nimport { HorizontalLayout } from \"./HorizontalLayout\";\r\nimport { VerticalLayout } from \"./VerticalLayout\";\r\nimport { GridLayout } from \"./GridLayout\";\r\nimport { populateString } from \"../util/PopulateString\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $type from \"../util/Type\";\r\nimport * as $utils from \"../util/Utils\";\r\n/**\r\n * A basic element that can have child elements, maintain their layout, and\r\n * have a background.\r\n *\r\n * It can have any [[Sprite]] element as a child, from very basic shapes, to\r\n * full-fledged charts.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\r\n * @important\r\n */\r\nexport class Container extends Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeContainer()\r\n        });\r\n        Object.defineProperty(this, \"_childrenDisplay\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeContainer()\r\n        });\r\n        /**\r\n         * List of Container's child elements.\r\n         */\r\n        Object.defineProperty(this, \"children\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Children(this)\r\n        });\r\n        Object.defineProperty(this, \"_percentageSizeChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_percentagePositionChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_prevWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_prevHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_contentMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_vsbd0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_vsbd1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._display.addChild(this._childrenDisplay);\r\n    }\r\n    _dispose() {\r\n        $array.eachReverse(this.allChildren(), (child) => {\r\n            child.dispose();\r\n        });\r\n        if (this.getPrivate(\"htmlElement\")) {\r\n            this._root._removeHTMLContent(this);\r\n        }\r\n        super._dispose();\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"interactiveChildren\")) {\r\n            this._display.interactiveChildren = this.get(\"interactiveChildren\", false);\r\n        }\r\n        if (this.isDirty(\"layout\")) {\r\n            this._prevWidth = 0;\r\n            this._prevHeight = 0;\r\n            this.markDirtyBounds();\r\n            if (this._prevSettings.layout) {\r\n                this.children.each((child) => {\r\n                    child.removePrivate(\"x\");\r\n                    child.removePrivate(\"y\");\r\n                });\r\n            }\r\n        }\r\n        if (this.isDirty(\"paddingTop\") || this.isDirty(\"paddingBottom\") || this.isDirty(\"paddingLeft\") || this.isDirty(\"paddingRight\")) {\r\n            this.children.each((child) => {\r\n                child.markDirtyPosition();\r\n            });\r\n        }\r\n        if (this.isDirty(\"maskContent\")) {\r\n            const childrenDisplay = this._childrenDisplay;\r\n            let contentMask = this._contentMask;\r\n            if (this.get(\"maskContent\")) {\r\n                if (!contentMask) {\r\n                    contentMask = Rectangle.new(this._root, {\r\n                        x: -.5,\r\n                        y: -.5,\r\n                        width: this.width() + 1,\r\n                        height: this.height() + 1\r\n                    });\r\n                    this._contentMask = contentMask;\r\n                    childrenDisplay.addChildAt(contentMask._display, 0);\r\n                    childrenDisplay.mask = contentMask._display;\r\n                }\r\n            }\r\n            else {\r\n                if (contentMask) {\r\n                    childrenDisplay.removeChild(contentMask._display);\r\n                    childrenDisplay.mask = null;\r\n                    contentMask.dispose();\r\n                    this._contentMask = undefined;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateSize() {\r\n        super._updateSize();\r\n        $array.each(this._percentageSizeChildren, (child) => {\r\n            child._updateSize();\r\n        });\r\n        $array.each(this._percentagePositionChildren, (child) => {\r\n            child.markDirtyPosition();\r\n            child._updateSize();\r\n        });\r\n        this.updateBackground();\r\n    }\r\n    updateBackground() {\r\n        const background = this.get(\"background\");\r\n        let bounds = this._localBounds;\r\n        if (bounds && !this.isHidden()) {\r\n            let x = bounds.left;\r\n            let y = bounds.top;\r\n            let w = bounds.right - x;\r\n            let h = bounds.bottom - y;\r\n            let maxWidth = this.get(\"maxWidth\");\r\n            let maxHeight = this.get(\"maxHeight\");\r\n            if (maxHeight) {\r\n                if (h > maxHeight) {\r\n                    h = maxHeight;\r\n                }\r\n            }\r\n            if (maxWidth) {\r\n                if (w > maxWidth) {\r\n                    w = maxWidth;\r\n                }\r\n            }\r\n            let width = this.width();\r\n            let height = this.height();\r\n            if (background) {\r\n                background.setAll({ width: w, height: h, x: x, y: y });\r\n                if (this._display.interactive) {\r\n                    background._display.interactive = true;\r\n                }\r\n            }\r\n            const contentMask = this._contentMask;\r\n            if (contentMask) {\r\n                contentMask.setAll({ width: width + 1, height: height + 1 });\r\n            }\r\n            const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n            if (verticalScrollbar) {\r\n                verticalScrollbar.set(\"height\", height);\r\n                verticalScrollbar.set(\"x\", width - verticalScrollbar.width() - verticalScrollbar.get(\"marginRight\", 0));\r\n                verticalScrollbar.set(\"end\", verticalScrollbar.get(\"start\", 0) + height / this._contentHeight);\r\n                const bg = verticalScrollbar.get(\"background\");\r\n                if (bg) {\r\n                    bg.setAll({ width: verticalScrollbar.width(), height: height });\r\n                }\r\n                let visible = true;\r\n                if (this._contentHeight <= height) {\r\n                    visible = false;\r\n                }\r\n                verticalScrollbar.setPrivate(\"visible\", visible);\r\n            }\r\n        }\r\n    }\r\n    _applyThemes() {\r\n        if (super._applyThemes()) {\r\n            this.eachChildren((child) => {\r\n                child._applyThemes();\r\n            });\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    _applyState(name) {\r\n        super._applyState(name);\r\n        if (this.get(\"setStateOnChildren\")) {\r\n            this.eachChildren((child) => {\r\n                child.states.apply(name);\r\n            });\r\n        }\r\n    }\r\n    _applyStateAnimated(name, duration) {\r\n        super._applyStateAnimated(name, duration);\r\n        if (this.get(\"setStateOnChildren\")) {\r\n            this.eachChildren((child) => {\r\n                child.states.applyAnimate(name, duration);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Returns container's inner width (width without padding) in pixels.\r\n     *\r\n     * @return Inner width (px)\r\n     */\r\n    innerWidth() {\r\n        return this.width() - this.get(\"paddingRight\", 0) - this.get(\"paddingLeft\", 0);\r\n    }\r\n    /**\r\n     * Returns container's inner height (height without padding) in pixels.\r\n     *\r\n     * @return Inner height (px)\r\n     */\r\n    innerHeight() {\r\n        return this.height() - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0);\r\n    }\r\n    _getBounds() {\r\n        let width = this.get(\"width\");\r\n        let height = this.get(\"height\");\r\n        let pWidth = this.getPrivate(\"width\");\r\n        let pHeight = this.getPrivate(\"height\");\r\n        let bounds = {\r\n            left: 0,\r\n            top: 0,\r\n            right: this.width(),\r\n            bottom: this.height(),\r\n        };\r\n        let layout = this.get(\"layout\");\r\n        let horizontal = false;\r\n        let vertical = false;\r\n        if (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\r\n            horizontal = true;\r\n        }\r\n        if (layout instanceof VerticalLayout) {\r\n            vertical = true;\r\n        }\r\n        if ((width != null || pWidth != null) && (height != null || pHeight != null) && !this.get(\"verticalScrollbar\")) {\r\n            // void\r\n        }\r\n        else {\r\n            let m = Number.MAX_VALUE;\r\n            let l = m;\r\n            let r = -m;\r\n            let t = m;\r\n            let b = -m;\r\n            const paddingLeft = this.get(\"paddingLeft\", 0);\r\n            const paddingTop = this.get(\"paddingTop\", 0);\r\n            const paddingRight = this.get(\"paddingRight\", 0);\r\n            const paddingBottom = this.get(\"paddingBottom\", 0);\r\n            this.children.each((child) => {\r\n                if (child.get(\"position\") != \"absolute\" && child.get(\"isMeasured\")) {\r\n                    let childBounds = child.adjustedLocalBounds();\r\n                    let childX = child.x();\r\n                    let childY = child.y();\r\n                    let cl = childX + childBounds.left;\r\n                    let cr = childX + childBounds.right;\r\n                    let ct = childY + childBounds.top;\r\n                    let cb = childY + childBounds.bottom;\r\n                    if (horizontal) {\r\n                        cl -= child.get(\"marginLeft\", 0);\r\n                        cr += child.get(\"marginRight\", 0);\r\n                    }\r\n                    if (vertical) {\r\n                        ct -= child.get(\"marginTop\", 0);\r\n                        cb += child.get(\"marginBottom\", 0);\r\n                    }\r\n                    if (cl < l) {\r\n                        l = cl;\r\n                    }\r\n                    if (cr > r) {\r\n                        r = cr;\r\n                    }\r\n                    if (ct < t) {\r\n                        t = ct;\r\n                    }\r\n                    if (cb > b) {\r\n                        b = cb;\r\n                    }\r\n                }\r\n            });\r\n            if (l == m) {\r\n                l = 0;\r\n            }\r\n            if (r == -m) {\r\n                r = 0;\r\n            }\r\n            if (t == m) {\r\n                t = 0;\r\n            }\r\n            if (b == -m) {\r\n                b = 0;\r\n            }\r\n            bounds.left = l - paddingLeft;\r\n            bounds.top = t - paddingTop;\r\n            bounds.right = r + paddingRight;\r\n            bounds.bottom = b + paddingBottom;\r\n        }\r\n        this._contentWidth = bounds.right - bounds.left;\r\n        this._contentHeight = bounds.bottom - bounds.top;\r\n        if ($type.isNumber(width)) {\r\n            bounds.left = 0;\r\n            bounds.right = width;\r\n        }\r\n        if ($type.isNumber(pWidth)) {\r\n            bounds.left = 0;\r\n            bounds.right = pWidth;\r\n        }\r\n        if ($type.isNumber(height)) {\r\n            bounds.top = 0;\r\n            bounds.bottom = height;\r\n        }\r\n        if ($type.isNumber(pHeight)) {\r\n            bounds.top = 0;\r\n            bounds.bottom = pHeight;\r\n        }\r\n        this._localBounds = bounds;\r\n    }\r\n    _updateBounds() {\r\n        const layout = this.get(\"layout\");\r\n        if (layout) {\r\n            layout.updateContainer(this);\r\n        }\r\n        super._updateBounds();\r\n        this.updateBackground();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        super.markDirty();\r\n        this._root._addDirtyParent(this);\r\n    }\r\n    _prepareChildren() {\r\n        const innerWidth = this.innerWidth();\r\n        const innerHeight = this.innerHeight();\r\n        if (innerWidth != this._prevWidth || innerHeight != this._prevHeight) {\r\n            let layout = this.get(\"layout\");\r\n            let horizontal = false;\r\n            let vertical = false;\r\n            if (layout) {\r\n                if (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\r\n                    horizontal = true;\r\n                }\r\n                if (layout instanceof VerticalLayout) {\r\n                    vertical = true;\r\n                }\r\n            }\r\n            $array.each(this._percentageSizeChildren, (child) => {\r\n                if (!horizontal) {\r\n                    let width = child.get(\"width\");\r\n                    if (width instanceof Percent) {\r\n                        child.setPrivate(\"width\", width.value * innerWidth);\r\n                    }\r\n                }\r\n                if (!vertical) {\r\n                    let height = child.get(\"height\");\r\n                    if (height instanceof Percent) {\r\n                        child.setPrivate(\"height\", height.value * innerHeight);\r\n                    }\r\n                }\r\n            });\r\n            $array.each(this._percentagePositionChildren, (child) => {\r\n                child.markDirtyPosition();\r\n                child.markDirtyBounds();\r\n            });\r\n            this._prevWidth = innerWidth;\r\n            this._prevHeight = innerHeight;\r\n            this._sizeDirty = true;\r\n            this.updateBackground();\r\n        }\r\n        this._handleStates();\r\n    }\r\n    _updateChildren() {\r\n        if (this.isDirty(\"html\")) {\r\n            const html = this.get(\"html\");\r\n            if (html && html !== \"\") {\r\n                this._root._setHTMLContent(this, populateString(this, this.get(\"html\", \"\")));\r\n            }\r\n            else {\r\n                this._root._removeHTMLContent(this);\r\n            }\r\n            this._root._positionHTMLElement(this);\r\n        }\r\n        if (this.isDirty(\"verticalScrollbar\")) {\r\n            const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n            if (verticalScrollbar) {\r\n                verticalScrollbar._setParent(this);\r\n                verticalScrollbar.children.removeValue(verticalScrollbar.startGrip);\r\n                verticalScrollbar.children.removeValue(verticalScrollbar.endGrip);\r\n                this.set(\"maskContent\", true);\r\n                this.set(\"paddingRight\", verticalScrollbar.width() + verticalScrollbar.get(\"marginRight\", 0) + verticalScrollbar.get(\"marginLeft\", 0));\r\n                let background = this.get(\"background\");\r\n                if (!background) {\r\n                    background = this.set(\"background\", Rectangle.new(this._root, {\r\n                        themeTags: [\"background\"],\r\n                        fillOpacity: 0,\r\n                        fill: this._root.interfaceColors.get(\"alternativeBackground\")\r\n                    }));\r\n                }\r\n                this._vsbd0 = this.events.on(\"wheel\", (event) => {\r\n                    const wheelEvent = event.originalEvent;\r\n                    // Ignore wheel event if it is happening on a non-chart element, e.g. if\r\n                    // some page element is over the chart.\r\n                    if ($utils.isLocalEvent(wheelEvent, this)) {\r\n                        wheelEvent.preventDefault();\r\n                    }\r\n                    else {\r\n                        return;\r\n                    }\r\n                    const shiftY = wheelEvent.deltaY / 5000;\r\n                    const start = verticalScrollbar.get(\"start\", 0);\r\n                    const end = verticalScrollbar.get(\"end\", 1);\r\n                    if (start + shiftY > 0 && end + shiftY < 1) {\r\n                        verticalScrollbar.set(\"start\", start + shiftY);\r\n                        verticalScrollbar.set(\"end\", end + shiftY);\r\n                    }\r\n                });\r\n                this._disposers.push(this._vsbd0);\r\n                this._vsbd1 = verticalScrollbar.events.on(\"rangechanged\", () => {\r\n                    let h = this._contentHeight;\r\n                    const childrenDisplay = this._childrenDisplay;\r\n                    const contentMask = this._contentMask;\r\n                    childrenDisplay.y = -verticalScrollbar.get(\"start\") * h;\r\n                    childrenDisplay.markDirtyLayer();\r\n                    if (contentMask) {\r\n                        contentMask._display.y = -childrenDisplay.y;\r\n                        childrenDisplay.mask = contentMask._display;\r\n                    }\r\n                });\r\n                this._disposers.push(this._vsbd1);\r\n                this._display.addChild(verticalScrollbar._display);\r\n            }\r\n            else {\r\n                const previous = this._prevSettings.verticalScrollbar;\r\n                if (previous) {\r\n                    this._display.removeChild(previous._display);\r\n                    if (this._vsbd0) {\r\n                        this._vsbd0.dispose();\r\n                    }\r\n                    if (this._vsbd1) {\r\n                        this._vsbd1.dispose();\r\n                    }\r\n                    const childrenDisplay = this._childrenDisplay;\r\n                    childrenDisplay.y = 0;\r\n                    this.setPrivate(\"height\", undefined);\r\n                    this.set(\"maskContent\", false);\r\n                    this.set(\"paddingRight\", undefined);\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"background\")) {\r\n            // TODO maybe this should dispose ?\r\n            const previous = this._prevSettings[\"background\"];\r\n            if (previous) {\r\n                this._display.removeChild(previous._display);\r\n            }\r\n            const background = this.get(\"background\");\r\n            if (background instanceof Sprite) {\r\n                background.set(\"isMeasured\", false);\r\n                background._setParent(this);\r\n                this._display.addChildAt(background._display, 0);\r\n            }\r\n        }\r\n        if (this.isDirty(\"mask\")) {\r\n            const mask = this.get(\"mask\");\r\n            const previous = this._prevSettings[\"mask\"];\r\n            if (previous) {\r\n                this._display.removeChild(previous._display);\r\n                if (previous != mask) {\r\n                    previous.dispose();\r\n                }\r\n            }\r\n            if (mask) {\r\n                var parent = mask.parent;\r\n                if (parent) {\r\n                    parent.children.removeValue(mask);\r\n                }\r\n                mask._setParent(this);\r\n                this._display.addChildAt(mask._display, 0);\r\n                this._childrenDisplay.mask = mask._display;\r\n            }\r\n        }\r\n    }\r\n    _processTemplateField() {\r\n        super._processTemplateField();\r\n        this.children.each((child) => {\r\n            child._processTemplateField();\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    walkChildren(f) {\r\n        this.children.each((child) => {\r\n            if (child instanceof Container) {\r\n                child.walkChildren(f);\r\n            }\r\n            f(child);\r\n        });\r\n    }\r\n    eachChildren(f) {\r\n        const background = this.get(\"background\");\r\n        if (background) {\r\n            f(background);\r\n        }\r\n        const verticalScrollbar = this.get(\"verticalScrollbar\");\r\n        if (verticalScrollbar) {\r\n            f(verticalScrollbar);\r\n        }\r\n        const mask = this.get(\"mask\");\r\n        if (mask) {\r\n            f(mask);\r\n        }\r\n        this.children.values.forEach((child) => {\r\n            f(child);\r\n        });\r\n    }\r\n    allChildren() {\r\n        const output = [];\r\n        this.eachChildren((x) => {\r\n            output.push(x);\r\n        });\r\n        return output;\r\n    }\r\n    _setDataItem(dataItem) {\r\n        const updated = (dataItem !== this._dataItem);\r\n        super._setDataItem(dataItem);\r\n        const html = this.get(\"html\", \"\");\r\n        if (html && html !== \"\" && updated) {\r\n            this._root._setHTMLContent(this, populateString(this, html));\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Container, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Container\"\r\n});\r\nObject.defineProperty(Container, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Sprite.classNames.concat([Container.className])\r\n});\r\n//# sourceMappingURL=Container.js.map","import { Sprite } from \"./Sprite\";\r\nimport { populateString } from \"../util/PopulateString\";\r\nimport * as $array from \"../util/Array\";\r\nimport { Disposer } from \"../util/Disposer\";\r\n/**\r\n * @ignore Text is an internal class. Use Label instead.\r\n */\r\nexport class Text extends Sprite {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"textStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeTextStyle()\r\n        });\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeText(\"\", this.textStyle)\r\n        });\r\n        Object.defineProperty(this, \"_textStyles\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"textAlign\",\r\n                \"fontFamily\",\r\n                \"fontSize\",\r\n                \"fontStyle\",\r\n                \"fontWeight\",\r\n                \"fontStyle\",\r\n                \"fontVariant\",\r\n                \"textDecoration\",\r\n                \"shadowColor\",\r\n                \"shadowBlur\",\r\n                \"shadowOffsetX\",\r\n                \"shadowOffsetY\",\r\n                \"shadowOpacity\",\r\n                // \"leading\",\r\n                // \"letterSpacing\",\r\n                \"lineHeight\",\r\n                \"baselineRatio\",\r\n                //\"padding\",\r\n                // \"stroke\",\r\n                // \"strokeThickness\",\r\n                // \"trim\",\r\n                // \"wordWrap\",\r\n                \"direction\",\r\n                \"textBaseline\",\r\n                \"oversizedBehavior\",\r\n                \"breakWords\",\r\n                \"ellipsis\",\r\n                \"minScale\"\r\n            ]\r\n        });\r\n        Object.defineProperty(this, \"_originalScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _updateBounds() {\r\n        if (!this.get(\"text\")) {\r\n            let newBounds = {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0,\r\n            };\r\n            this._adjustedLocalBounds = newBounds;\r\n        }\r\n        else {\r\n            super._updateBounds();\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        this._display.clear();\r\n        let textStyle = this.textStyle;\r\n        if (this.isDirty(\"opacity\")) {\r\n            let opacity = this.get(\"opacity\", 1);\r\n            this._display.alpha = opacity;\r\n        }\r\n        if (this.isDirty(\"text\") || this.isDirty(\"populateText\")) {\r\n            this._display.text = this._getText();\r\n            this.markDirtyBounds();\r\n            if (this.get(\"role\") == \"tooltip\") {\r\n                this._root.updateTooltip(this);\r\n            }\r\n        }\r\n        if (this.isPrivateDirty(\"tooltipElement\")) {\r\n            const tooltipElement = this.getPrivate(\"tooltipElement\");\r\n            if (tooltipElement) {\r\n                this._disposers.push(new Disposer(() => {\r\n                    this._root._removeTooltipElement(this);\r\n                }));\r\n            }\r\n        }\r\n        if (this.isDirty(\"width\")) {\r\n            textStyle.wordWrapWidth = this.width();\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"oversizedBehavior\")) {\r\n            textStyle.oversizedBehavior = this.get(\"oversizedBehavior\", \"none\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"breakWords\")) {\r\n            textStyle.breakWords = this.get(\"breakWords\", false);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"ellipsis\")) {\r\n            textStyle.ellipsis = this.get(\"ellipsis\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"ignoreFormatting\")) {\r\n            textStyle.ignoreFormatting = this.get(\"ignoreFormatting\", false);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"minScale\")) {\r\n            textStyle.minScale = this.get(\"minScale\", 0);\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"fill\")) {\r\n            let fill = this.get(\"fill\");\r\n            if (fill) {\r\n                textStyle.fill = fill;\r\n            }\r\n        }\r\n        if (this.isDirty(\"fillOpacity\")) {\r\n            let fillOpacity = this.get(\"fillOpacity\", 1);\r\n            if (fillOpacity) {\r\n                textStyle.fillOpacity = fillOpacity;\r\n            }\r\n        }\r\n        if (this.isDirty(\"maxWidth\") || this.isPrivateDirty(\"maxWidth\")) {\r\n            textStyle.maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"maxHeight\")) {\r\n            textStyle.maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\r\n            this.markDirtyBounds();\r\n        }\r\n        $array.each(this._textStyles, (styleName) => {\r\n            if (this._dirty[styleName]) {\r\n                textStyle[styleName] = this.get(styleName);\r\n                this.markDirtyBounds();\r\n            }\r\n        });\r\n        textStyle[\"fontSize\"] = this.get(\"fontSize\");\r\n        textStyle[\"fontFamily\"] = this.get(\"fontFamily\");\r\n        this._display.style = textStyle;\r\n        if (this.isDirty(\"role\") && this.get(\"role\") == \"tooltip\") {\r\n            this._root.updateTooltip(this);\r\n        }\r\n    }\r\n    _getText() {\r\n        const text = this.get(\"text\", \"\");\r\n        return this.get(\"populateText\") ? populateString(this, text) : text;\r\n    }\r\n    markDirtyText() {\r\n        this._display.text = this._getText();\r\n        if (this.get(\"role\") == \"tooltip\") {\r\n            this._root.updateTooltip(this);\r\n        }\r\n        this.markDirtyBounds();\r\n        this.markDirty();\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        if (this.get(\"populateText\")) {\r\n            this.markDirtyText();\r\n        }\r\n    }\r\n    getNumberFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getNumberFormatter();\r\n        }\r\n        else {\r\n            return super.getNumberFormatter();\r\n        }\r\n    }\r\n    getDateFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getDateFormatter();\r\n        }\r\n        else {\r\n            return super.getDateFormatter();\r\n        }\r\n    }\r\n    getDurationFormatter() {\r\n        if (this.parent) {\r\n            return this.parent.getDurationFormatter();\r\n        }\r\n        else {\r\n            return super.getDurationFormatter();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Text, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Text\"\r\n});\r\nObject.defineProperty(Text, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Sprite.classNames.concat([Text.className])\r\n});\r\n//# sourceMappingURL=Text.js.map","/** @ignore */ /** */\r\nimport * as $array from \"./Array\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * @ignore\r\n */\r\nclass Native {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_observer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_targets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        this._observer = new ResizeObserver((entries) => {\r\n            $array.each(entries, (entry) => {\r\n                $array.each(this._targets, (x) => {\r\n                    if (x.target === entry.target) {\r\n                        x.callback();\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n    addTarget(target, callback) {\r\n        this._observer.observe(target, { box: \"border-box\" });\r\n        this._targets.push({ target, callback });\r\n    }\r\n    removeTarget(target) {\r\n        this._observer.unobserve(target);\r\n        $array.keepIf(this._targets, (x) => {\r\n            return x.target !== target;\r\n        });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Raf {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_timer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_targets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    addTarget(target, callback) {\r\n        if (this._timer === null) {\r\n            let lastTime = null;\r\n            const loop = () => {\r\n                const currentTime = Date.now();\r\n                if (lastTime === null || currentTime > (lastTime + Raf.delay)) {\r\n                    lastTime = currentTime;\r\n                    $array.each(this._targets, (x) => {\r\n                        let newSize = x.target.getBoundingClientRect();\r\n                        if (newSize.width !== x.size.width || newSize.height !== x.size.height) {\r\n                            x.size = newSize;\r\n                            x.callback();\r\n                        }\r\n                    });\r\n                }\r\n                if (this._targets.length === 0) {\r\n                    this._timer = null;\r\n                }\r\n                else {\r\n                    this._timer = requestAnimationFrame(loop);\r\n                }\r\n            };\r\n            this._timer = requestAnimationFrame(loop);\r\n        }\r\n        // We start off with fake bounds so that sensor always kicks in\r\n        let size = { width: 0, height: 0, left: 0, right: 0, top: 0, bottom: 0, x: 0, y: 0 };\r\n        this._targets.push({ target, callback, size });\r\n    }\r\n    removeTarget(target) {\r\n        $array.keepIf(this._targets, (x) => {\r\n            return x.target !== target;\r\n        });\r\n        if (this._targets.length === 0) {\r\n            if (this._timer !== null) {\r\n                cancelAnimationFrame(this._timer);\r\n                this._timer = null;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Raf, \"delay\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: 200\r\n});\r\n/**\r\n * @ignore\r\n */\r\nlet observer = null;\r\n/**\r\n * @ignore\r\n */\r\nfunction makeSensor() {\r\n    if (observer === null) {\r\n        if (typeof ResizeObserver !== \"undefined\") {\r\n            observer = new Native();\r\n        }\r\n        else {\r\n            observer = new Raf();\r\n        }\r\n    }\r\n    return observer;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class ResizeSensor {\r\n    constructor(element, callback) {\r\n        Object.defineProperty(this, \"_sensor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_element\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_listener\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_disposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        this._sensor = makeSensor();\r\n        this._element = element;\r\n        // This is needed because we need to know when the window is zoomed\r\n        this._listener = $utils.onZoom(callback);\r\n        this._sensor.addTarget(element, callback);\r\n    }\r\n    isDisposed() {\r\n        return this._disposed;\r\n    }\r\n    dispose() {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._sensor.removeTarget(this._element);\r\n            this._listener.dispose();\r\n        }\r\n    }\r\n    get sensor() {\r\n        return this._sensor;\r\n    }\r\n}\r\n//# sourceMappingURL=ResizeSensor.js.map","import { Entity } from \"./Entity\";\r\n/**\r\n * Presets for common UI elements.\r\n */\r\nexport class InterfaceColors extends Entity {\r\n}\r\nObject.defineProperty(InterfaceColors, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"InterfaceColors\"\r\n});\r\nObject.defineProperty(InterfaceColors, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([InterfaceColors.className])\r\n});\r\n//# sourceMappingURL=InterfaceColors.js.map","import { Text } from \"../render/Text\";\r\nimport { p50, p100 } from \"../util/Percent\";\r\nimport { Container } from \"./Container\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\n/**\r\n * Creates a label with support for in-line styling and data bindings.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/labels/} for more info\r\n */\r\nexport class Label extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_text\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_textKeys\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"text\",\r\n                \"fill\",\r\n                \"fillOpacity\",\r\n                \"textAlign\",\r\n                \"fontFamily\",\r\n                \"fontSize\",\r\n                \"fontStyle\",\r\n                \"fontWeight\",\r\n                \"fontStyle\",\r\n                \"fontVariant\",\r\n                \"textDecoration\",\r\n                \"shadowColor\",\r\n                \"shadowBlur\",\r\n                \"shadowOffsetX\",\r\n                \"shadowOffsetY\",\r\n                \"shadowOpacity\",\r\n                // \"leading\",\r\n                // \"letterSpacing\",\r\n                \"lineHeight\",\r\n                \"baselineRatio\",\r\n                //\"padding\",\r\n                // \"stroke\",\r\n                // \"strokeThickness\",\r\n                // \"trim\",\r\n                // \"wordWrap\",\r\n                \"direction\",\r\n                \"textBaseline\",\r\n                \"oversizedBehavior\",\r\n                \"breakWords\",\r\n                \"ellipsis\",\r\n                \"minScale\",\r\n                \"populateText\",\r\n                \"role\",\r\n                \"ignoreFormatting\"\r\n            ]\r\n        });\r\n    }\r\n    /**\r\n     * @ignore Text is not to be used directly\r\n     */\r\n    get text() {\r\n        return this._text;\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._makeText();\r\n        $array.each(this._textKeys, (property) => {\r\n            const propValue = this.get(property);\r\n            if (propValue != undefined) {\r\n                this._text.set(property, propValue);\r\n            }\r\n        });\r\n        if (this.get(\"html\", \"\") !== \"\") {\r\n            this._text.set(\"text\", \"\");\r\n        }\r\n        this.onPrivate(\"maxWidth\", () => {\r\n            this._setMaxDimentions();\r\n        });\r\n        this.onPrivate(\"maxHeight\", () => {\r\n            this._setMaxDimentions();\r\n        });\r\n    }\r\n    _makeText() {\r\n        this._text = this.children.push(Text.new(this._root, {}));\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        $array.each(this._textKeys, (property) => {\r\n            this._text.set(property, this.get(property));\r\n        });\r\n        if (this.isDirty(\"maxWidth\")) {\r\n            this._setMaxDimentions();\r\n        }\r\n        if (this.isDirty(\"maxHeight\")) {\r\n            this._setMaxDimentions();\r\n        }\r\n        if (this.isDirty(\"rotation\")) {\r\n            this._setMaxDimentions();\r\n        }\r\n        // Do not show regular text if HTML is used\r\n        if (this.get(\"html\", \"\") !== \"\") {\r\n            this._text.set(\"text\", \"\");\r\n        }\r\n        else {\r\n            this._text.set(\"text\", this.get(\"text\"));\r\n        }\r\n        if (this.isDirty(\"textAlign\") || this.isDirty(\"width\")) {\r\n            const textAlign = this.get(\"textAlign\");\r\n            let x;\r\n            if (this.get(\"width\") != null) {\r\n                if (textAlign == \"right\") {\r\n                    x = p100;\r\n                }\r\n                else if (textAlign == \"center\") {\r\n                    x = p50;\r\n                }\r\n                else {\r\n                    x = 0;\r\n                }\r\n            }\r\n            else {\r\n                if (textAlign == \"left\" || textAlign == \"start\") {\r\n                    x = this.get(\"paddingLeft\");\r\n                }\r\n                else if (textAlign == \"right\" || textAlign == \"end\") {\r\n                    x = -this.get(\"paddingRight\");\r\n                }\r\n            }\r\n            this.text.set(\"x\", x);\r\n        }\r\n    }\r\n    _setMaxDimentions() {\r\n        const rotation = this.get(\"rotation\");\r\n        const vertical = rotation == 90 || rotation == 270 || rotation == -90;\r\n        const maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\", Infinity));\r\n        if ($type.isNumber(maxWidth)) {\r\n            this.text.set(vertical ? \"maxHeight\" : \"maxWidth\", maxWidth - this.get(\"paddingLeft\", 0) - this.get(\"paddingRight\", 0));\r\n        }\r\n        else {\r\n            this.text.set(vertical ? \"maxHeight\" : \"maxWidth\", undefined);\r\n        }\r\n        const maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\", Infinity));\r\n        if ($type.isNumber(maxHeight)) {\r\n            this.text.set(vertical ? \"maxWidth\" : \"maxHeight\", maxHeight - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0));\r\n        }\r\n        else {\r\n            this.text.set(vertical ? \"maxWidth\" : \"maxHeight\", undefined);\r\n        }\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        this._markDirtyKey(\"text\");\r\n        if (this.text.get(\"populateText\")) {\r\n            this.text.markDirtyText();\r\n        }\r\n    }\r\n    /**\r\n     * Returns text with populated placeholders and formatting if `populateText` is\r\n     * set to `true`.\r\n     *\r\n     * @return Populated text\r\n     */\r\n    getText() {\r\n        return this._text._getText();\r\n    }\r\n}\r\nObject.defineProperty(Label, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Label\"\r\n});\r\nObject.defineProperty(Label, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Label.className])\r\n});\r\n//# sourceMappingURL=Label.js.map","import { Graphics } from \"./Graphics\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * Draws a rectangle with a pointer.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class PointedRectangle extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"pointerBaseWidth\") || this.isDirty(\"cornerRadius\") || this.isDirty(\"pointerLength\") || this.isDirty(\"pointerX\") || this.isDirty(\"pointerY\") || this.isDirty(\"width\") || this.isDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this.markDirtyBounds();\r\n            let w = this.width();\r\n            let h = this.height();\r\n            if (w > 0 && h > 0) {\r\n                let cr = this.get(\"cornerRadius\", 8);\r\n                cr = $math.fitToRange(cr, 0, Math.min(w / 2, h / 2));\r\n                let x = this.get(\"pointerX\", 0);\r\n                let y = this.get(\"pointerY\", 0);\r\n                let bwh = this.get(\"pointerBaseWidth\", 15) / 2;\r\n                // corner coordinates\r\n                // top left\r\n                let xtl = 0;\r\n                let ytl = 0;\r\n                // top right\r\n                let xtr = w;\r\n                let ytr = 0;\r\n                // bottom right\r\n                let xbr = w;\r\n                let ybr = h;\r\n                // bottom left\r\n                let xbl = 0;\r\n                let ybl = h;\r\n                // find stem base side: http://$math.stackexchange.com/questions/274712/calculate-on-which-side-of-straign-line-is-dot-located\r\n                // d=(x−x1)(y2−y1)−(y−y1)(x2−x1)\r\n                let d1 = (x - xtl) * (ybr - ytl) - (y - ytl) * (xbr - xtl);\r\n                let d2 = (x - xbl) * (ytr - ybl) - (y - ybl) * (xtr - xbl);\r\n                const display = this._display;\r\n                // top\r\n                display.moveTo(cr, 0);\r\n                if (d1 > 0 && d2 > 0) {\r\n                    let stemX = Math.round($math.fitToRange(x, cr + bwh, w - bwh - cr));\r\n                    y = $math.fitToRange(y, -Infinity, 0);\r\n                    display.lineTo(stemX - bwh, 0);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(stemX + bwh, 0);\r\n                }\r\n                display.lineTo(w - cr, 0);\r\n                display.arcTo(w, 0, w, cr, cr);\r\n                // right\r\n                if (d1 > 0 && d2 < 0) {\r\n                    let stemY = Math.round($math.fitToRange(y, cr + bwh, h - bwh - cr));\r\n                    x = $math.fitToRange(x, w, Infinity);\r\n                    display.lineTo(w, cr);\r\n                    display.lineTo(w, Math.max(stemY - bwh, cr));\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(w, stemY + bwh);\r\n                }\r\n                display.lineTo(w, h - cr);\r\n                display.arcTo(w, h, w - cr, h, cr);\r\n                // bottom\r\n                if (d1 < 0 && d2 < 0) {\r\n                    let stemX = Math.round($math.fitToRange(x, cr + bwh, w - bwh - cr));\r\n                    y = $math.fitToRange(y, h, Infinity);\r\n                    display.lineTo(w - cr, h);\r\n                    display.lineTo(stemX + bwh, h);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(stemX - bwh, h);\r\n                }\r\n                display.lineTo(cr, h);\r\n                display.arcTo(0, h, 0, h - cr, cr);\r\n                // left\r\n                if (d1 < 0 && d2 > 0) {\r\n                    let stemY = Math.round($math.fitToRange(y, cr + bwh, h - cr - bwh));\r\n                    x = $math.fitToRange(x, -Infinity, 0);\r\n                    display.lineTo(0, h - cr);\r\n                    display.lineTo(0, stemY + bwh);\r\n                    display.lineTo(x, y);\r\n                    display.lineTo(0, Math.max(stemY - bwh, cr));\r\n                }\r\n                display.lineTo(0, cr);\r\n                display.arcTo(0, 0, cr, 0, cr);\r\n                display.closePath();\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PointedRectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PointedRectangle\"\r\n});\r\nObject.defineProperty(PointedRectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([PointedRectangle.className])\r\n});\r\n//# sourceMappingURL=PointedRectangle.js.map","import { MultiDisposer } from \"../util/Disposer\";\r\nimport { Label } from \"../render/Label\";\r\nimport { PointedRectangle } from \"../render/PointedRectangle\";\r\nimport { Container } from \"./Container\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { Color } from \"../util/Color\";\r\nimport * as $math from \"../util/Math\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $utils from \"../util/Utils\";\r\n/**\r\n * Creates a tooltip.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/} for more info\r\n * @important\r\n */\r\nexport class Tooltip extends Container {\r\n    constructor(root, settings, isReal, templates = []) {\r\n        super(root, settings, isReal, templates);\r\n        Object.defineProperty(this, \"_fx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_fy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_label\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fillDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_labelDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_w\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_h\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_keepHoverDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"tooltip\"]);\r\n        super._afterNew();\r\n        this.set(\"background\", PointedRectangle.new(this._root, {\r\n            themeTags: [\"tooltip\", \"background\"]\r\n        }));\r\n        this._label = this.children.push(Label.new(this._root, {}));\r\n        this._disposers.push(this._label.events.on(\"boundschanged\", () => {\r\n            this._updateBackground();\r\n        }));\r\n        this._disposers.push(this.on(\"bounds\", () => {\r\n            this._updateBackground();\r\n        }));\r\n        this._updateTextColor();\r\n        this._root.tooltipContainer.children.push(this);\r\n        this.hide(0);\r\n        this._root._tooltips.push(this);\r\n    }\r\n    /**\r\n     * A [[Label]] element for the tooltip.\r\n     *\r\n     * @readonly\r\n     * @return Label\r\n     */\r\n    get label() {\r\n        return this._label;\r\n    }\r\n    /**\r\n     * Permanently disposes the tooltip.\r\n     */\r\n    dispose() {\r\n        super.dispose();\r\n        $array.remove(this._root._tooltips, this);\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        const labelText = this.get(\"labelText\");\r\n        if (labelText != null) {\r\n            this.label.set(\"text\", this.get(\"labelText\"));\r\n        }\r\n        const labelHTML = this.get(\"labelHTML\");\r\n        if (labelHTML != null) {\r\n            this.label.set(\"html\", this.get(\"labelHTML\"));\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"pointTo\")) {\r\n            // can't compare to previous, as sometimes pointTo is set twice (when pointer moves, so the position won't be udpated)\r\n            this._updateBackground();\r\n        }\r\n        if (this.isDirty(\"tooltipTarget\")) {\r\n            this.updateBackgroundColor();\r\n        }\r\n        if (this.isDirty(\"keepTargetHover\")) {\r\n            const keephover = this.get(\"keepTargetHover\");\r\n            if (keephover) {\r\n                const bg = this.get(\"background\");\r\n                this._keepHoverDp = new MultiDisposer([\r\n                    bg.events.on(\"pointerover\", (_ev) => {\r\n                        let target = this.get(\"tooltipTarget\");\r\n                        if (target) {\r\n                            if (target.parent && target.parent.getPrivate(\"tooltipTarget\") == target) {\r\n                                target = target.parent;\r\n                            }\r\n                            target.hover();\r\n                        }\r\n                    }),\r\n                    bg.events.on(\"pointerout\", (_ev) => {\r\n                        let target = this.get(\"tooltipTarget\");\r\n                        if (target) {\r\n                            if (target.parent && target.parent.getPrivate(\"tooltipTarget\") == target) {\r\n                                target = target.parent;\r\n                            }\r\n                            target.unhover();\r\n                        }\r\n                    })\r\n                ]);\r\n            }\r\n            else {\r\n                if (this._keepHoverDp) {\r\n                    this._keepHoverDp.dispose();\r\n                    this._keepHoverDp = undefined;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _onShow() {\r\n        super._onShow();\r\n        this.updateBackgroundColor();\r\n    }\r\n    updateBackgroundColor() {\r\n        let tooltipTarget = this.get(\"tooltipTarget\");\r\n        const background = this.get(\"background\");\r\n        let fill;\r\n        let stroke;\r\n        if (tooltipTarget && background) {\r\n            fill = tooltipTarget.get(\"fill\");\r\n            stroke = tooltipTarget.get(\"stroke\");\r\n            if (fill == null) {\r\n                fill = stroke;\r\n            }\r\n            if (this.get(\"getFillFromSprite\")) {\r\n                if (this._fillDp) {\r\n                    this._fillDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    background.set(\"fill\", fill);\r\n                }\r\n                this._fillDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        background.set(\"fill\", fill);\r\n                        this._updateTextColor(fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._fillDp);\r\n            }\r\n            if (this.get(\"getStrokeFromSprite\")) {\r\n                if (this._strokeDp) {\r\n                    this._strokeDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    background.set(\"stroke\", fill);\r\n                }\r\n                this._strokeDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        background.set(\"stroke\", fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._strokeDp);\r\n            }\r\n            if (this.get(\"getLabelFillFromSprite\")) {\r\n                if (this._labelDp) {\r\n                    this._labelDp.dispose();\r\n                }\r\n                if (fill != null) {\r\n                    this.label.set(\"fill\", fill);\r\n                }\r\n                this._labelDp = tooltipTarget.on(\"fill\", (fill) => {\r\n                    if (fill != null) {\r\n                        this.label.set(\"fill\", fill);\r\n                    }\r\n                });\r\n                this._disposers.push(this._labelDp);\r\n            }\r\n        }\r\n        this._updateTextColor(fill);\r\n    }\r\n    _updateTextColor(fill) {\r\n        if (this.get(\"autoTextColor\")) {\r\n            if (fill == null) {\r\n                fill = this.get(\"background\").get(\"fill\");\r\n            }\r\n            if (fill == null) {\r\n                fill = this._root.interfaceColors.get(\"background\");\r\n            }\r\n            if (fill instanceof Color) {\r\n                this.label.set(\"fill\", Color.alternative(fill, this._root.interfaceColors.get(\"alternativeText\"), this._root.interfaceColors.get(\"text\")));\r\n            }\r\n        }\r\n    }\r\n    _setDataItem(dataItem) {\r\n        super._setDataItem(dataItem);\r\n        this.label._setDataItem(dataItem);\r\n    }\r\n    _updateBackground() {\r\n        super.updateBackground();\r\n        const parent = this._root.container;\r\n        if (parent) {\r\n            let cw = 0.5;\r\n            let ch = 0.5;\r\n            let centerX = this.get(\"centerX\");\r\n            if (centerX instanceof Percent) {\r\n                cw = centerX.value;\r\n            }\r\n            let centerY = this.get(\"centerY\");\r\n            if (centerY instanceof Percent) {\r\n                ch = centerY.value;\r\n            }\r\n            let parentW = parent.width();\r\n            let parentH = parent.height();\r\n            let tooltipContainer = this.parent;\r\n            let xx = 0;\r\n            let yy = 0;\r\n            if (tooltipContainer) {\r\n                xx = tooltipContainer.x();\r\n                yy = tooltipContainer.y();\r\n                const layerMargin = tooltipContainer.get(\"layerMargin\");\r\n                if (layerMargin) {\r\n                    xx += layerMargin.left || 0;\r\n                    yy += layerMargin.top || 0;\r\n                    parentW += (layerMargin.left || 0) + (layerMargin.right || 0);\r\n                    parentH += (layerMargin.top || 0) + (layerMargin.bottom || 0);\r\n                }\r\n            }\r\n            const bounds = this.get(\"bounds\", { left: -xx, top: -yy, right: parentW - xx, bottom: parentH - yy });\r\n            this._updateBounds();\r\n            let w = this.width();\r\n            let h = this.height();\r\n            // use old w and h,as when tooltip is hidden, these are 0 and unneeded animation happens\r\n            if (w === 0) {\r\n                w = this._w;\r\n            }\r\n            if (h === 0) {\r\n                h = this._h;\r\n            }\r\n            let pointTo = this.get(\"pointTo\", { x: parentW / 2, y: parentH / 2 });\r\n            let x = pointTo.x;\r\n            let y = pointTo.y;\r\n            let pointerOrientation = this.get(\"pointerOrientation\");\r\n            let background = this.get(\"background\");\r\n            let pointerLength = 0;\r\n            let bgStrokeSizeY = 0;\r\n            let bgStrokeSizeX = 0;\r\n            if (background instanceof PointedRectangle) {\r\n                pointerLength = background.get(\"pointerLength\", 0);\r\n                bgStrokeSizeY = background.get(\"strokeWidth\", 0) / 2;\r\n                bgStrokeSizeX = bgStrokeSizeY;\r\n            }\r\n            let pointerX = 0;\r\n            let pointerY = 0;\r\n            let boundsW = bounds.right - bounds.left;\r\n            let boundsH = bounds.bottom - bounds.top;\r\n            // horizontal\r\n            if (pointerOrientation == \"horizontal\" || pointerOrientation == \"left\" || pointerOrientation == \"right\") {\r\n                bgStrokeSizeY = 0;\r\n                if (pointerOrientation == \"horizontal\") {\r\n                    if (x > bounds.left + boundsW / 2) {\r\n                        x -= (w * (1 - cw) + pointerLength);\r\n                        bgStrokeSizeX *= -1;\r\n                    }\r\n                    else {\r\n                        x += (w * cw + pointerLength);\r\n                    }\r\n                }\r\n                else if (pointerOrientation == \"left\") {\r\n                    x += (w * (1 - cw) + pointerLength);\r\n                }\r\n                else {\r\n                    x -= (w * cw + pointerLength);\r\n                    bgStrokeSizeX *= -1;\r\n                }\r\n            }\r\n            // vertical pointer\r\n            else {\r\n                bgStrokeSizeX = 0;\r\n                if (pointerOrientation == \"vertical\") {\r\n                    if (y > bounds.top + h / 2 + pointerLength) {\r\n                        y -= (h * (1 - ch) + pointerLength);\r\n                    }\r\n                    else {\r\n                        y += (h * ch + pointerLength);\r\n                        bgStrokeSizeY *= -1;\r\n                    }\r\n                }\r\n                else if (pointerOrientation == \"down\") {\r\n                    y -= (h * (1 - ch) + pointerLength);\r\n                }\r\n                else {\r\n                    y += (h * ch + pointerLength);\r\n                    bgStrokeSizeY *= -1;\r\n                }\r\n            }\r\n            x = $math.fitToRange(x, bounds.left + w * cw, bounds.left + boundsW - w * (1 - cw)) + bgStrokeSizeX;\r\n            y = $math.fitToRange(y, bounds.top + h * ch, bounds.top + boundsH - h * (1 - ch)) - bgStrokeSizeY;\r\n            pointerX = pointTo.x - x + w * cw + bgStrokeSizeX;\r\n            pointerY = pointTo.y - y + h * ch - bgStrokeSizeY;\r\n            this._fx = x;\r\n            this._fy = y;\r\n            const animationDuration = this.get(\"animationDuration\", 0);\r\n            if (animationDuration > 0 && this.get(\"visible\") && this.get(\"opacity\") > 0.1) {\r\n                const animationEasing = this.get(\"animationEasing\");\r\n                this.animate({ key: \"x\", to: x, duration: animationDuration, easing: animationEasing });\r\n                this.animate({ key: \"y\", to: y, duration: animationDuration, easing: animationEasing });\r\n            }\r\n            else {\r\n                this.set(\"x\", x);\r\n                this.set(\"y\", y);\r\n            }\r\n            if (background instanceof PointedRectangle) {\r\n                background.set(\"pointerX\", pointerX);\r\n                background.set(\"pointerY\", pointerY);\r\n            }\r\n            if (w > 0) {\r\n                this._w = w;\r\n            }\r\n            if (h > 0) {\r\n                this._h = h;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Tooltip, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Tooltip\"\r\n});\r\nObject.defineProperty(Tooltip, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Tooltip.className])\r\n});\r\n//# sourceMappingURL=Tooltip.js.map","import { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport * as $object from \"./Object\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * Number formatter\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\r\n * @important\r\n */\r\nexport class NumberFormatter extends Entity {\r\n    _setDefaults() {\r\n        // Defaults\r\n        this._setDefault(\"negativeBase\", 0);\r\n        this._setDefault(\"numberFormat\", \"#,###.#####\");\r\n        this._setDefault(\"smallNumberThreshold\", 1.00);\r\n        const bns = \"_big_number_suffix_\";\r\n        const sns = \"_small_number_suffix_\";\r\n        const bs = \"_byte_suffix_\";\r\n        this._setDefault(\"bigNumberPrefixes\", [\r\n            { \"number\": 1e+3, \"suffix\": this._t(bns + \"3\") },\r\n            { \"number\": 1e+6, \"suffix\": this._t(bns + \"6\") },\r\n            { \"number\": 1e+9, \"suffix\": this._t(bns + \"9\") },\r\n            { \"number\": 1e+12, \"suffix\": this._t(bns + \"12\") },\r\n            { \"number\": 1e+15, \"suffix\": this._t(bns + \"15\") },\r\n            { \"number\": 1e+18, \"suffix\": this._t(bns + \"18\") },\r\n            { \"number\": 1e+21, \"suffix\": this._t(bns + \"21\") },\r\n            { \"number\": 1e+24, \"suffix\": this._t(bns + \"24\") }\r\n        ]);\r\n        this._setDefault(\"smallNumberPrefixes\", [\r\n            { \"number\": 1e-24, \"suffix\": this._t(sns + \"24\") },\r\n            { \"number\": 1e-21, \"suffix\": this._t(sns + \"21\") },\r\n            { \"number\": 1e-18, \"suffix\": this._t(sns + \"18\") },\r\n            { \"number\": 1e-15, \"suffix\": this._t(sns + \"15\") },\r\n            { \"number\": 1e-12, \"suffix\": this._t(sns + \"12\") },\r\n            { \"number\": 1e-9, \"suffix\": this._t(sns + \"9\") },\r\n            { \"number\": 1e-6, \"suffix\": this._t(sns + \"6\") },\r\n            { \"number\": 1e-3, \"suffix\": this._t(sns + \"3\") }\r\n        ]);\r\n        this._setDefault(\"bytePrefixes\", [\r\n            { \"number\": 1, suffix: this._t(bs + \"B\") },\r\n            { \"number\": 1024, suffix: this._t(bs + \"KB\") },\r\n            { \"number\": 1048576, suffix: this._t(bs + \"MB\") },\r\n            { \"number\": 1073741824, suffix: this._t(bs + \"GB\") },\r\n            { \"number\": 1099511627776, suffix: this._t(bs + \"TB\") },\r\n            { \"number\": 1125899906842624, suffix: this._t(bs + \"PB\") }\r\n        ]);\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    /**\r\n     * Formats the number according to specific format.\r\n     *\r\n     * @param value   Value to format\r\n     * @param format  Format to apply\r\n     * @return Formatted number\r\n     */\r\n    format(value, format, precision) {\r\n        // no format passed in or \"Number\"\r\n        if (format == null || ($type.isString(format) && format.toLowerCase() === \"number\")) {\r\n            format = this.get(\"numberFormat\", \"\");\r\n        }\r\n        // Init return value\r\n        let formatted;\r\n        // Cast to number just in case\r\n        // TODO: maybe use better casting\r\n        let source = Number(value);\r\n        // Is it a built-in format or Intl.NumberFormatOptions\r\n        if ($type.isObject(format)) {\r\n            try {\r\n                if (this.get(\"intlLocales\")) {\r\n                    return new Intl.NumberFormat(this.get(\"intlLocales\"), format).format(source);\r\n                }\r\n                else {\r\n                    return new Intl.NumberFormat(undefined, format).format(source);\r\n                }\r\n            }\r\n            catch (e) {\r\n                return \"Invalid\";\r\n            }\r\n        }\r\n        else {\r\n            // Clean format\r\n            format = $utils.cleanFormat(format);\r\n            // Get format info (it will also deal with parser caching)\r\n            let info = this.parseFormat(format, this._root.language);\r\n            // format and replace the number\r\n            let details;\r\n            if (source > this.get(\"negativeBase\")) {\r\n                details = info.positive;\r\n            }\r\n            else if (source < this.get(\"negativeBase\")) {\r\n                details = info.negative;\r\n            }\r\n            else {\r\n                details = info.zero;\r\n            }\r\n            // Adjust precision\r\n            if (precision != null && !details.mod) {\r\n                details = $object.copy(details);\r\n                details.decimals.active = source == 0 ? 0 : precision;\r\n            }\r\n            // Format\r\n            formatted = details.template.split($type.PLACEHOLDER).join(this.applyFormat(source, details));\r\n        }\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Parses supplied format into structured object which can be used to format\r\n     * the number.\r\n     *\r\n     * @param format Format string, i.e. \"#,###.00\"\r\n     * @param language Language\r\n     * @ignore\r\n     */\r\n    parseFormat(format, language) {\r\n        // Check cache\r\n        // TODO\r\n        // let cached = this.getCache(format);\r\n        // if (cached != null) {\r\n        // \treturn cached;\r\n        // }\r\n        const thousandSeparator = language.translateEmpty(\"_thousandSeparator\");\r\n        const decimalSeparator = language.translateEmpty(\"_decimalSeparator\");\r\n        // init format parse info holder\r\n        let info = {\r\n            \"positive\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            },\r\n            \"negative\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            },\r\n            \"zero\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": thousandSeparator\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": decimalSeparator\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            }\r\n        };\r\n        // Escape double vertical bars (that mean display one vertical bar)\r\n        format = format.replace(\"||\", $type.PLACEHOLDER2);\r\n        // Split it up and deal with different formats\r\n        let parts = format.split(\"|\");\r\n        info.positive.source = parts[0];\r\n        if (typeof parts[2] === \"undefined\") {\r\n            info.zero = info.positive;\r\n        }\r\n        else {\r\n            info.zero.source = parts[2];\r\n        }\r\n        if (typeof parts[1] === \"undefined\") {\r\n            info.negative = info.positive;\r\n        }\r\n        else {\r\n            info.negative.source = parts[1];\r\n        }\r\n        // Parse each\r\n        $object.each(info, (_part, item) => {\r\n            // Already parsed\r\n            if (item.parsed) {\r\n                return;\r\n            }\r\n            // Check cached\r\n            // TODO\r\n            // if (typeof this.getCache(item.source) !== \"undefined\") {\r\n            // \tinfo[part] = this.getCache(item.source);\r\n            // \treturn;\r\n            // }\r\n            // Begin parsing\r\n            let partFormat = item.source;\r\n            // Just \"Number\"?\r\n            if (partFormat.toLowerCase() === \"number\") {\r\n                partFormat = this.get(\"numberFormat\", \"#,###.#####\");\r\n            }\r\n            // Let TextFormatter split into chunks\r\n            let chunks = TextFormatter.chunk(partFormat, true);\r\n            for (let i = 0; i < chunks.length; i++) {\r\n                let chunk = chunks[i];\r\n                // replace back double vertical bar\r\n                chunk.text = chunk.text.replace($type.PLACEHOLDER2, \"|\");\r\n                if (chunk.type === \"value\") {\r\n                    // Parse format\r\n                    // Look for codes\r\n                    let matches = chunk.text.match(/[#0.,]+[ ]?[abespABESP%!]?[abespABESP‰!]?/);\r\n                    if (matches) {\r\n                        if (matches === null || matches[0] === \"\") {\r\n                            // no codes here - assume string\r\n                            // nothing to do here\r\n                            item.template += chunk.text;\r\n                        }\r\n                        else {\r\n                            // look for the format modifiers at the end\r\n                            let mods = matches[0].match(/[abespABESP%‰!]{2}|[abespABESP%‰]{1}$/);\r\n                            if (mods) {\r\n                                item.mod = mods[0].toLowerCase();\r\n                                item.modSpacing = matches[0].match(/[ ]{1}[abespABESP%‰!]{1}$/) ? true : false;\r\n                            }\r\n                            // break the format up\r\n                            let a = matches[0].split(\".\");\r\n                            // Deal with thousands\r\n                            if (a[0] === \"\") {\r\n                                // No directives for thousands\r\n                                // Leave default settings (no formatting)\r\n                            }\r\n                            else {\r\n                                // Counts\r\n                                item.thousands.active = (a[0].match(/0/g) || []).length;\r\n                                item.thousands.passive = (a[0].match(/\\#/g) || []).length + item.thousands.active;\r\n                                // Separator interval\r\n                                let b = a[0].split(\",\");\r\n                                if (b.length === 1) {\r\n                                    // No thousands separators\r\n                                    // Do nothing\r\n                                }\r\n                                else {\r\n                                    // Use length fo the last chunk as thousands length\r\n                                    item.thousands.interval = (b.pop() || \"\").length;\r\n                                    if (item.thousands.interval === 0) {\r\n                                        item.thousands.interval = -1;\r\n                                    }\r\n                                }\r\n                            }\r\n                            // Deal with decimals\r\n                            if (typeof (a[1]) === \"undefined\") {\r\n                                // No directives for decimals\r\n                                // Leave at defaults (no formatting)\r\n                            }\r\n                            else {\r\n                                // Counts\r\n                                item.decimals.active = (a[1].match(/0/g) || []).length;\r\n                                item.decimals.passive = (a[1].match(/\\#/g) || []).length + item.decimals.active;\r\n                            }\r\n                            // Add special code to template\r\n                            item.template += chunk.text.split(matches[0]).join($type.PLACEHOLDER);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    // Quoted string - take it as it is\r\n                    item.template += chunk.text;\r\n                }\r\n            }\r\n            // Apply style formatting\r\n            //item.template = getTextFormatter().format(item.template, this.outputFormat);\r\n            // Save cache\r\n            // TODO\r\n            //this.setCache(item.source, item);\r\n            // Mark this as parsed\r\n            item.parsed = true;\r\n        });\r\n        // Save cache (the whole thing)\r\n        // TODO\r\n        //this.setCache(format, info);\r\n        return info;\r\n    }\r\n    /**\r\n     * Applies parsed format to a numeric value.\r\n     *\r\n     * @param value    Value\r\n     * @param details  Parsed format as returned by parseFormat()\r\n     * @return Formatted number\r\n     * @ignore\r\n     */\r\n    applyFormat(value, details) {\r\n        // Use absolute values\r\n        let negative = value < 0;\r\n        value = Math.abs(value);\r\n        // Recalculate according to modifier\r\n        let prefix = \"\", suffix = \"\";\r\n        let mods = details.mod ? details.mod.split(\"\") : [];\r\n        if (mods.indexOf(\"b\") !== -1) {\r\n            let a = this.applyPrefix(value, this.get(\"bytePrefixes\"), mods.indexOf(\"!\") !== -1);\r\n            value = a[0];\r\n            prefix = a[1];\r\n            suffix = a[2];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"a\") !== -1) {\r\n            let a = this.applyPrefix(value, value < this.get(\"smallNumberThreshold\") ? this.get(\"smallNumberPrefixes\") : this.get(\"bigNumberPrefixes\"), mods.indexOf(\"!\") !== -1);\r\n            value = a[0];\r\n            prefix = a[1];\r\n            suffix = a[2];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"p\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 2, 21);\r\n            //value *= 100;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            prefix = this._root.language.translate(\"_percentPrefix\");\r\n            suffix = this._root.language.translate(\"_percentSuffix\");\r\n            if (prefix == \"\" && suffix == \"\") {\r\n                suffix = \"%\";\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"%\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 2, 21);\r\n            value *= 100;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            suffix = \"%\";\r\n        }\r\n        else if (mods.indexOf(\"‰\") !== -1) {\r\n            let ol = Math.min(value.toString().length + 3, 21);\r\n            value *= 1000;\r\n            value = parseFloat(value.toPrecision(ol));\r\n            suffix = \"‰\";\r\n        }\r\n        // Round to passive\r\n        if (mods.indexOf(\"e\") !== -1) {\r\n            // convert the value to exponential\r\n            let exp;\r\n            if (details.decimals.passive >= 0) {\r\n                exp = value.toExponential(details.decimals.passive).split(\"e\");\r\n            }\r\n            else {\r\n                exp = value.toExponential().split(\"e\");\r\n            }\r\n            value = Number(exp[0]);\r\n            suffix = \"e\" + exp[1];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (details.decimals.passive === 0) {\r\n            value = Math.round(value);\r\n        }\r\n        else if (details.decimals.passive > 0) {\r\n            let d = Math.pow(10, details.decimals.passive);\r\n            value = Math.round(value * d) / d;\r\n        }\r\n        // Init return value\r\n        let res = \"\";\r\n        // Calc integer and decimal parts\r\n        let a = $type.numberToString(value).split(\".\");\r\n        // Format integers\r\n        let ints = a[0];\r\n        // Pad integers to active length\r\n        if (ints.length < details.thousands.active) {\r\n            ints = Array(details.thousands.active - ints.length + 1).join(\"0\") + ints;\r\n        }\r\n        // Insert thousands separators\r\n        if (details.thousands.interval > 0) {\r\n            let ip = [];\r\n            let intsr = ints.split(\"\").reverse().join(\"\");\r\n            for (let i = 0, len = ints.length; i <= len; i += details.thousands.interval) {\r\n                let c = intsr.substr(i, details.thousands.interval).split(\"\").reverse().join(\"\");\r\n                if (c !== \"\") {\r\n                    ip.unshift(c);\r\n                }\r\n            }\r\n            ints = ip.join(details.thousands.separator);\r\n        }\r\n        // Add integers\r\n        res += ints;\r\n        // Add decimals\r\n        if (a.length === 1) {\r\n            a.push(\"\");\r\n        }\r\n        let decs = a[1];\r\n        // Fill zeros?\r\n        if (decs.length < details.decimals.active) {\r\n            decs += Array(details.decimals.active - decs.length + 1).join(\"0\");\r\n        }\r\n        if (decs !== \"\") {\r\n            res += details.decimals.separator + decs;\r\n        }\r\n        // Can't have empty return value\r\n        if (res === \"\") {\r\n            res = \"0\";\r\n        }\r\n        // Add minus sign back\r\n        if (value !== 0 && negative && (mods.indexOf(\"s\") === -1)) {\r\n            res = \"-\" + res;\r\n        }\r\n        // Add suffixes/prefixes\r\n        if (prefix) {\r\n            res = prefix + res;\r\n        }\r\n        if (suffix) {\r\n            res += suffix;\r\n        }\r\n        return res;\r\n    }\r\n    applyPrefix(value, prefixes, force = false) {\r\n        let newvalue = value;\r\n        let prefix = \"\";\r\n        let suffix = \"\";\r\n        let applied = false;\r\n        let k = 1;\r\n        for (let i = 0, len = prefixes.length; i < len; i++) {\r\n            if (prefixes[i].number <= value) {\r\n                if (prefixes[i].number === 0) {\r\n                    newvalue = 0;\r\n                }\r\n                else {\r\n                    newvalue = value / prefixes[i].number;\r\n                    k = prefixes[i].number;\r\n                }\r\n                prefix = prefixes[i].prefix;\r\n                suffix = prefixes[i].suffix;\r\n                applied = true;\r\n            }\r\n        }\r\n        if (!applied && force && prefixes.length && value != 0) {\r\n            // Prefix was not applied. Use the first prefix.\r\n            newvalue = value / prefixes[0].number;\r\n            prefix = prefixes[0].prefix;\r\n            suffix = prefixes[0].suffix;\r\n            applied = true;\r\n        }\r\n        if (applied) {\r\n            newvalue = parseFloat(newvalue.toPrecision(Math.min(k.toString().length + Math.floor(newvalue).toString().replace(/[^0-9]*/g, \"\").length, 21)));\r\n        }\r\n        return [newvalue, prefix, suffix];\r\n    }\r\n    /**\r\n     * Replaces brackets with temporary placeholders.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Escaped text\r\n     */\r\n    escape(text) {\r\n        return text.replace(\"||\", $type.PLACEHOLDER2);\r\n    }\r\n    /**\r\n     * Replaces placeholders back to brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Escaped text\r\n     * @return Unescaped text\r\n     */\r\n    unescape(text) {\r\n        return text.replace($type.PLACEHOLDER2, \"|\");\r\n    }\r\n}\r\n//# sourceMappingURL=NumberFormatter.js.map","function parseDate(timezone, date) {\r\n    let year = 0;\r\n    let month = 0;\r\n    let day = 1;\r\n    let hour = 0;\r\n    let minute = 0;\r\n    let second = 0;\r\n    let millisecond = 0;\r\n    let weekday = 0;\r\n    timezone.formatToParts(date).forEach((x) => {\r\n        switch (x.type) {\r\n            case \"year\":\r\n                year = +x.value;\r\n                break;\r\n            case \"month\":\r\n                month = (+x.value) - 1;\r\n                break;\r\n            case \"day\":\r\n                day = +x.value;\r\n                break;\r\n            case \"hour\":\r\n                hour = +x.value;\r\n                break;\r\n            case \"minute\":\r\n                minute = +x.value;\r\n                break;\r\n            case \"second\":\r\n                second = +x.value;\r\n                break;\r\n            case \"fractionalSecond\":\r\n                millisecond = +x.value;\r\n                break;\r\n            case \"weekday\":\r\n                switch (x.value) {\r\n                    case \"Sun\":\r\n                        weekday = 0;\r\n                        break;\r\n                    case \"Mon\":\r\n                        weekday = 1;\r\n                        break;\r\n                    case \"Tue\":\r\n                        weekday = 2;\r\n                        break;\r\n                    case \"Wed\":\r\n                        weekday = 3;\r\n                        break;\r\n                    case \"Thu\":\r\n                        weekday = 4;\r\n                        break;\r\n                    case \"Fri\":\r\n                        weekday = 5;\r\n                        break;\r\n                    case \"Sat\":\r\n                        weekday = 6;\r\n                        break;\r\n                }\r\n        }\r\n    });\r\n    if (hour === 24) {\r\n        hour = 0;\r\n    }\r\n    return { year, month, day, hour, minute, second, millisecond, weekday };\r\n}\r\nfunction toUTCDate(timezone, date) {\r\n    const { year, month, day, hour, minute, second, millisecond } = parseDate(timezone, date);\r\n    return Date.UTC(year, month, day, hour, minute, second, millisecond);\r\n}\r\nexport class Timezone {\r\n    constructor(timezone, isReal) {\r\n        Object.defineProperty(this, \"_utc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_dtf\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"name\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        this.name = timezone;\r\n        this._utc = new Intl.DateTimeFormat(\"UTC\", {\r\n            hour12: false,\r\n            timeZone: \"UTC\",\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            second: \"2-digit\",\r\n            weekday: \"short\",\r\n            fractionalSecondDigits: 3,\r\n        });\r\n        this._dtf = new Intl.DateTimeFormat(\"UTC\", {\r\n            hour12: false,\r\n            timeZone: timezone,\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            second: \"2-digit\",\r\n            weekday: \"short\",\r\n            fractionalSecondDigits: 3,\r\n        });\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   timezone  IANA timezone\r\n     * @return            Instantiated object\r\n     */\r\n    static new(timezone) {\r\n        return (new this(timezone, true));\r\n    }\r\n    convertLocal(date) {\r\n        const offset = this.offsetUTC(date);\r\n        const userOffset = date.getTimezoneOffset();\r\n        const output = new Date(date);\r\n        output.setUTCMinutes(output.getUTCMinutes() - (offset - userOffset));\r\n        const newUserOffset = output.getTimezoneOffset();\r\n        if (userOffset != newUserOffset) {\r\n            output.setUTCMinutes(output.getUTCMinutes() + newUserOffset - userOffset);\r\n        }\r\n        return output;\r\n    }\r\n    offsetUTC(date) {\r\n        const utc = toUTCDate(this._utc, date);\r\n        const dtf = toUTCDate(this._dtf, date);\r\n        return (utc - dtf) / 60000;\r\n    }\r\n    parseDate(date) {\r\n        return parseDate(this._dtf, date);\r\n    }\r\n}\r\n//# sourceMappingURL=Timezone.js.map","import { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport { Timezone } from \"./Timezone\";\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\nexport class DateFormatter extends Entity {\r\n    _setDefaults() {\r\n        // Defaults\r\n        this._setDefault(\"capitalize\", true);\r\n        this._setDefault(\"dateFormat\", \"yyyy-MM-dd\");\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    format(source, format) {\r\n        // Locale?\r\n        // TODO\r\n        // No format passed in or it's empty\r\n        if (typeof format === \"undefined\" || format === \"\") {\r\n            format = this.get(\"dateFormat\", \"yyyy-MM-dd\");\r\n        }\r\n        // Init return value\r\n        let formatted;\r\n        // Cast?\r\n        // TODO: decide if we need to cast\r\n        let date = source;\r\n        // Is it a built-in format or Intl.DateTimeFormat\r\n        if ($type.isObject(format)) {\r\n            try {\r\n                const locales = this.get(\"intlLocales\");\r\n                if (locales) {\r\n                    return new Intl.DateTimeFormat(locales, format).format(date);\r\n                }\r\n                else {\r\n                    return new Intl.DateTimeFormat(undefined, format).format(date);\r\n                }\r\n            }\r\n            catch (e) {\r\n                return \"Invalid\";\r\n            }\r\n        }\r\n        // get format info (it will also deal with parser caching)\r\n        let info = this.parseFormat(format);\r\n        // Should we apply custom time zone?\r\n        const timezone = this._root.timezone;\r\n        if (timezone && !this._root.utc) {\r\n            date = timezone.convertLocal(date);\r\n        }\r\n        // Check if it's a valid date\r\n        if (!$type.isNumber(date.getTime())) {\r\n            // TODO translation\r\n            //return this._t(\"Invalid date\");\r\n            return \"Invalid date\";\r\n        }\r\n        // Apply format\r\n        formatted = this.applyFormat(date, info);\r\n        // Capitalize\r\n        if (this.get(\"capitalize\")) {\r\n            formatted = formatted.replace(/^.{1}/, formatted.substr(0, 1).toUpperCase());\r\n        }\r\n        // We're done\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Applies format to Date.\r\n     *\r\n     * @param date      Date object\r\n     * @param info      Parsed format information\r\n     * @return Formatted date string\r\n     */\r\n    applyFormat(date, info) {\r\n        // Init return value\r\n        let res = info.template;\r\n        // Get values\r\n        let fullYear, month, weekday, day, hours, minutes, seconds, milliseconds, timestamp = date.getTime();\r\n        if (this._root.utc) {\r\n            fullYear = date.getUTCFullYear();\r\n            month = date.getUTCMonth();\r\n            weekday = date.getUTCDay();\r\n            day = date.getUTCDate();\r\n            hours = date.getUTCHours();\r\n            minutes = date.getUTCMinutes();\r\n            seconds = date.getUTCSeconds();\r\n            milliseconds = date.getUTCMilliseconds();\r\n        }\r\n        else {\r\n            fullYear = date.getFullYear();\r\n            month = date.getMonth();\r\n            weekday = date.getDay();\r\n            day = date.getDate();\r\n            hours = date.getHours();\r\n            minutes = date.getMinutes();\r\n            seconds = date.getSeconds();\r\n            milliseconds = date.getMilliseconds();\r\n        }\r\n        // Go through each part and format/replace it in template\r\n        for (let i = 0, len = info.parts.length; i < len; i++) {\r\n            let value = \"\";\r\n            switch (info.parts[i]) {\r\n                case \"G\":\r\n                    value = this._t(fullYear < 0\r\n                        ? \"_era_bc\"\r\n                        : \"_era_ad\");\r\n                    break;\r\n                case \"yyyy\":\r\n                    value = Math.abs(fullYear).toString();\r\n                    if (fullYear < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"yyy\":\r\n                case \"yy\":\r\n                case \"y\":\r\n                    value = Math.abs(fullYear).toString().substr(-info.parts[i].length);\r\n                    if (fullYear < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"YYYY\":\r\n                case \"YYY\":\r\n                case \"YY\":\r\n                case \"Y\":\r\n                    let year = $utils.getWeekYear(date, this._root.utc);\r\n                    if (info.parts[i] == \"YYYY\") {\r\n                        value = Math.abs(year).toString();\r\n                    }\r\n                    else {\r\n                        value = Math.abs(year).toString().substr(-info.parts[i].length);\r\n                    }\r\n                    if (year < 0) {\r\n                        value += this._t(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"u\":\r\n                    // @todo\r\n                    break;\r\n                case \"q\":\r\n                    value = \"\" + Math.ceil((date.getMonth() + 1) / 3);\r\n                    break;\r\n                case \"MMMMM\":\r\n                    value = this._t(this._getMonth(month)).substr(0, 1);\r\n                    break;\r\n                case \"MMMM\":\r\n                    value = this._t(this._getMonth(month));\r\n                    break;\r\n                case \"MMM\":\r\n                    value = this._t(this._getShortMonth(month));\r\n                    break;\r\n                case \"MM\":\r\n                    value = $utils.padString(month + 1, 2, \"0\");\r\n                    break;\r\n                case \"M\":\r\n                    value = (month + 1).toString();\r\n                    break;\r\n                case \"ww\":\r\n                    value = $utils.padString($utils.getWeek(date, this._root.utc), 2, \"0\");\r\n                    break;\r\n                case \"w\":\r\n                    value = $utils.getWeek(date, this._root.utc).toString();\r\n                    break;\r\n                case \"W\":\r\n                    value = $utils.getMonthWeek(date, this._root.utc).toString();\r\n                    break;\r\n                case \"dd\":\r\n                    value = $utils.padString(day, 2, \"0\");\r\n                    break;\r\n                case \"d\":\r\n                    value = day.toString();\r\n                    break;\r\n                case \"DD\":\r\n                case \"DDD\":\r\n                    value = $utils.padString($utils.getYearDay(date, this._root.utc).toString(), info.parts[i].length, \"0\");\r\n                    break;\r\n                case \"D\":\r\n                    value = $utils.getYearDay(date, this._root.utc).toString();\r\n                    break;\r\n                case \"F\":\r\n                    // @todo\r\n                    break;\r\n                case \"g\":\r\n                    // @todo\r\n                    break;\r\n                case \"t\":\r\n                    value = this._root.language.translateFunc(\"_dateOrd\").call(this, day);\r\n                    break;\r\n                case \"E\":\r\n                    value = (weekday || 7).toString();\r\n                    break;\r\n                case \"EE\":\r\n                    value = $utils.padString((weekday || 7).toString(), 2, \"0\");\r\n                    break;\r\n                case \"EEE\":\r\n                case \"eee\":\r\n                    value = this._t(this._getShortWeekday(weekday));\r\n                    break;\r\n                case \"EEEE\":\r\n                case \"eeee\":\r\n                    value = this._t(this._getWeekday(weekday));\r\n                    break;\r\n                case \"EEEEE\":\r\n                case \"eeeee\":\r\n                    value = this._t(this._getShortWeekday(weekday)).substr(0, 1);\r\n                    break;\r\n                case \"e\":\r\n                case \"ee\":\r\n                    value = (weekday - (this._root.locale.firstDayOfWeek || 1) + 1).toString();\r\n                    if (info.parts[i] == \"ee\") {\r\n                        value = $utils.padString(value, 2, \"0\");\r\n                    }\r\n                    break;\r\n                case \"a\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"PM\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"AM\");\r\n                    }\r\n                    break;\r\n                case \"aa\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"P.M.\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"A.M.\");\r\n                    }\r\n                    break;\r\n                case \"aaa\":\r\n                    if (hours >= 12) {\r\n                        value = this._t(\"P\");\r\n                    }\r\n                    else {\r\n                        value = this._t(\"A\");\r\n                    }\r\n                    break;\r\n                case \"h\":\r\n                    value = $utils.get12Hours(hours).toString();\r\n                    break;\r\n                case \"hh\":\r\n                    value = $utils.padString($utils.get12Hours(hours), 2, \"0\");\r\n                    break;\r\n                case \"H\":\r\n                    value = hours.toString();\r\n                    break;\r\n                case \"HH\":\r\n                    value = $utils.padString(hours, 2, \"0\");\r\n                    break;\r\n                case \"K\":\r\n                    value = $utils.get12Hours(hours, 0).toString();\r\n                    break;\r\n                case \"KK\":\r\n                    value = $utils.padString($utils.get12Hours(hours, 0), 2, \"0\");\r\n                    break;\r\n                case \"k\":\r\n                    value = (hours + 1).toString();\r\n                    break;\r\n                case \"kk\":\r\n                    value = $utils.padString(hours + 1, 2, \"0\");\r\n                    break;\r\n                case \"m\":\r\n                    value = minutes.toString();\r\n                    break;\r\n                case \"mm\":\r\n                    value = $utils.padString(minutes, 2, \"0\");\r\n                    break;\r\n                case \"s\":\r\n                    value = seconds.toString();\r\n                    break;\r\n                case \"ss\":\r\n                    value = $utils.padString(seconds, 2, \"0\");\r\n                    break;\r\n                case \"S\":\r\n                case \"SS\":\r\n                case \"SSS\":\r\n                    value = Math.round((milliseconds / 1000) * Math.pow(10, info.parts[i].length)).toString();\r\n                    break;\r\n                case \"x\":\r\n                    value = timestamp.toString();\r\n                    break;\r\n                case \"n\":\r\n                case \"nn\":\r\n                case \"nnn\":\r\n                    value = $utils.padString(milliseconds, info.parts[i].length, \"0\");\r\n                    break;\r\n                case \"z\":\r\n                    value = $utils.getTimeZone(date, false, false, this._root.utc);\r\n                    break;\r\n                case \"zz\":\r\n                    value = $utils.getTimeZone(date, true, false, this._root.utc);\r\n                    break;\r\n                case \"zzz\":\r\n                    value = $utils.getTimeZone(date, false, true, this._root.utc);\r\n                    break;\r\n                case \"zzzz\":\r\n                    value = $utils.getTimeZone(date, true, true, this._root.utc);\r\n                    break;\r\n                case \"Z\":\r\n                case \"ZZ\":\r\n                    let timezone = this._root.utc ? \"UTC\" : this._root.timezone;\r\n                    if (timezone instanceof Timezone) {\r\n                        timezone = timezone.name;\r\n                    }\r\n                    const offset = timezone ? $utils.getTimezoneOffset(timezone) : date.getTimezoneOffset();\r\n                    let tz = Math.abs(offset) / 60;\r\n                    let tzh = Math.floor(tz);\r\n                    let tzm = tz * 60 - tzh * 60;\r\n                    if (this._root.utc) {\r\n                        tzh = 0;\r\n                        tzm = 0;\r\n                    }\r\n                    if (info.parts[i] == \"Z\") {\r\n                        value = \"GMT\";\r\n                        value += offset > 0 ? \"-\" : \"+\";\r\n                        value += $utils.padString(tzh, 2) + \":\" + $utils.padString(tzm, 2);\r\n                    }\r\n                    else {\r\n                        value = offset > 0 ? \"-\" : \"+\";\r\n                        value += $utils.padString(tzh, 2) + $utils.padString(tzm, 2);\r\n                    }\r\n                    break;\r\n                case \"i\":\r\n                    value = date.toISOString();\r\n                    break;\r\n                case \"I\":\r\n                    value = date.toUTCString();\r\n                    break;\r\n            }\r\n            res = res.replace($type.PLACEHOLDER, value);\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Parses format into structured infromation.\r\n     *\r\n     * @param format Format template\r\n     */\r\n    parseFormat(format) {\r\n        // Check cache\r\n        // TODO: implement caching of the parsed format\r\n        // Init format parse info holder\r\n        let info = {\r\n            \"template\": \"\",\r\n            \"parts\": []\r\n        };\r\n        // Let TextFormatter split into chunks\r\n        let chunks = TextFormatter.chunk(format, true);\r\n        for (let i = 0; i < chunks.length; i++) {\r\n            let chunk = chunks[i];\r\n            if (chunk.type === \"value\") {\r\n                // Just \"Date\"?\r\n                if (chunk.text.match(/^date$/i)) {\r\n                    let dateFormat = this.get(\"dateFormat\", \"yyyy-MM-dd\");\r\n                    if (!$type.isString(dateFormat)) {\r\n                        dateFormat = \"yyyy-MM-dd\";\r\n                    }\r\n                    chunk.text = dateFormat;\r\n                }\r\n                // Find all possible parts\r\n                let matches = chunk.text.match(/G|yyyy|yyy|yy|y|YYYY|YYY|YY|Y|u|q|MMMMM|MMMM|MMM|MM|M|ww|w|W|dd|d|DDD|DD|D|F|g|EEEEE|EEEE|EEE|EE|E|eeeee|eeee|eee|ee|e|aaa|aa|a|hh|h|HH|H|KK|K|kk|k|mm|m|ss|s|SSS|SS|S|A|zzzz|zzz|zz|z|ZZ|Z|t|x|nnn|nn|n|i|I/g);\r\n                // Found?\r\n                if (matches) {\r\n                    // Populate template\r\n                    for (let x = 0; x < matches.length; x++) {\r\n                        info.parts.push(matches[x]);\r\n                        chunk.text = chunk.text.replace(matches[x], $type.PLACEHOLDER);\r\n                    }\r\n                }\r\n            }\r\n            // Apply to template\r\n            info.template += chunk.text;\r\n        }\r\n        // Save cache\r\n        // TODO\r\n        return info;\r\n    }\r\n    _months() {\r\n        return [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    }\r\n    _getMonth(index) {\r\n        return this._months()[index];\r\n    }\r\n    _shortMonths() {\r\n        return [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May(short)\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n    }\r\n    _getShortMonth(index) {\r\n        return this._shortMonths()[index];\r\n    }\r\n    _weekdays() {\r\n        return [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    }\r\n    _getWeekday(index) {\r\n        return this._weekdays()[index];\r\n    }\r\n    _shortWeekdays() {\r\n        return [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n    }\r\n    _getShortWeekday(index) {\r\n        return this._shortWeekdays()[index];\r\n    }\r\n    parse(source, format) {\r\n        // Is it already a Date\r\n        if (source instanceof Date) {\r\n            return source;\r\n        }\r\n        // Is it a numeric timestamp\r\n        if ($type.isNumber(source)) {\r\n            return new Date(source);\r\n        }\r\n        // No? Let's check if it's string, and try converting to it if nec\r\n        if (!$type.isString(source)) {\r\n            source = source.toString();\r\n        }\r\n        // Init return value\r\n        let res;\r\n        // Init RegEx for parsing\r\n        let reg = \"\";\r\n        // Clean format\r\n        format = $utils.cleanFormat(format);\r\n        // Clip format to length of the source string\r\n        format = format.substr(0, source.length);\r\n        // Parse format\r\n        let info = this.parseFormat(format);\r\n        // Init parsed items holder\r\n        let parsedIndexes = {\r\n            \"year\": -1,\r\n            \"year3\": -1,\r\n            \"year2\": -1,\r\n            \"year1\": -1,\r\n            \"month\": -1,\r\n            \"monthShort\": -1,\r\n            \"monthLong\": -1,\r\n            \"weekdayShort\": -1,\r\n            \"weekdayLong\": -1,\r\n            \"day\": -1,\r\n            \"yearDay\": -1,\r\n            \"week\": -1,\r\n            \"hourBase0\": -1,\r\n            \"hour12Base0\": -1,\r\n            \"hourBase1\": -1,\r\n            \"hour12Base1\": -1,\r\n            \"minute\": -1,\r\n            \"second\": -1,\r\n            \"millisecond\": -1,\r\n            \"millisecondDigits\": -1,\r\n            \"am\": -1,\r\n            \"zone\": -1,\r\n            \"timestamp\": -1,\r\n            \"iso\": -1\r\n        };\r\n        // Init values\r\n        let resValues = {\r\n            \"year\": 1970,\r\n            \"month\": 0,\r\n            \"day\": 1,\r\n            \"hour\": 0,\r\n            \"minute\": 0,\r\n            \"second\": 0,\r\n            \"millisecond\": 0,\r\n            \"timestamp\": null,\r\n            \"offset\": 0,\r\n            \"utc\": this._root.utc\r\n        };\r\n        // Index adjuster\r\n        let indexAdjust = 0;\r\n        let index = 0;\r\n        // Iterate through all of the parts\r\n        for (let i = 0; i < info.parts.length; i++) {\r\n            // Set current match index\r\n            index = i + indexAdjust + 1;\r\n            switch (info.parts[i]) {\r\n                case \"yyyy\":\r\n                case \"YYYY\":\r\n                    reg += \"([0-9]{4})\";\r\n                    parsedIndexes.year = index;\r\n                    break;\r\n                case \"yyy\":\r\n                case \"YYY\":\r\n                    reg += \"([0-9]{3})\";\r\n                    parsedIndexes.year3 = index;\r\n                    break;\r\n                case \"yy\":\r\n                case \"YY\":\r\n                    reg += \"([0-9]{2})\";\r\n                    parsedIndexes.year2 = index;\r\n                    break;\r\n                case \"y\":\r\n                case \"Y\":\r\n                    reg += \"([0-9]{1})\";\r\n                    parsedIndexes.year1 = index;\r\n                    break;\r\n                case \"MMMM\":\r\n                    reg += \"(\" + this.getStringList(this._months()).join(\"|\") + \")\";\r\n                    parsedIndexes.monthLong = index;\r\n                    break;\r\n                case \"MMM\":\r\n                    reg += \"(\" + this.getStringList(this._shortMonths()).join(\"|\") + \")\";\r\n                    parsedIndexes.monthShort = index;\r\n                    break;\r\n                case \"MM\":\r\n                case \"M\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.month = index;\r\n                    break;\r\n                case \"ww\":\r\n                case \"w\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.week = index;\r\n                    break;\r\n                case \"dd\":\r\n                case \"d\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.day = index;\r\n                    break;\r\n                case \"DDD\":\r\n                case \"DD\":\r\n                case \"D\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.yearDay = index;\r\n                    break;\r\n                case \"dddd\":\r\n                    reg += \"(\" + this.getStringList(this._weekdays()).join(\"|\") + \")\";\r\n                    parsedIndexes.weekdayLong = index;\r\n                    break;\r\n                case \"ddd\":\r\n                    reg += \"(\" + this.getStringList(this._shortWeekdays()).join(\"|\") + \")\";\r\n                    parsedIndexes.weekdayShort = index;\r\n                    break;\r\n                case \"aaa\":\r\n                case \"aa\":\r\n                case \"a\":\r\n                    // TODO: fix (escape regex)\r\n                    reg += \"(\" + this.getStringList([\"AM\", \"PM\", \"A\\.M\\.\", \"P\\.M\\.\", \"A\", \"P\"]).join(\"|\") + \")\";\r\n                    parsedIndexes.am = index;\r\n                    break;\r\n                case \"hh\":\r\n                case \"h\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hour12Base1 = index;\r\n                    break;\r\n                case \"HH\":\r\n                case \"H\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hourBase0 = index;\r\n                    break;\r\n                case \"KK\":\r\n                case \"K\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hour12Base0 = index;\r\n                    break;\r\n                case \"kk\":\r\n                case \"k\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hourBase1 = index;\r\n                    break;\r\n                case \"mm\":\r\n                case \"m\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.minute = index;\r\n                    break;\r\n                case \"ss\":\r\n                case \"s\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.second = index;\r\n                    break;\r\n                case \"SSS\":\r\n                case \"SS\":\r\n                case \"S\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.millisecond = index;\r\n                    parsedIndexes.millisecondDigits = info.parts[i].length;\r\n                    break;\r\n                case \"nnn\":\r\n                case \"nn\":\r\n                case \"n\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.millisecond = index;\r\n                    break;\r\n                case \"x\":\r\n                    reg += \"([0-9]{1,})\";\r\n                    parsedIndexes.timestamp = index;\r\n                    break;\r\n                case \"Z\":\r\n                    reg += \"GMT([-+]+[0-9]{2}:[0-9]{2})\";\r\n                    parsedIndexes.zone = index;\r\n                    break;\r\n                case \"ZZ\":\r\n                    reg += \"([\\\\-+]+[0-9]{2}[0-9]{2})\";\r\n                    parsedIndexes.zone = index;\r\n                    break;\r\n                case \"i\":\r\n                    reg += \"([0-9]{4})-?([0-9]{2})-?([0-9]{2})T?([0-9]{2}):?([0-9]{2}):?([0-9]{2})\\\\.?([0-9]{0,3})([zZ]|[+\\\\-][0-9]{2}:?[0-9]{2}|$)\";\r\n                    parsedIndexes.iso = index;\r\n                    indexAdjust += 7;\r\n                    break;\r\n                case \"G\":\r\n                case \"YYYY\":\r\n                case \"YYY\":\r\n                case \"YY\":\r\n                case \"Y\":\r\n                case \"MMMMM\":\r\n                case \"W\":\r\n                case \"EEEEE\":\r\n                case \"EEEE\":\r\n                case \"EEE\":\r\n                case \"EE\":\r\n                case \"E\":\r\n                case \"eeeee\":\r\n                case \"eeee\":\r\n                case \"eee\":\r\n                case \"ee\":\r\n                case \"e\":\r\n                case \"zzzz\":\r\n                case \"zzz\":\r\n                case \"zz\":\r\n                case \"z\":\r\n                case \"t\":\r\n                    // Ignore\r\n                    indexAdjust--;\r\n                    break;\r\n            }\r\n            reg += \"[^0-9]*\";\r\n        }\r\n        // Try matching\r\n        let regex = new RegExp(reg);\r\n        let matches = source.match(regex);\r\n        if (matches) {\r\n            // Populate the date object\r\n            // Full year\r\n            if (parsedIndexes.year > -1) {\r\n                resValues.year = parseInt(matches[parsedIndexes.year]);\r\n            }\r\n            // 3-digit year\r\n            if (parsedIndexes.year3 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year3]);\r\n                val += 1000;\r\n                resValues.year = val;\r\n            }\r\n            // 2-digit year\r\n            if (parsedIndexes.year2 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year2]);\r\n                if (val > 50) {\r\n                    val += 1000;\r\n                }\r\n                else {\r\n                    val += 2000;\r\n                }\r\n                resValues.year = val;\r\n            }\r\n            // 1-digit year\r\n            if (parsedIndexes.year1 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.year1]);\r\n                val = Math.floor((new Date().getFullYear()) / 10) * 10 + val;\r\n                resValues.year = val;\r\n            }\r\n            // Full month\r\n            if (parsedIndexes.monthLong > -1) {\r\n                resValues.month = this.resolveMonth(matches[parsedIndexes.monthLong]);\r\n            }\r\n            // Short month\r\n            if (parsedIndexes.monthShort > -1) {\r\n                resValues.month = this.resolveShortMonth(matches[parsedIndexes.monthShort]);\r\n            }\r\n            // Numeric month\r\n            if (parsedIndexes.month > -1) {\r\n                resValues.month = parseInt(matches[parsedIndexes.month]) - 1;\r\n            }\r\n            // Weekday\r\n            // @todo\r\n            // Week\r\n            if ((parsedIndexes.week > -1) && (parsedIndexes.day === -1)) {\r\n                // We parse weeks ONLY if day is not explicitly set\r\n                // TODO: this needs work\r\n                // (but maybe later - I can hardly imagine anyone passing their dates in weeks)\r\n                resValues.month = 0;\r\n                resValues.day = $utils.getDayFromWeek(parseInt(matches[parsedIndexes.week]), resValues.year, 1, this._root.utc);\r\n            }\r\n            // Day\r\n            if (parsedIndexes.day > -1) {\r\n                resValues.day = parseInt(matches[parsedIndexes.day]);\r\n            }\r\n            // Year day\r\n            if (parsedIndexes.yearDay > -1) {\r\n                resValues.month = 0;\r\n                resValues.day = parseInt(matches[parsedIndexes.yearDay]);\r\n            }\r\n            // 24 Hour (0-23)\r\n            if (parsedIndexes.hourBase0 > -1) {\r\n                resValues.hour = parseInt(matches[parsedIndexes.hourBase0]);\r\n            }\r\n            // 24 Hour (1-24)\r\n            if (parsedIndexes.hourBase1 > -1) {\r\n                resValues.hour = parseInt(matches[parsedIndexes.hourBase1]) - 1;\r\n            }\r\n            // 12 Hour (0-11)\r\n            if (parsedIndexes.hour12Base0 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.hour12Base0]);\r\n                if (val == 11) {\r\n                    val = 0;\r\n                }\r\n                if ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\r\n                    val += 12;\r\n                }\r\n                resValues.hour = val;\r\n            }\r\n            // 12 Hour (1-12)\r\n            if (parsedIndexes.hour12Base1 > -1) {\r\n                let val = parseInt(matches[parsedIndexes.hour12Base1]);\r\n                if (val == 12) {\r\n                    val = 0;\r\n                }\r\n                if ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\r\n                    val += 12;\r\n                }\r\n                resValues.hour = val;\r\n            }\r\n            // Minute\r\n            if (parsedIndexes.minute > -1) {\r\n                resValues.minute = parseInt(matches[parsedIndexes.minute]);\r\n            }\r\n            // Second\r\n            if (parsedIndexes.second > -1) {\r\n                resValues.second = parseInt(matches[parsedIndexes.second]);\r\n            }\r\n            // Millisecond\r\n            if (parsedIndexes.millisecond > -1) {\r\n                let val = parseInt(matches[parsedIndexes.millisecond]);\r\n                if (parsedIndexes.millisecondDigits == 2) {\r\n                    val *= 10;\r\n                }\r\n                else if (parsedIndexes.millisecondDigits == 1) {\r\n                    val *= 100;\r\n                }\r\n                resValues.millisecond = val;\r\n            }\r\n            // Timestamp\r\n            if (parsedIndexes.timestamp > -1) {\r\n                resValues.timestamp = parseInt(matches[parsedIndexes.timestamp]);\r\n                const ts = new Date(resValues.timestamp);\r\n                resValues.year = ts.getUTCFullYear();\r\n                resValues.month = ts.getUTCMonth();\r\n                resValues.day = ts.getUTCDate();\r\n                resValues.hour = ts.getUTCHours();\r\n                resValues.minute = ts.getUTCMinutes();\r\n                resValues.second = ts.getUTCSeconds();\r\n                resValues.millisecond = ts.getUTCMilliseconds();\r\n            }\r\n            // Adjust time zone\r\n            if (parsedIndexes.zone > -1) {\r\n                resValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.zone]);\r\n            }\r\n            // ISO\r\n            if (parsedIndexes.iso > -1) {\r\n                resValues.year = $type.toNumber(matches[parsedIndexes.iso + 0]);\r\n                resValues.month = $type.toNumber(matches[parsedIndexes.iso + 1]) - 1;\r\n                resValues.day = $type.toNumber(matches[parsedIndexes.iso + 2]);\r\n                resValues.hour = $type.toNumber(matches[parsedIndexes.iso + 3]);\r\n                resValues.minute = $type.toNumber(matches[parsedIndexes.iso + 4]);\r\n                resValues.second = $type.toNumber(matches[parsedIndexes.iso + 5]);\r\n                resValues.millisecond = $type.toNumber(matches[parsedIndexes.iso + 6]);\r\n                if (matches[parsedIndexes.iso + 7] == \"Z\" || matches[parsedIndexes.iso + 7] == \"z\") {\r\n                    resValues.utc = true;\r\n                }\r\n                else if (matches[parsedIndexes.iso + 7] != \"\") {\r\n                    resValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.iso + 7]);\r\n                }\r\n            }\r\n            // Create Date object\r\n            if (resValues.utc) {\r\n                res = new Date(Date.UTC(resValues.year, resValues.month, resValues.day, resValues.hour, resValues.minute, resValues.second, resValues.millisecond));\r\n            }\r\n            else {\r\n                res = new Date(resValues.year, resValues.month, resValues.day, resValues.hour, resValues.minute + resValues.offset, resValues.second, resValues.millisecond);\r\n            }\r\n        }\r\n        else {\r\n            // Didn't match anything\r\n            // Let's try dropping it into Date constructor and hope for the best\r\n            res = new Date(source);\r\n        }\r\n        return res;\r\n    }\r\n    resolveTimezoneOffset(date, zone) {\r\n        let value = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/);\r\n        if (value) {\r\n            let match = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/);\r\n            let dir = match[1];\r\n            let hour = match[2];\r\n            let minute = match[3];\r\n            let offset = parseInt(hour) * 60 + parseInt(minute);\r\n            // Adjust offset\r\n            // Making it negative does not seem to make sense, but it's right\r\n            // because of how JavaScript calculates GMT offsets\r\n            if (dir == \"+\") {\r\n                offset *= -1;\r\n            }\r\n            // Check the difference in offset\r\n            let originalOffset = (date || new Date()).getTimezoneOffset();\r\n            let diff = offset - originalOffset;\r\n            return diff;\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Resolves month name (i.e. \"December\") into a month number (11).\r\n     *\r\n     * @param value  Month name\r\n     * @return Month number\r\n     */\r\n    resolveMonth(value) {\r\n        // Let's try English first\r\n        let month = this._months().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Try the translation\r\n        if (!this._root.language.isDefault()) {\r\n            month = this._root.language.translateAll(this._months()).indexOf(value);\r\n            if (month > -1) {\r\n                return month;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Resolves short month name (i.e. \"Dec\") into a month number.\r\n     *\r\n     * @param value  Short month name\r\n     * @return Month number\r\n     */\r\n    resolveShortMonth(value) {\r\n        // Let's try English first\r\n        let month = this._shortMonths().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Maybe long month (workaround for May)\r\n        month = this._months().indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Try the translation\r\n        if (this._root.language && !this._root.language.isDefault()) {\r\n            month = this._root.language.translateAll(this._shortMonths()).indexOf(value);\r\n            if (month > -1) {\r\n                return month;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * Checks if passed in string represents AM/PM notation in many of its\r\n     * versions.\r\n     *\r\n     * @param value  Source string\r\n     * @return Is it AM/PM?\r\n     */\r\n    isAm(value) {\r\n        let list = this.getStringList([\"AM\", \"A.M.\", \"A\"]);\r\n        return list.indexOf(value.toUpperCase()) > -1;\r\n    }\r\n    /**\r\n     * Translates list of strings.\r\n     *\r\n     * @param list  Source strings\r\n     * @return Translated strings\r\n     */\r\n    getStringList(list) {\r\n        let res = [];\r\n        for (let i = 0; i < list.length; i++) {\r\n            // translate?\r\n            if (this._root.language) {\r\n                res.push($utils.escapeForRgex(this._t(list[i])));\r\n            }\r\n            else {\r\n                res.push($utils.escapeForRgex(list[i]));\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n}\r\n//# sourceMappingURL=DateFormatter.js.map","import { Entity } from \"./Entity\";\r\nimport { TextFormatter } from \"./TextFormatter\";\r\nimport * as $object from \"./Object\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * A class used to format numberic values as time duration.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/} for more info\r\n */\r\nexport class DurationFormatter extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * Collection of aliases for units.\r\n         */\r\n        Object.defineProperty(this, \"_unitAliases\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {\r\n                \"Y\": \"y\",\r\n                \"D\": \"d\",\r\n                \"H\": \"h\",\r\n                \"K\": \"h\",\r\n                \"k\": \"h\",\r\n                \"n\": \"S\"\r\n            }\r\n        });\r\n    }\r\n    _setDefaults() {\r\n        const dmillisecond = \"_duration_millisecond\";\r\n        const dsecond = \"_duration_second\";\r\n        const dminute = \"_duration_minute\";\r\n        const dhour = \"_duration_hour\";\r\n        const dday = \"_duration_day\";\r\n        const dweek = \"_duration_week\";\r\n        const dmonth = \"_duration_month\";\r\n        const dyear = \"_duration_year\";\r\n        const asecond = \"_second\";\r\n        const aminute = \"_minute\";\r\n        const ahour = \"_hour\";\r\n        const aday = \"_day\";\r\n        const aweek = \"_week\";\r\n        const amonth = \"_week\";\r\n        const ayear = \"_year\";\r\n        // Defaults\r\n        this._setDefault(\"negativeBase\", 0);\r\n        this._setDefault(\"baseUnit\", \"second\");\r\n        this._setDefault(\"durationFormats\", {\r\n            \"millisecond\": {\r\n                \"millisecond\": this._t(dmillisecond),\r\n                \"second\": this._t((dmillisecond + asecond)),\r\n                \"minute\": this._t((dmillisecond + aminute)),\r\n                \"hour\": this._t((dmillisecond + ahour)),\r\n                \"day\": this._t((dmillisecond + aday)),\r\n                \"week\": this._t((dmillisecond + aweek)),\r\n                \"month\": this._t((dmillisecond + amonth)),\r\n                \"year\": this._t((dmillisecond + ayear))\r\n            },\r\n            \"second\": {\r\n                \"second\": this._t((dsecond)),\r\n                \"minute\": this._t((dsecond + aminute)),\r\n                \"hour\": this._t((dsecond + ahour)),\r\n                \"day\": this._t((dsecond + aday)),\r\n                \"week\": this._t((dsecond + aweek)),\r\n                \"month\": this._t((dsecond + amonth)),\r\n                \"year\": this._t((dsecond + ayear))\r\n            },\r\n            \"minute\": {\r\n                \"minute\": this._t((dminute)),\r\n                \"hour\": this._t((dminute + ahour)),\r\n                \"day\": this._t((dminute + aday)),\r\n                \"week\": this._t((dminute + aweek)),\r\n                \"month\": this._t((dminute + amonth)),\r\n                \"year\": this._t((dminute + ayear))\r\n            },\r\n            \"hour\": {\r\n                \"hour\": this._t((dhour)),\r\n                \"day\": this._t((dhour + aday)),\r\n                \"week\": this._t((dhour + aweek)),\r\n                \"month\": this._t((dhour + amonth)),\r\n                \"year\": this._t((dhour + ayear))\r\n            },\r\n            \"day\": {\r\n                \"day\": this._t((dday)),\r\n                \"week\": this._t((dday + aweek)),\r\n                \"month\": this._t((dday + amonth)),\r\n                \"year\": this._t((dday + ayear))\r\n            },\r\n            \"week\": {\r\n                \"week\": this._t((dweek)),\r\n                \"month\": this._t((dweek + amonth)),\r\n                \"year\": this._t((dweek + ayear))\r\n            },\r\n            \"month\": {\r\n                \"month\": this._t((dmonth)),\r\n                \"year\": this._t((dmonth + ayear))\r\n            },\r\n            \"year\": {\r\n                \"year\": this._t(dyear)\r\n            }\r\n        });\r\n        super._setDefaults();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n    }\r\n    /**\r\n     * Formats the number as duration.\r\n     *\r\n     * For example `1000` (base unit seconds) would be converted to `16:40` as in\r\n     * 16 minutes and 40 seconds.\r\n     *\r\n     * @param value   Value to format\r\n     * @param format  Format to apply\r\n     * @param base    Override base unit\r\n     * @return Formatted number\r\n     */\r\n    format(value, format, base) {\r\n        // no base unit?\r\n        let baseUnit = base || this.get(\"baseUnit\");\r\n        // no format passed in or empty\r\n        if (typeof format === \"undefined\" || format === \"\") {\r\n            if (this.get(\"durationFormat\") != null) {\r\n                format = this.get(\"durationFormat\");\r\n            }\r\n            else {\r\n                format = this.getFormat($type.toNumber(value), undefined, baseUnit);\r\n            }\r\n        }\r\n        // Clean format\r\n        format = $utils.cleanFormat(format);\r\n        // get format info (it will also deal with parser caching)\r\n        let info = this.parseFormat(format, baseUnit);\r\n        // cast to number just in case\r\n        // TODO: maybe use better casting\r\n        let source = Number(value);\r\n        // format and replace the number\r\n        let details;\r\n        if (source > this.get(\"negativeBase\")) {\r\n            details = info.positive;\r\n        }\r\n        else if (source < this.get(\"negativeBase\")) {\r\n            details = info.negative;\r\n        }\r\n        else {\r\n            details = info.zero;\r\n        }\r\n        // Format\r\n        let formatted = this.applyFormat(source, details);\r\n        // Apply color?\r\n        if (details.color !== \"\") {\r\n            formatted = \"[\" + details.color + \"]\" + formatted + \"[/]\";\r\n        }\r\n        return formatted;\r\n    }\r\n    /**\r\n     * Parses supplied format into structured object which can be used to format\r\n     * the number.\r\n     *\r\n     * @param format  Format string, i.e. \"#,###.00\"\r\n     * @param base    Override base unit\r\n     * @return Parsed information\r\n     */\r\n    parseFormat(format, base) {\r\n        // Check cache\r\n        // TODO\r\n        // let cached = this.getCache(format);\r\n        // if (cached != null) {\r\n        // \treturn cached;\r\n        // }\r\n        // no base unit?\r\n        let baseUnit = base || this.get(\"baseUnit\");\r\n        // Initialize duration parsing info\r\n        let info = {\r\n            \"positive\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            },\r\n            \"negative\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            },\r\n            \"zero\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            }\r\n        };\r\n        // Escape double vertical bars (that mean display one vertical bar)\r\n        format = format.replace(\"||\", $type.PLACEHOLDER2);\r\n        // Split it up and deal with different formats\r\n        let parts = format.split(\"|\");\r\n        info.positive.source = parts[0];\r\n        if (typeof parts[2] === \"undefined\") {\r\n            info.zero = info.positive;\r\n        }\r\n        else {\r\n            info.zero.source = parts[2];\r\n        }\r\n        if (typeof parts[1] === \"undefined\") {\r\n            info.negative = info.positive;\r\n        }\r\n        else {\r\n            info.negative.source = parts[1];\r\n        }\r\n        // Parse each\r\n        $object.each(info, (_part, item) => {\r\n            // Already parsed\r\n            if (item.parsed) {\r\n                return;\r\n            }\r\n            // Check cached\r\n            // TODO\r\n            // if (typeof this.getCache(item.source) !== \"undefined\") {\r\n            // \tinfo[part] = this.getCache(item.source);\r\n            // \treturn;\r\n            // }\r\n            // Begin parsing\r\n            let partFormat = item.source;\r\n            // Check for [] directives\r\n            let dirs = [];\r\n            dirs = item.source.match(/^\\[([^\\]]*)\\]/);\r\n            if (dirs && dirs.length && dirs[0] !== \"\") {\r\n                partFormat = item.source.substr(dirs[0].length);\r\n                item.color = dirs[1];\r\n            }\r\n            // Let TextFormatter split into chunks\r\n            let chunks = TextFormatter.chunk(partFormat, true);\r\n            for (let i = 0; i < chunks.length; i++) {\r\n                let chunk = chunks[i];\r\n                // replace back double vertical bar\r\n                chunk.text = chunk.text.replace($type.PLACEHOLDER2, \"|\");\r\n                if (chunk.type === \"value\") {\r\n                    // Just \"Duration\"?\r\n                    // if (chunk.text.toLowerCase() === \"duration\") {\r\n                    // \tchunk.text = durationFormat;\r\n                    // }\r\n                    // Check for \"a\" (absolute) modifier\r\n                    if (chunk.text.match(/[yYMdDwhHKkmsSn]+a/)) {\r\n                        item.absolute = true;\r\n                        chunk.text = chunk.text.replace(/([yYMdDwhHKkmsSn]+)a/, \"$1\");\r\n                    }\r\n                    // Find all possible parts\r\n                    let matches = chunk.text.match(/y+|Y+|M+|d+|D+|w+|h+|H+|K+|k+|m+|s+|S+|n+/g);\r\n                    if (matches) {\r\n                        // Populate template\r\n                        for (let x = 0; x < matches.length; x++) {\r\n                            // Is it an alias?\r\n                            if (matches[x] == null) {\r\n                                matches[x] = this._unitAliases[matches[x]];\r\n                            }\r\n                            item.parts.push(matches[x]);\r\n                            chunk.text = chunk.text.replace(matches[x], $type.PLACEHOLDER);\r\n                        }\r\n                    }\r\n                }\r\n                // Apply to template\r\n                item.template += chunk.text;\r\n            }\r\n            // Apply style formatting\r\n            //item.template = TextFormatter.format(item.template, this.outputFormat);\r\n            // Save cache\r\n            // TODO\r\n            //this.setCache(item.source, item);\r\n            // Mark this as parsed\r\n            item.parsed = true;\r\n        });\r\n        // Save cache (the whole thing)\r\n        // TODO\r\n        //this.setCache(format, info);\r\n        return info;\r\n    }\r\n    /**\r\n     * Applies parsed format to a numeric value.\r\n     *\r\n     * @param value    Value\r\n     * @param details  Parsed format as returned by {parseFormat}\r\n     * @return Formatted duration\r\n     */\r\n    applyFormat(value, details) {\r\n        // Use absolute values\r\n        let negative = !details.absolute && (value < this.get(\"negativeBase\"));\r\n        value = Math.abs(value);\r\n        // Recalculate to milliseconds\r\n        let tstamp = this.toTimeStamp(value, details.baseUnit);\r\n        // Init return value\r\n        let res = details.template;\r\n        // Iterate through duration parts\r\n        for (let i = 0, len = details.parts.length; i < len; i++) {\r\n            // Gather the part\r\n            let part = details.parts[i];\r\n            let unit = this._toTimeUnit(part.substr(0, 1));\r\n            let digits = part.length;\r\n            // Calculate current unit value\r\n            let ints = Math.floor(tstamp / this._getUnitValue(unit));\r\n            res = res.replace($type.PLACEHOLDER, $utils.padString(ints, digits, \"0\"));\r\n            // Reduce timestamp\r\n            tstamp -= ints * this._getUnitValue(unit);\r\n        }\r\n        // Reapply negative sign\r\n        if (negative) {\r\n            res = \"-\" + res;\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Converts numeric value to timestamp in milliseconds.\r\n     *\r\n     * @param value     A source value\r\n     * @param baseUnit  Base unit the source value is in: \"q\", \"s\", \"i\", \"h\", \"d\", \"w\", \"m\", \"y\"\r\n     * @return Value representation as a timestamp in milliseconds\r\n     */\r\n    toTimeStamp(value, baseUnit) {\r\n        return value * this._getUnitValue(baseUnit);\r\n    }\r\n    _toTimeUnit(code) {\r\n        switch (code) {\r\n            case \"S\":\r\n                return \"millisecond\";\r\n            case \"s\":\r\n                return \"second\";\r\n            case \"m\":\r\n                return \"minute\";\r\n            case \"h\":\r\n                return \"hour\";\r\n            case \"d\":\r\n                return \"day\";\r\n            case \"w\":\r\n                return \"week\";\r\n            case \"M\":\r\n                return \"month\";\r\n            case \"y\":\r\n                return \"year\";\r\n        }\r\n        ;\r\n    }\r\n    /**\r\n     * Returns appropriate default format for the value.\r\n     *\r\n     * If `maxValue` is sepcified, it will use that value to determine the time\r\n     * unit for the format.\r\n     *\r\n     * For example if your `baseUnit` is `\"second\"` and you pass in `10`, you\r\n     * will get `\"10\"`.\r\n     *\r\n     * However, you might want it to be formatted in the context of bigger scale,\r\n     * say 10 minutes (600 seconds). If you pass in `600` as `maxValue`, all\r\n     * values, including small ones will use format with minutes, e.g.:\r\n     * `00:10`, `00:50`, `12: 30`, etc.\r\n     *\r\n     * @param value     Value to format\r\n     * @param maxValue  Maximum value to be used to determine format\r\n     * @param baseUnit  Base unit of the value\r\n     * @return Format\r\n     */\r\n    getFormat(value, maxValue, baseUnit) {\r\n        // Is format override set?\r\n        if (this.get(\"durationFormat\") != null) {\r\n            return this.get(\"durationFormat\");\r\n        }\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        if (maxValue != null && value != maxValue) {\r\n            value = Math.abs(value);\r\n            maxValue = Math.abs(maxValue);\r\n            let maxUnit = this.getValueUnit(Math.max(value, maxValue), baseUnit);\r\n            //let diffUnit = this.getValueUnit(Math.abs(maxValue - value), baseUnit);\r\n            //console.log(maxUnit, diffUnit);\r\n            return this.get(\"durationFormats\")[baseUnit][maxUnit];\r\n        }\r\n        else {\r\n            let unit = this.getValueUnit(value, baseUnit);\r\n            return this.get(\"durationFormats\")[baseUnit][unit];\r\n        }\r\n    }\r\n    /**\r\n     * Returns value's closest denominator time unit, e.g 100 seconds is\r\n     * `\"minute\"`, while 59 seconds would still be `second`.\r\n     *\r\n     * @param value     Source duration value\r\n     * @param baseUnit  Base unit\r\n     * @return Denominator\r\n     */\r\n    getValueUnit(value, baseUnit) {\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        // Convert to milliseconds\r\n        let currentUnit;\r\n        let ms = this.getMilliseconds(value, baseUnit);\r\n        $object.eachContinue(this._getUnitValues(), (key, val) => {\r\n            if (key == baseUnit || currentUnit) {\r\n                let num = ms / val;\r\n                if (num <= 1) {\r\n                    if (!currentUnit) {\r\n                        currentUnit = key;\r\n                    }\r\n                    return false;\r\n                }\r\n                currentUnit = key;\r\n            }\r\n            return true;\r\n        });\r\n        return currentUnit;\r\n    }\r\n    /**\r\n     * Converts value to milliseconds according to `baseUnit`.\r\n     *\r\n     * @param value     Source duration value\r\n     * @param baseUnit  Base unit\r\n     * @return Value in milliseconds\r\n     */\r\n    getMilliseconds(value, baseUnit) {\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.get(\"baseUnit\");\r\n        }\r\n        return value * this._getUnitValue(baseUnit);\r\n    }\r\n    _getUnitValue(timeUnit) {\r\n        return this._getUnitValues()[timeUnit];\r\n    }\r\n    _getUnitValues() {\r\n        return {\r\n            \"millisecond\": 1,\r\n            \"second\": 1000,\r\n            \"minute\": 60000,\r\n            \"hour\": 3600000,\r\n            \"day\": 86400000,\r\n            \"week\": 604800000,\r\n            \"month\": 2592000000,\r\n            \"year\": 31536000000,\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=DurationFormatter.js.map","/**\r\n * amCharts 5 locale\r\n *\r\n * Locale: en\r\n * Language: International English\r\n * Author: Martynas Majeris\r\n *\r\n * Follow instructions in [on this page](https://www.amcharts.com/docs/v5/tutorials/creating-translations/) to make corrections or add new translations.\r\n *\r\n * ---\r\n * Edit but leave the header section above this line. You can remove any\r\n * subsequent comment sections.\r\n * ---\r\n *\r\n * Use this file as a template to create translations. Leave the key part in\r\n * English intact. Fill the value with a translation.\r\n *\r\n * Empty string means no translation, so default \"International English\"\r\n * will be used.\r\n *\r\n * If you need the translation to literally be an empty string, use `null`\r\n * instead.\r\n *\r\n * IMPORTANT:\r\n * When translating make good effort to keep the translation length\r\n * at least the same chartcount as the English, especially for short prompts.\r\n *\r\n * Having significantly longer prompts may distort the actual charts.\r\n *\r\n * NOTE:\r\n * Some prompts - like months or weekdays - come in two versions: full and\r\n * shortened.\r\n *\r\n * If there's no official shortened version of these in your language, and it\r\n * would not be possible to invent such short versions that don't seem weird\r\n * to native speakers of that language, fill those with the same as full\r\n * version.\r\n *\r\n * PLACEHOLDERS:\r\n * Some prompts have placeholders like \"%1\". Those will be replaced by actual\r\n * values during translation and should be retained in the translated prompts.\r\n *\r\n * Placeholder positions may be changed to better suit structure of the\r\n * sentence.\r\n *\r\n * For example \"From %1 to %2\", when actually used will replace \"%1\" with an\r\n * actual value representing range start, and \"%2\" will be replaced by end\r\n * value.\r\n *\r\n * E.g. in a Scrollbar for Value axis \"From %1 to %2\" will become\r\n * \"From 100 to 200\". You may translate \"From\" and \"to\", as well as re-arrange\r\n * the order of the prompt itself, but make sure the \"%1\" and \"%2\" remain, in\r\n * places where they will make sense.\r\n *\r\n * Save the file as language_LOCALE, i.e. `en_GB.ts`, `fr_FR.ts`, etc.\r\n */\r\nexport default {\r\n    \"firstDayOfWeek\": 1,\r\n    // Number formatting options.\r\n    // \r\n    // Please check with the local standards which separator is accepted to be\r\n    // used for separating decimals, and which for thousands.\r\n    \"_decimalSeparator\": \".\",\r\n    \"_thousandSeparator\": \",\",\r\n    // Position of the percent sign in numbers\r\n    \"_percentPrefix\": null,\r\n    \"_percentSuffix\": \"%\",\r\n    // Suffixes for numbers\r\n    // When formatting numbers, big or small numers might be reformatted to\r\n    // shorter version, by applying a suffix.\r\n    // \r\n    // For example, 1000000 might become \"1m\".\r\n    // Or 1024 might become \"1KB\" if we're formatting byte numbers.\r\n    // \r\n    // This section defines such suffixes for all such cases.\r\n    \"_big_number_suffix_3\": \"k\",\r\n    \"_big_number_suffix_6\": \"M\",\r\n    \"_big_number_suffix_9\": \"G\",\r\n    \"_big_number_suffix_12\": \"T\",\r\n    \"_big_number_suffix_15\": \"P\",\r\n    \"_big_number_suffix_18\": \"E\",\r\n    \"_big_number_suffix_21\": \"Z\",\r\n    \"_big_number_suffix_24\": \"Y\",\r\n    \"_small_number_suffix_3\": \"m\",\r\n    \"_small_number_suffix_6\": \"μ\",\r\n    \"_small_number_suffix_9\": \"n\",\r\n    \"_small_number_suffix_12\": \"p\",\r\n    \"_small_number_suffix_15\": \"f\",\r\n    \"_small_number_suffix_18\": \"a\",\r\n    \"_small_number_suffix_21\": \"z\",\r\n    \"_small_number_suffix_24\": \"y\",\r\n    \"_byte_suffix_B\": \"B\",\r\n    \"_byte_suffix_KB\": \"KB\",\r\n    \"_byte_suffix_MB\": \"MB\",\r\n    \"_byte_suffix_GB\": \"GB\",\r\n    \"_byte_suffix_TB\": \"TB\",\r\n    \"_byte_suffix_PB\": \"PB\",\r\n    // Default date formats for various periods.\r\n    // \r\n    // This should reflect official or de facto formatting universally accepted\r\n    // in the country translation is being made for\r\n    // Available format codes here:\r\n    // https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#Format_codes\r\n    // \r\n    // This will be used when formatting date/time for particular granularity,\r\n    // e.g. \"_date_hour\" will be shown whenever we need to show time as hours.\r\n    // \r\n    // \"date\" is used as in default date format when showing standalone dates.\r\n    \"_date\": \"yyyy-MM-dd\",\r\n    \"_date_millisecond\": \"mm:ss SSS\",\r\n    \"_date_millisecond_full\": \"HH:mm:ss SSS\",\r\n    \"_date_second\": \"HH:mm:ss\",\r\n    \"_date_second_full\": \"HH:mm:ss\",\r\n    \"_date_minute\": \"HH:mm\",\r\n    \"_date_minute_full\": \"HH:mm - MMM dd, yyyy\",\r\n    \"_date_hour\": \"HH:mm\",\r\n    \"_date_hour_full\": \"HH:mm - MMM dd, yyyy\",\r\n    \"_date_day\": \"MMM dd\",\r\n    \"_date_day_full\": \"MMM dd, yyyy\",\r\n    \"_date_week\": \"ww\",\r\n    \"_date_week_full\": \"MMM dd, yyyy\",\r\n    \"_date_month\": \"MMM\",\r\n    \"_date_month_full\": \"MMM, yyyy\",\r\n    \"_date_year\": \"yyyy\",\r\n    // Default duration formats for various base units.\r\n    // \r\n    // This will be used by DurationFormatter to format numeric values into\r\n    // duration.\r\n    // \r\n    // Notice how each duration unit comes in several versions. This is to ensure\r\n    // that each base unit is shown correctly.\r\n    // \r\n    // For example, if we have baseUnit set to \"second\", meaning our duration is\r\n    // in seconds.\r\n    // \r\n    // If we pass in `50` to formatter, it will know that we have just 50 seconds\r\n    // (less than a minute) so it will use format in `\"_duration_second\"` (\"ss\"),\r\n    // and the formatted result will be in like `\"50\"`.\r\n    // \r\n    // If we pass in `70`, which is more than a minute, the formatter will switch\r\n    // to `\"_duration_second_minute\"` (\"mm:ss\"), resulting in \"01:10\" formatted\r\n    // text.\r\n    // \r\n    // Available codes here:\r\n    // https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/#Available_Codes\r\n    \"_duration_millisecond\": \"SSS\",\r\n    \"_duration_millisecond_second\": \"ss.SSS\",\r\n    \"_duration_millisecond_minute\": \"mm:ss SSS\",\r\n    \"_duration_millisecond_hour\": \"hh:mm:ss SSS\",\r\n    \"_duration_millisecond_day\": \"d'd' mm:ss SSS\",\r\n    \"_duration_millisecond_week\": \"d'd' mm:ss SSS\",\r\n    \"_duration_millisecond_month\": \"M'm' dd'd' mm:ss SSS\",\r\n    \"_duration_millisecond_year\": \"y'y' MM'm' dd'd' mm:ss SSS\",\r\n    \"_duration_second\": \"ss\",\r\n    \"_duration_second_minute\": \"mm:ss\",\r\n    \"_duration_second_hour\": \"hh:mm:ss\",\r\n    \"_duration_second_day\": \"d'd' hh:mm:ss\",\r\n    \"_duration_second_week\": \"d'd' hh:mm:ss\",\r\n    \"_duration_second_month\": \"M'm' dd'd' hh:mm:ss\",\r\n    \"_duration_second_year\": \"y'y' MM'm' dd'd' hh:mm:ss\",\r\n    \"_duration_minute\": \"mm\",\r\n    \"_duration_minute_hour\": \"hh:mm\",\r\n    \"_duration_minute_day\": \"d'd' hh:mm\",\r\n    \"_duration_minute_week\": \"d'd' hh:mm\",\r\n    \"_duration_minute_month\": \"M'm' dd'd' hh:mm\",\r\n    \"_duration_minute_year\": \"y'y' MM'm' dd'd' hh:mm\",\r\n    \"_duration_hour\": \"hh'h'\",\r\n    \"_duration_hour_day\": \"d'd' hh'h'\",\r\n    \"_duration_hour_week\": \"d'd' hh'h'\",\r\n    \"_duration_hour_month\": \"M'm' dd'd' hh'h'\",\r\n    \"_duration_hour_year\": \"y'y' MM'm' dd'd' hh'h'\",\r\n    \"_duration_day\": \"d'd'\",\r\n    \"_duration_day_week\": \"d'd'\",\r\n    \"_duration_day_month\": \"M'm' dd'd'\",\r\n    \"_duration_day_year\": \"y'y' MM'm' dd'd'\",\r\n    \"_duration_week\": \"w'w'\",\r\n    \"_duration_week_month\": \"w'w'\",\r\n    \"_duration_week_year\": \"w'w'\",\r\n    \"_duration_month\": \"M'm'\",\r\n    \"_duration_month_year\": \"y'y' MM'm'\",\r\n    \"_duration_year\": \"y'y'\",\r\n    // Era translations\r\n    \"_era_ad\": \"AD\",\r\n    \"_era_bc\": \"BC\",\r\n    // Day part, used in 12-hour formats, e.g. 5 P.M.\r\n    // Please note that these come in 3 variants:\r\n    // * one letter (e.g. \"A\")\r\n    // * two letters (e.g. \"AM\")\r\n    // * two letters with dots (e.g. \"A.M.\")\r\n    // \r\n    // All three need to to be translated even if they are all the same. Some\r\n    // users might use one, some the other.\r\n    \"A\": \"\",\r\n    \"P\": \"\",\r\n    \"AM\": \"\",\r\n    \"PM\": \"\",\r\n    \"A.M.\": \"\",\r\n    \"P.M.\": \"\",\r\n    // Date-related stuff.\r\n    // \r\n    // When translating months, if there's a difference, use the form which is\r\n    // best for a full date, e.g. as you would use it in \"2018 January 1\".\r\n    // \r\n    // Note that May is listed twice. This is because in English May is the same\r\n    // in both long and short forms, while in other languages it may not be the\r\n    // case. Translate \"May\" to full word, while \"May(short)\" to shortened\r\n    // version.\r\n    // \r\n    // Should month names and weekdays be capitalized or not?\r\n    // \r\n    // Rule of thumb is this: if the names should always be capitalized,\r\n    // regardless of name position within date (\"January\", \"21st January 2018\",\r\n    // etc.) use capitalized names. Otherwise enter all lowercase.\r\n    // \r\n    // The date formatter will automatically capitalize names if they are the\r\n    // first (or only) word in resulting date.\r\n    \"January\": \"\",\r\n    \"February\": \"\",\r\n    \"March\": \"\",\r\n    \"April\": \"\",\r\n    \"May\": \"\",\r\n    \"June\": \"\",\r\n    \"July\": \"\",\r\n    \"August\": \"\",\r\n    \"September\": \"\",\r\n    \"October\": \"\",\r\n    \"November\": \"\",\r\n    \"December\": \"\",\r\n    \"Jan\": \"\",\r\n    \"Feb\": \"\",\r\n    \"Mar\": \"\",\r\n    \"Apr\": \"\",\r\n    \"May(short)\": \"May\",\r\n    \"Jun\": \"\",\r\n    \"Jul\": \"\",\r\n    \"Aug\": \"\",\r\n    \"Sep\": \"\",\r\n    \"Oct\": \"\",\r\n    \"Nov\": \"\",\r\n    \"Dec\": \"\",\r\n    // Weekdays.\r\n    \"Sunday\": \"\",\r\n    \"Monday\": \"\",\r\n    \"Tuesday\": \"\",\r\n    \"Wednesday\": \"\",\r\n    \"Thursday\": \"\",\r\n    \"Friday\": \"\",\r\n    \"Saturday\": \"\",\r\n    \"Sun\": \"\",\r\n    \"Mon\": \"\",\r\n    \"Tue\": \"\",\r\n    \"Wed\": \"\",\r\n    \"Thu\": \"\",\r\n    \"Fri\": \"\",\r\n    \"Sat\": \"\",\r\n    // Date ordinal function.\r\n    // \r\n    // This is used when adding number ordinal when formatting days in dates.\r\n    // \r\n    // E.g. \"January 1st\", \"February 2nd\".\r\n    // \r\n    // The function accepts day number, and returns a string to be added to the\r\n    // day, like in default English translation, if we pass in 2, we will receive\r\n    // \"nd\" back.\r\n    \"_dateOrd\": function (day) {\r\n        let res = \"th\";\r\n        if ((day < 11) || (day > 13)) {\r\n            switch (day % 10) {\r\n                case 1:\r\n                    res = \"st\";\r\n                    break;\r\n                case 2:\r\n                    res = \"nd\";\r\n                    break;\r\n                case 3:\r\n                    res = \"rd\";\r\n                    break;\r\n            }\r\n        }\r\n        return res;\r\n    },\r\n    // Various chart controls.\r\n    // Shown as a tooltip on zoom out button.\r\n    \"Zoom Out\": \"\",\r\n    // Timeline buttons\r\n    \"Play\": \"\",\r\n    \"Stop\": \"\",\r\n    // Chart's Legend screen reader title.\r\n    \"Legend\": \"\",\r\n    // Legend's item screen reader indicator.\r\n    \"Press ENTER to toggle\": \"\",\r\n    // Shown when the chart is busy loading something.\r\n    \"Loading\": \"\",\r\n    // Shown as the first button in the breadcrumb navigation, e.g.:\r\n    // Home > First level > ...\r\n    \"Home\": \"\",\r\n    // Chart types.\r\n    // Those are used as default screen reader titles for the main chart element\r\n    // unless developer has set some more descriptive title.\r\n    \"Chart\": \"\",\r\n    \"Serial chart\": \"\",\r\n    \"X/Y chart\": \"\",\r\n    \"Pie chart\": \"\",\r\n    \"Gauge chart\": \"\",\r\n    \"Radar chart\": \"\",\r\n    \"Sankey diagram\": \"\",\r\n    \"Flow diagram\": \"\",\r\n    \"Chord diagram\": \"\",\r\n    \"TreeMap chart\": \"\",\r\n    \"Force directed tree\": \"\",\r\n    \"Sliced chart\": \"\",\r\n    // Series types.\r\n    // Used to name series by type for screen readers if they do not have their\r\n    // name set.\r\n    \"Series\": \"\",\r\n    \"Candlestick Series\": \"\",\r\n    \"OHLC Series\": \"\",\r\n    \"Column Series\": \"\",\r\n    \"Line Series\": \"\",\r\n    \"Pie Slice Series\": \"\",\r\n    \"Funnel Series\": \"\",\r\n    \"Pyramid Series\": \"\",\r\n    \"X/Y Series\": \"\",\r\n    // Map-related stuff.\r\n    \"Map\": \"\",\r\n    \"Press ENTER to zoom in\": \"\",\r\n    \"Press ENTER to zoom out\": \"\",\r\n    \"Use arrow keys to zoom in and out\": \"\",\r\n    \"Use plus and minus keys on your keyboard to zoom in and out\": \"\",\r\n    // Export-related stuff.\r\n    // These prompts are used in Export menu labels.\r\n    // \r\n    // \"Export\" is the top-level menu item.\r\n    // \r\n    // \"Image\", \"Data\", \"Print\" as second-level indicating type of export\r\n    // operation.\r\n    // \r\n    // Leave actual format untranslated, unless you absolutely know that they\r\n    // would convey more meaning in some other way.\r\n    \"Export\": \"\",\r\n    \"Image\": \"\",\r\n    \"Data\": \"\",\r\n    \"Print\": \"\",\r\n    \"Press ENTER or use arrow keys to navigate\": \"\",\r\n    \"Press ENTER to open\": \"\",\r\n    \"Press ENTER to print.\": \"\",\r\n    \"Press ENTER to export as %1.\": \"\",\r\n    \"(Press ESC to close this message)\": \"\",\r\n    \"Image Export Complete\": \"\",\r\n    \"Export operation took longer than expected. Something might have gone wrong.\": \"\",\r\n    \"Saved from\": \"\",\r\n    \"PNG\": \"\",\r\n    \"JPG\": \"\",\r\n    \"GIF\": \"\",\r\n    \"SVG\": \"\",\r\n    \"PDF\": \"\",\r\n    \"JSON\": \"\",\r\n    \"CSV\": \"\",\r\n    \"XLSX\": \"\",\r\n    \"HTML\": \"\",\r\n    // Scrollbar-related stuff.\r\n    // \r\n    // Scrollbar is a control which can zoom and pan the axes on the chart.\r\n    // \r\n    // Each scrollbar has two grips: left or right (for horizontal scrollbar) or\r\n    // upper and lower (for vertical one).\r\n    // \r\n    // Prompts change in relation to whether Scrollbar is vertical or horizontal.\r\n    // \r\n    // The final section is used to indicate the current range of selection.\r\n    \"Use TAB to select grip buttons or left and right arrows to change selection\": \"\",\r\n    \"Use left and right arrows to move selection\": \"\",\r\n    \"Use left and right arrows to move left selection\": \"\",\r\n    \"Use left and right arrows to move right selection\": \"\",\r\n    \"Use TAB select grip buttons or up and down arrows to change selection\": \"\",\r\n    \"Use up and down arrows to move selection\": \"\",\r\n    \"Use up and down arrows to move lower selection\": \"\",\r\n    \"Use up and down arrows to move upper selection\": \"\",\r\n    \"From %1 to %2\": \"\",\r\n    \"From %1\": \"\",\r\n    \"To %1\": \"\",\r\n    // Data loader-related.\r\n    \"No parser available for file: %1\": \"\",\r\n    \"Error parsing file: %1\": \"\",\r\n    \"Unable to load file: %1\": \"\",\r\n    \"Invalid date\": \"\",\r\n    // Common actions\r\n    \"Close\": \"\",\r\n    \"Minimize\": \"\"\r\n};\r\n//# sourceMappingURL=en.js.map","import { Entity } from \"./Entity\";\r\nimport * as $array from \"./Array\";\r\nimport en from \"../../../locales/en\";\r\n;\r\nexport class Language extends Entity {\r\n    _setDefaults() {\r\n        this.setPrivate(\"defaultLocale\", en);\r\n        super._setDefaults();\r\n    }\r\n    translate(prompt, locale, ...rest) {\r\n        // Get langauge\r\n        if (!locale) {\r\n            locale = this._root.locale || this.getPrivate(\"defaultLocale\");\r\n        }\r\n        // Init translation\r\n        let translation = prompt;\r\n        let value = locale[prompt];\r\n        // Try to look for the translation\r\n        if (value === null) {\r\n            translation = \"\";\r\n        }\r\n        else if (value != null) {\r\n            // It might be an empty string\r\n            if (value) {\r\n                translation = value;\r\n            }\r\n        }\r\n        else if (locale !== this.getPrivate(\"defaultLocale\")) {\r\n            // Try to look in default language\r\n            return this.translate(prompt, this.getPrivate(\"defaultLocale\"), ...rest);\r\n        }\r\n        // Replace %1, %2, etc params\r\n        if (rest.length) {\r\n            for (let len = rest.length, i = 0; i < len; ++i) {\r\n                translation = translation.split(\"%\" + (i + 1)).join(rest[i]);\r\n            }\r\n        }\r\n        // Return the translation\r\n        return translation;\r\n    }\r\n    translateAny(prompt, locale, ...rest) {\r\n        return this.translate(prompt, locale, ...rest);\r\n    }\r\n    setTranslationAny(prompt, translation, locale) {\r\n        const localeTarget = locale || this._root.locale;\r\n        localeTarget[prompt] = translation;\r\n    }\r\n    translateEmpty(prompt, locale, ...rest) {\r\n        let translation = this.translate(prompt, locale, ...rest);\r\n        return translation == prompt ? \"\" : translation;\r\n    }\r\n    translateFunc(prompt, locale) {\r\n        if (this._root.locale[prompt]) {\r\n            return this._root.locale[prompt];\r\n        }\r\n        // Try to look in default language\r\n        if (locale !== this.getPrivate(\"defaultLocale\")) {\r\n            return this.translateFunc(prompt, this.getPrivate(\"defaultLocale\"));\r\n        }\r\n        // Fail - return empty function\r\n        return () => {\r\n            return \"\";\r\n        };\r\n    }\r\n    translateAll(list, locale) {\r\n        // Translate all items in the list\r\n        if (!this.isDefault()) {\r\n            return $array.map(list, (x) => this.translate(x, locale));\r\n        }\r\n        else {\r\n            return list;\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` if the currently selected locale is a default locale.\r\n     *\r\n     * @return `true` if locale is default; `false` if it is not.\r\n     */\r\n    isDefault() {\r\n        return this.getPrivate(\"defaultLocale\") === this._root.locale;\r\n    }\r\n}\r\n//# sourceMappingURL=Language.js.map","import { Template } from \"./util/Template\";\r\nimport * as $order from \"./util/Order\";\r\nimport * as $array from \"./util/Array\";\r\n/**\r\n * A base class for an amCharts theme.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\r\n * @important\r\n */\r\nexport class Theme {\r\n    constructor(root, isReal) {\r\n        Object.defineProperty(this, \"_root\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rules\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        this._root = root;\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n    }\r\n    /**\r\n     * Use this method to create an instance of this class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n     * @param   root      Root element\r\n     * @param   settings  Settings\r\n     * @param   template  Template\r\n     * @return            Instantiated object\r\n     */\r\n    static new(root) {\r\n        const x = (new this(root, true));\r\n        x.setupDefaultRules();\r\n        return x;\r\n    }\r\n    setupDefaultRules() { }\r\n    /**\r\n     * Looks up the rules for a specific theme class.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @return             Array<IRule<A>>\r\n     */\r\n    _lookupRules(themeClass) {\r\n        return this._rules[themeClass];\r\n    }\r\n    /**\r\n     * Creates a [[Template]] for specific theme class and tags.\r\n     *\r\n     * NOTE: the difference from `rule()` is that `ruleRaw()` does not do any\r\n     * type checks.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @param   themeTags  Theme tags\r\n     * @return             Template\r\n     */\r\n    ruleRaw(themeClass, themeTags = []) {\r\n        let rules = this._rules[themeClass];\r\n        if (!rules) {\r\n            rules = this._rules[themeClass] = [];\r\n        }\r\n        themeTags.sort($order.compare);\r\n        const { index, found } = $array.getSortedIndex(rules, (x) => {\r\n            const order = $order.compare(x.tags.length, themeTags.length);\r\n            if (order === 0) {\r\n                return $order.compareArray(x.tags, themeTags, $order.compare);\r\n            }\r\n            else {\r\n                return order;\r\n            }\r\n        });\r\n        if (found) {\r\n            return rules[index].template;\r\n        }\r\n        else {\r\n            const template = Template.new({});\r\n            rules.splice(index, 0, {\r\n                tags: themeTags,\r\n                template,\r\n            });\r\n            return template;\r\n        }\r\n    }\r\n    /**\r\n     * Creates a [[Template]] for specific theme class and tags.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\r\n     * @param   themeClass Theme class\r\n     * @param   themeTags  Theme tags\r\n     * @return             Template\r\n     */\r\n    rule(themeClass, themeTags = []) {\r\n        return this.ruleRaw(themeClass, themeTags);\r\n    }\r\n}\r\n//# sourceMappingURL=Theme.js.map","import { Theme } from \"../core/Theme\";\r\nimport { p100, p50 } from \"../core/util/Percent\";\r\nimport { Color } from \"../core/util/Color\";\r\nimport { GridLayout } from \"../core/render/GridLayout\";\r\nimport * as $ease from \"../core/util/Ease\";\r\n/**\r\n * @ignore\r\n */\r\nexport function setColor(rule, key, ic, name) {\r\n    // TODO this shouldn't use get, figure out a better way\r\n    rule.set(key, ic.get(name));\r\n    ic.on(name, (value) => {\r\n        rule.set(key, value);\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class DefaultTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const language = this._root.language;\r\n        const ic = this._root.interfaceColors;\r\n        const horizontalLayout = this._root.horizontalLayout;\r\n        const verticalLayout = this._root.verticalLayout;\r\n        const r = this.rule.bind(this);\r\n        /**\r\n         * ========================================================================\r\n         * core\r\n         * ========================================================================\r\n         */\r\n        r(\"InterfaceColors\").setAll({\r\n            stroke: Color.fromHex(0xe5e5e5),\r\n            fill: Color.fromHex(0xf3f3f3),\r\n            primaryButton: Color.fromHex(0x6794dc),\r\n            primaryButtonHover: Color.fromHex(0x6771dc),\r\n            primaryButtonDown: Color.fromHex(0x68dc76),\r\n            primaryButtonActive: Color.fromHex(0x68dc76),\r\n            primaryButtonText: Color.fromHex(0xffffff),\r\n            primaryButtonStroke: Color.fromHex(0xffffff),\r\n            secondaryButton: Color.fromHex(0xd9d9d9),\r\n            secondaryButtonHover: Color.fromHex(0xa3a3a3),\r\n            secondaryButtonDown: Color.fromHex(0x8d8d8d),\r\n            secondaryButtonActive: Color.fromHex(0xe6e6e6),\r\n            secondaryButtonText: Color.fromHex(0x000000),\r\n            secondaryButtonStroke: Color.fromHex(0xffffff),\r\n            grid: Color.fromHex(0x000000),\r\n            background: Color.fromHex(0xffffff),\r\n            alternativeBackground: Color.fromHex(0x000000),\r\n            text: Color.fromHex(0x000000),\r\n            alternativeText: Color.fromHex(0xffffff),\r\n            disabled: Color.fromHex(0xadadad),\r\n            positive: Color.fromHex(0x50b300),\r\n            negative: Color.fromHex(0xb30000)\r\n        });\r\n        {\r\n            const rule = r(\"ColorSet\");\r\n            rule.setAll({\r\n                passOptions: {\r\n                    hue: 0.05,\r\n                    saturation: 0,\r\n                    lightness: 0\r\n                },\r\n                colors: [\r\n                    Color.fromHex(0x67b7dc)\r\n                ],\r\n                step: 1,\r\n                //baseColor: Color.fromRGB(103, 183, 220),\r\n                //count: 20,\r\n                reuse: false,\r\n                startIndex: 0\r\n            });\r\n            rule.setPrivate(\"currentStep\", 0);\r\n            rule.setPrivate(\"currentPass\", 0);\r\n        }\r\n        r(\"Entity\").setAll({\r\n            stateAnimationDuration: 0,\r\n            stateAnimationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"Component\").setAll({\r\n            interpolationDuration: 0,\r\n            interpolationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"Sprite\").setAll({\r\n            visible: true,\r\n            scale: 1,\r\n            opacity: 1,\r\n            rotation: 0,\r\n            position: \"relative\",\r\n            tooltipX: p50,\r\n            tooltipY: p50,\r\n            tooltipPosition: \"fixed\",\r\n            isMeasured: true\r\n        });\r\n        r(\"Sprite\").states.create(\"default\", { \"visible\": true, opacity: 1 });\r\n        r(\"Container\").setAll({\r\n            interactiveChildren: true,\r\n            setStateOnChildren: false\r\n        });\r\n        r(\"Graphics\").setAll({\r\n            strokeWidth: 1\r\n        });\r\n        r(\"Chart\").setAll({\r\n            width: p100,\r\n            height: p100,\r\n            interactiveChildren: false\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: alignment\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Sprite\", [\"horizontal\", \"center\"]).setAll({\r\n            centerX: p50,\r\n            x: p50\r\n        });\r\n        r(\"Sprite\", [\"vertical\", \"center\"]).setAll({\r\n            centerY: p50,\r\n            y: p50\r\n        });\r\n        r(\"Container\", [\"horizontal\", \"layout\"]).setAll({\r\n            layout: horizontalLayout\r\n        });\r\n        r(\"Container\", [\"vertical\", \"layout\"]).setAll({\r\n            layout: verticalLayout\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: patterns\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Pattern\").setAll({\r\n            repetition: \"repeat\",\r\n            width: 50,\r\n            height: 50,\r\n            rotation: 0,\r\n            fillOpacity: 1\r\n        });\r\n        r(\"LinePattern\").setAll({\r\n            gap: 6,\r\n            colorOpacity: 1,\r\n            width: 49,\r\n            height: 49\r\n        });\r\n        r(\"RectanglePattern\").setAll({\r\n            gap: 6,\r\n            checkered: false,\r\n            centered: true,\r\n            maxWidth: 5,\r\n            maxHeight: 5,\r\n            width: 48,\r\n            height: 48,\r\n            strokeWidth: 0\r\n        });\r\n        r(\"CirclePattern\").setAll({\r\n            gap: 5,\r\n            checkered: false,\r\n            centered: false,\r\n            radius: 3,\r\n            strokeWidth: 0,\r\n            width: 45,\r\n            height: 45\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: gradients\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"LinearGradient\").setAll({\r\n            rotation: 90\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Legend\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Legend\").setAll({\r\n            fillField: \"fill\",\r\n            strokeField: \"stroke\",\r\n            nameField: \"name\",\r\n            layout: GridLayout.new(this._root, {}),\r\n            layer: 30,\r\n            clickTarget: \"itemContainer\"\r\n        });\r\n        // Class: Container\r\n        r(\"Container\", [\"legend\", \"item\", \"itemcontainer\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingBottom: 5,\r\n            paddingTop: 5,\r\n            layout: horizontalLayout,\r\n            setStateOnChildren: true,\r\n            interactiveChildren: false,\r\n            ariaChecked: true,\r\n            focusable: true,\r\n            ariaLabel: language.translate(\"Press ENTER to toggle\"),\r\n            role: \"checkbox\"\r\n        });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"legend\", \"item\", \"background\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"background\");\r\n        }\r\n        r(\"Container\", [\"legend\", \"marker\"]).setAll({\r\n            setStateOnChildren: true,\r\n            centerY: p50,\r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            paddingBottom: 0,\r\n            paddingTop: 0,\r\n            width: 18,\r\n            height: 18\r\n        });\r\n        r(\"RoundedRectangle\", [\"legend\", \"marker\", \"rectangle\"]).setAll({\r\n            width: p100,\r\n            height: p100,\r\n            cornerRadiusBL: 3,\r\n            cornerRadiusTL: 3,\r\n            cornerRadiusBR: 3,\r\n            cornerRadiusTR: 3\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"legend\", \"marker\", \"rectangle\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n            setColor(rule, \"stroke\", ic, \"disabled\");\r\n        }\r\n        r(\"Label\", [\"legend\", \"label\"]).setAll({\r\n            centerY: p50,\r\n            marginLeft: 5,\r\n            paddingRight: 0,\r\n            paddingLeft: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0,\r\n            populateText: true\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"legend\", \"label\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n        }\r\n        r(\"Label\", [\"legend\", \"value\", \"label\"]).setAll({\r\n            centerY: p50,\r\n            marginLeft: 5,\r\n            paddingRight: 0,\r\n            paddingLeft: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0,\r\n            width: 50,\r\n            centerX: p100,\r\n            populateText: true\r\n        });\r\n        {\r\n            const rule = r(\"Label\", [\"legend\", \"value\", \"label\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"fill\", ic, \"disabled\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: HeatLegend\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"HeatLegend\").setAll({\r\n            stepCount: 1\r\n        });\r\n        r(\"RoundedRectangle\", [\"heatlegend\", \"marker\"]).setAll({\r\n            cornerRadiusTR: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBL: 0\r\n        });\r\n        r(\"RoundedRectangle\", [\"vertical\", \"heatlegend\", \"marker\"]).setAll({\r\n            height: p100,\r\n            width: 15\r\n        });\r\n        r(\"RoundedRectangle\", [\"horizontal\", \"heatlegend\", \"marker\"]).setAll({\r\n            width: p100,\r\n            height: 15\r\n        });\r\n        r(\"HeatLegend\", [\"vertical\"]).setAll({\r\n            height: p100\r\n        });\r\n        r(\"HeatLegend\", [\"horizontal\"]).setAll({\r\n            width: p100\r\n        });\r\n        r(\"Label\", [\"heatlegend\", \"start\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingTop: 5,\r\n            paddingBottom: 5\r\n        });\r\n        r(\"Label\", [\"heatlegend\", \"end\"]).setAll({\r\n            paddingLeft: 5,\r\n            paddingRight: 5,\r\n            paddingTop: 5,\r\n            paddingBottom: 5\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Labels\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        {\r\n            const rule = r(\"Label\");\r\n            rule.setAll({\r\n                paddingTop: 8,\r\n                paddingBottom: 8,\r\n                paddingLeft: 10,\r\n                paddingRight: 10,\r\n                fontFamily: \"-apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\"\",\r\n                fontSize: \"1em\",\r\n                populateText: false\r\n            });\r\n            setColor(rule, \"fill\", ic, \"text\");\r\n        }\r\n        r(\"RadialLabel\").setAll({\r\n            textType: \"regular\",\r\n            centerY: p50,\r\n            centerX: p50,\r\n            inside: false,\r\n            radius: 0,\r\n            baseRadius: p100,\r\n            orientation: \"auto\",\r\n            textAlign: \"center\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Elements and shapes\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"RoundedRectangle\").setAll({\r\n            cornerRadiusTL: 8,\r\n            cornerRadiusBL: 8,\r\n            cornerRadiusTR: 8,\r\n            cornerRadiusBR: 8\r\n        });\r\n        r(\"PointedRectangle\").setAll({\r\n            pointerBaseWidth: 15,\r\n            pointerLength: 10,\r\n            cornerRadius: 8\r\n        });\r\n        r(\"Slice\").setAll({\r\n            shiftRadius: 0,\r\n            dRadius: 0,\r\n            dInnerRadius: 0\r\n        });\r\n        {\r\n            const rule = r(\"Tick\");\r\n            rule.setAll({\r\n                strokeOpacity: .15,\r\n                isMeasured: false,\r\n                length: 4.5,\r\n                position: \"absolute\"\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"Bullet\").setAll({\r\n            locationX: 0.5,\r\n            locationY: 0.5\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Tooltip\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Tooltip\").setAll({\r\n            position: \"absolute\",\r\n            getFillFromSprite: true,\r\n            getStrokeFromSprite: false,\r\n            autoTextColor: true,\r\n            paddingTop: 9,\r\n            paddingBottom: 8,\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            marginBottom: 5,\r\n            pointerOrientation: \"vertical\",\r\n            centerX: p50,\r\n            centerY: p50,\r\n            animationEasing: $ease.out($ease.cubic),\r\n            exportable: false\r\n            //layer: 100\r\n        });\r\n        {\r\n            const rule = r(\"PointedRectangle\", [\"tooltip\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.9,\r\n                cornerRadius: 4,\r\n                pointerLength: 4,\r\n                pointerBaseWidth: 8,\r\n                fillOpacity: 0.9,\r\n                stroke: Color.fromHex(0xffffff)\r\n            });\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"tooltip\"]);\r\n            rule.setAll({\r\n                role: \"tooltip\",\r\n                populateText: true,\r\n                paddingRight: 0,\r\n                paddingTop: 0,\r\n                paddingLeft: 0,\r\n                paddingBottom: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Button\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\").setAll({\r\n            paddingTop: 8,\r\n            paddingBottom: 8,\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            interactive: true,\r\n            layout: horizontalLayout,\r\n            interactiveChildren: false,\r\n            setStateOnChildren: true,\r\n            focusable: true\r\n        });\r\n        r(\"Button\").states.create(\"hover\", {});\r\n        r(\"Button\").states.create(\"down\", { stateAnimationDuration: 0 });\r\n        r(\"Button\").states.create(\"active\", {});\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]);\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonStroke\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"active\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonActive\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"button\", \"icon\"]);\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonText\");\r\n        }\r\n        {\r\n            const rule = r(\"Label\", [\"button\"]);\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: ZoomOutButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"zoom\"]).setAll({\r\n            paddingTop: 18,\r\n            paddingBottom: 18,\r\n            paddingLeft: 12,\r\n            paddingRight: 12,\r\n            centerX: 46,\r\n            centerY: -10,\r\n            y: 0,\r\n            x: p100,\r\n            role: \"button\",\r\n            ariaLabel: language.translate(\"Zoom Out\"),\r\n            layer: 30\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]);\r\n            rule.setAll({\r\n                cornerRadiusBL: 40,\r\n                cornerRadiusBR: 40,\r\n                cornerRadiusTL: 40,\r\n                cornerRadiusTR: 40\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"icon\", \"button\", \"zoom\"]);\r\n            rule.setAll({\r\n                crisp: true,\r\n                strokeOpacity: 0.7,\r\n                draw: (display) => {\r\n                    display.moveTo(0, 0);\r\n                    display.lineTo(12, 0);\r\n                }\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"primaryButtonText\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: ResizeButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"resize\"]).setAll({\r\n            paddingTop: 9,\r\n            paddingBottom: 9,\r\n            paddingLeft: 13,\r\n            paddingRight: 13,\r\n            draggable: true,\r\n            centerX: p50,\r\n            centerY: p50,\r\n            position: \"absolute\",\r\n            role: \"slider\",\r\n            ariaValueMin: \"0\",\r\n            ariaValueMax: \"100\",\r\n            ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]);\r\n            rule.setAll({\r\n                cornerRadiusBL: 40,\r\n                cornerRadiusBR: 40,\r\n                cornerRadiusTL: 40,\r\n                cornerRadiusTR: 40\r\n            });\r\n            setColor(rule, \"fill\", ic, \"secondaryButton\");\r\n            setColor(rule, \"stroke\", ic, \"secondaryButtonStroke\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonDown\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"resize\", \"button\", \"icon\"]);\r\n            rule.setAll({\r\n                crisp: true,\r\n                strokeOpacity: 0.5,\r\n                draw: (display) => {\r\n                    display.moveTo(0, 0.5);\r\n                    display.lineTo(0, 12.5);\r\n                    display.moveTo(4, 0.5);\r\n                    display.lineTo(4, 12.5);\r\n                }\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"secondaryButtonText\");\r\n        }\r\n        r(\"Button\", [\"resize\", \"vertical\"]).setAll({\r\n            rotation: 90,\r\n            cursorOverStyle: \"ns-resize\"\r\n        });\r\n        r(\"Button\", [\"resize\", \"horizontal\"]).setAll({\r\n            cursorOverStyle: \"ew-resize\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: PlayButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"play\"]).setAll({\r\n            paddingTop: 13,\r\n            paddingBottom: 13,\r\n            paddingLeft: 14,\r\n            paddingRight: 14,\r\n            ariaLabel: language.translate(\"Play\"),\r\n            toggleKey: \"active\"\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"play\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.5,\r\n                cornerRadiusBL: 100,\r\n                cornerRadiusBR: 100,\r\n                cornerRadiusTL: 100,\r\n                cornerRadiusTR: 100\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"play\", \"icon\"]);\r\n            rule.setAll({\r\n                stateAnimationDuration: 0,\r\n                dx: 1,\r\n                draw: (display) => {\r\n                    display.moveTo(0, -5);\r\n                    display.lineTo(8, 0);\r\n                    display.lineTo(0, 5);\r\n                    display.lineTo(0, -5);\r\n                }\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        r(\"Graphics\", [\"play\", \"icon\"]).states.create(\"default\", {\r\n            stateAnimationDuration: 0\r\n        });\r\n        r(\"Graphics\", [\"play\", \"icon\"]).states.create(\"active\", {\r\n            stateAnimationDuration: 0,\r\n            draw: (display) => {\r\n                display.moveTo(-4, -5);\r\n                display.lineTo(-1, -5);\r\n                display.lineTo(-1, 5);\r\n                display.lineTo(-4, 5);\r\n                display.lineTo(-4, -5);\r\n                display.moveTo(4, -5);\r\n                display.lineTo(1, -5);\r\n                display.lineTo(1, 5);\r\n                display.lineTo(4, 5);\r\n                display.lineTo(4, -5);\r\n            }\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: SwitchButton\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Button\", [\"switch\"]).setAll({\r\n            paddingTop: 4,\r\n            paddingBottom: 4,\r\n            paddingLeft: 4,\r\n            paddingRight: 4,\r\n            ariaLabel: language.translate(\"Press ENTER to toggle\"),\r\n            toggleKey: \"active\",\r\n            width: 40,\r\n            height: 24,\r\n            layout: null\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"switch\", \"background\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.5,\r\n                cornerRadiusBL: 100,\r\n                cornerRadiusBR: 100,\r\n                cornerRadiusTL: 100,\r\n                cornerRadiusTR: 100\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"Circle\", [\"switch\", \"icon\"]);\r\n            rule.setAll({\r\n                radius: 8,\r\n                centerY: 0,\r\n                centerX: 0,\r\n                dx: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"primaryButtonText\");\r\n        }\r\n        r(\"Graphics\", [\"switch\", \"icon\"]).states.create(\"active\", {\r\n            dx: 16\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * core: Scrollbar\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Scrollbar\").setAll({\r\n            start: 0,\r\n            end: 1,\r\n            layer: 30,\r\n            animationEasing: $ease.out($ease.cubic)\r\n        });\r\n        r(\"Scrollbar\", [\"vertical\"]).setAll({\r\n            marginRight: 13,\r\n            marginLeft: 13,\r\n            minWidth: 12,\r\n            height: p100\r\n        });\r\n        r(\"Scrollbar\", [\"horizontal\"]).setAll({\r\n            marginTop: 13,\r\n            marginBottom: 13,\r\n            minHeight: 12,\r\n            width: p100\r\n        });\r\n        this.rule(\"Button\", [\"scrollbar\"]).setAll({\r\n            exportable: false\r\n        });\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"main\", \"background\"]);\r\n            rule.setAll({\r\n                cornerRadiusTL: 8,\r\n                cornerRadiusBL: 8,\r\n                cornerRadiusTR: 8,\r\n                cornerRadiusBR: 8,\r\n                fillOpacity: 0.8,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"fill\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]);\r\n            rule.setAll({\r\n                role: \"slider\",\r\n                ariaLive: \"polite\",\r\n                position: \"absolute\",\r\n                draggable: true\r\n            });\r\n            setColor(rule, \"fill\", ic, \"secondaryButton\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]).states.create(\"hover\", {});\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonHover\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n            setColor(rule, \"fill\", ic, \"secondaryButtonDown\");\r\n        }\r\n        r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\", \"vertical\"]).setAll({\r\n            x: p50,\r\n            width: p100,\r\n            centerX: p50,\r\n            ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n        });\r\n        r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\", \"horizontal\"]).setAll({\r\n            y: p50,\r\n            centerY: p50,\r\n            height: p100,\r\n            ariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n        });\r\n        // @todo: is this needed? used to be \"ContentScrollbar\"\r\n        // r(\"Scrollbar\", [\"content?\"]).setAll({\r\n        // \tmarginRight: 0,\r\n        // \tmarginLeft: 5,\r\n        // \tlayer: 5\r\n        // });\r\n        /**\r\n         * ========================================================================\r\n         * charts/xy\r\n         * ========================================================================\r\n         *\r\n         * This needs to be in DefaultTheme because it's the only theme that is\r\n         * automatically applied to Root, and tooltips different ancestors\r\n         * than actual charts using them.\r\n         */\r\n        {\r\n            const rule = r(\"PointedRectangle\", [\"axis\", \"tooltip\", \"background\"]);\r\n            rule.setAll({\r\n                cornerRadius: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"Label\", [\"axis\", \"tooltip\"]).setAll({\r\n            role: undefined\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"y\"]).setAll({\r\n            textAlign: \"right\"\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"y\", \"opposite\"]).setAll({\r\n            textAlign: \"left\"\r\n        });\r\n        r(\"Label\", [\"axis\", \"tooltip\", \"x\"]).setAll({\r\n            textAlign: \"center\"\r\n        });\r\n        r(\"Tooltip\", [\"categoryaxis\"]).setAll({\r\n            labelText: \"{category}\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * Shapes\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        // Class: Graphics\r\n        r(\"Star\").setAll({\r\n            spikes: 5,\r\n            innerRadius: 5,\r\n            radius: 10\r\n        });\r\n        // STOCK\r\n        r(\"Tooltip\", [\"stock\"]).setAll({\r\n            paddingTop: 6,\r\n            paddingBottom: 5,\r\n            paddingLeft: 7,\r\n            paddingRight: 7\r\n        });\r\n        r(\"PointedRectangle\", [\"tooltip\", \"stock\", \"axis\"]).setAll({\r\n            pointerLength: 0,\r\n            pointerBaseWidth: 0,\r\n            cornerRadius: 3\r\n        });\r\n        r(\"Label\", [\"tooltip\", \"stock\"]).setAll({\r\n            fontSize: \"0.8em\"\r\n        });\r\n        // resizer\r\n        r(\"SpriteResizer\").setAll({\r\n            rotationStep: 10\r\n        });\r\n        {\r\n            const rule = r(\"Container\", [\"resizer\", \"grip\"]);\r\n            rule.states.create(\"hover\", {});\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"resizer\", \"grip\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.7,\r\n                strokeWidth: 1,\r\n                fillOpacity: 1,\r\n                width: 12,\r\n                height: 12\r\n            });\r\n            setColor(rule, \"fill\", ic, \"background\");\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        {\r\n            const rule = r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"outline\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0,\r\n                fillOpacity: 0,\r\n                width: 20,\r\n                height: 20\r\n            });\r\n            rule.states.create(\"hover\", {\r\n                fillOpacity: 0.3\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"left\"]).setAll({\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusTR: 0\r\n        });\r\n        r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"right\"]).setAll({\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusTR: 0\r\n        });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"resizer\", \"rectangle\"]);\r\n            rule.setAll({\r\n                strokeDasharray: [2, 2],\r\n                strokeOpacity: 0.5,\r\n                strokeWidth: 1\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=DefaultTheme.js.map","/**\r\n * Modified from Pixi:\r\n *\r\n * The MIT License\r\n *\r\n * Copyright (c) 2013-2017 Mathew Groves, Chad Engler\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n/**\r\n * @ignore\r\n */\r\nexport class Matrix {\r\n    constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\r\n        Object.defineProperty(this, \"a\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"b\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"c\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"d\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"ty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n        this.d = d;\r\n        this.tx = tx;\r\n        this.ty = ty;\r\n    }\r\n    /**\r\n     * Sets the matrix based on all the available properties\r\n     */\r\n    setTransform(x, y, pivotX, pivotY, rotation, scale = 1) {\r\n        this.a = Math.cos(rotation) * scale;\r\n        this.b = Math.sin(rotation) * scale;\r\n        this.c = -Math.sin(rotation) * scale;\r\n        this.d = Math.cos(rotation) * scale;\r\n        this.tx = x - ((pivotX * this.a) + (pivotY * this.c));\r\n        this.ty = y - ((pivotX * this.b) + (pivotY * this.d));\r\n    }\r\n    /**\r\n     * Get a new position with the current transformation applied.\r\n     * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\r\n     */\r\n    apply(origin) {\r\n        return {\r\n            x: (this.a * origin.x) + (this.c * origin.y) + this.tx,\r\n            y: (this.b * origin.x) + (this.d * origin.y) + this.ty\r\n        };\r\n    }\r\n    /**\r\n     * Get a new position with the inverse of the current transformation applied.\r\n     * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\r\n     */\r\n    applyInverse(origin) {\r\n        const id = 1 / ((this.a * this.d) + (this.c * -this.b));\r\n        return {\r\n            x: (this.d * id * origin.x) + (-this.c * id * origin.y) + (((this.ty * this.c) - (this.tx * this.d)) * id),\r\n            y: (this.a * id * origin.y) + (-this.b * id * origin.x) + (((-this.ty * this.a) + (this.tx * this.b)) * id)\r\n        };\r\n    }\r\n    /**\r\n     * Appends the given Matrix to this Matrix.\r\n     */\r\n    append(matrix) {\r\n        const a1 = this.a;\r\n        const b1 = this.b;\r\n        const c1 = this.c;\r\n        const d1 = this.d;\r\n        this.a = (matrix.a * a1) + (matrix.b * c1);\r\n        this.b = (matrix.a * b1) + (matrix.b * d1);\r\n        this.c = (matrix.c * a1) + (matrix.d * c1);\r\n        this.d = (matrix.c * b1) + (matrix.d * d1);\r\n        this.tx = (matrix.tx * a1) + (matrix.ty * c1) + this.tx;\r\n        this.ty = (matrix.tx * b1) + (matrix.ty * d1) + this.ty;\r\n    }\r\n    /**\r\n     * Prepends the given Matrix to this Matrix.\r\n     */\r\n    prepend(matrix) {\r\n        const tx1 = this.tx;\r\n        if (matrix.a !== 1 || matrix.b !== 0 || matrix.c !== 0 || matrix.d !== 1) {\r\n            const a1 = this.a;\r\n            const c1 = this.c;\r\n            this.a = (a1 * matrix.a) + (this.b * matrix.c);\r\n            this.b = (a1 * matrix.b) + (this.b * matrix.d);\r\n            this.c = (c1 * matrix.a) + (this.d * matrix.c);\r\n            this.d = (c1 * matrix.b) + (this.d * matrix.d);\r\n        }\r\n        this.tx = (tx1 * matrix.a) + (this.ty * matrix.c) + matrix.tx;\r\n        this.ty = (tx1 * matrix.b) + (this.ty * matrix.d) + matrix.ty;\r\n    }\r\n    /**\r\n     * Copies the other matrix's properties into this matrix\r\n     */\r\n    copyFrom(matrix) {\r\n        this.a = matrix.a;\r\n        this.b = matrix.b;\r\n        this.c = matrix.c;\r\n        this.d = matrix.d;\r\n        this.tx = matrix.tx;\r\n        this.ty = matrix.ty;\r\n    }\r\n}\r\n//# sourceMappingURL=Matrix.js.map","var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar TAU = Math.PI * 2;\n\nvar mapToEllipse = function mapToEllipse(_ref, rx, ry, cosphi, sinphi, centerx, centery) {\n  var x = _ref.x,\n      y = _ref.y;\n\n  x *= rx;\n  y *= ry;\n\n  var xp = cosphi * x - sinphi * y;\n  var yp = sinphi * x + cosphi * y;\n\n  return {\n    x: xp + centerx,\n    y: yp + centery\n  };\n};\n\nvar approxUnitArc = function approxUnitArc(ang1, ang2) {\n  // If 90 degree circular arc, use a constant\n  // as derived from http://spencermortensen.com/articles/bezier-circle\n  var a = ang2 === 1.5707963267948966 ? 0.551915024494 : ang2 === -1.5707963267948966 ? -0.551915024494 : 4 / 3 * Math.tan(ang2 / 4);\n\n  var x1 = Math.cos(ang1);\n  var y1 = Math.sin(ang1);\n  var x2 = Math.cos(ang1 + ang2);\n  var y2 = Math.sin(ang1 + ang2);\n\n  return [{\n    x: x1 - y1 * a,\n    y: y1 + x1 * a\n  }, {\n    x: x2 + y2 * a,\n    y: y2 - x2 * a\n  }, {\n    x: x2,\n    y: y2\n  }];\n};\n\nvar vectorAngle = function vectorAngle(ux, uy, vx, vy) {\n  var sign = ux * vy - uy * vx < 0 ? -1 : 1;\n\n  var dot = ux * vx + uy * vy;\n\n  if (dot > 1) {\n    dot = 1;\n  }\n\n  if (dot < -1) {\n    dot = -1;\n  }\n\n  return sign * Math.acos(dot);\n};\n\nvar getArcCenter = function getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp) {\n  var rxsq = Math.pow(rx, 2);\n  var rysq = Math.pow(ry, 2);\n  var pxpsq = Math.pow(pxp, 2);\n  var pypsq = Math.pow(pyp, 2);\n\n  var radicant = rxsq * rysq - rxsq * pypsq - rysq * pxpsq;\n\n  if (radicant < 0) {\n    radicant = 0;\n  }\n\n  radicant /= rxsq * pypsq + rysq * pxpsq;\n  radicant = Math.sqrt(radicant) * (largeArcFlag === sweepFlag ? -1 : 1);\n\n  var centerxp = radicant * rx / ry * pyp;\n  var centeryp = radicant * -ry / rx * pxp;\n\n  var centerx = cosphi * centerxp - sinphi * centeryp + (px + cx) / 2;\n  var centery = sinphi * centerxp + cosphi * centeryp + (py + cy) / 2;\n\n  var vx1 = (pxp - centerxp) / rx;\n  var vy1 = (pyp - centeryp) / ry;\n  var vx2 = (-pxp - centerxp) / rx;\n  var vy2 = (-pyp - centeryp) / ry;\n\n  var ang1 = vectorAngle(1, 0, vx1, vy1);\n  var ang2 = vectorAngle(vx1, vy1, vx2, vy2);\n\n  if (sweepFlag === 0 && ang2 > 0) {\n    ang2 -= TAU;\n  }\n\n  if (sweepFlag === 1 && ang2 < 0) {\n    ang2 += TAU;\n  }\n\n  return [centerx, centery, ang1, ang2];\n};\n\nvar arcToBezier = function arcToBezier(_ref2) {\n  var px = _ref2.px,\n      py = _ref2.py,\n      cx = _ref2.cx,\n      cy = _ref2.cy,\n      rx = _ref2.rx,\n      ry = _ref2.ry,\n      _ref2$xAxisRotation = _ref2.xAxisRotation,\n      xAxisRotation = _ref2$xAxisRotation === undefined ? 0 : _ref2$xAxisRotation,\n      _ref2$largeArcFlag = _ref2.largeArcFlag,\n      largeArcFlag = _ref2$largeArcFlag === undefined ? 0 : _ref2$largeArcFlag,\n      _ref2$sweepFlag = _ref2.sweepFlag,\n      sweepFlag = _ref2$sweepFlag === undefined ? 0 : _ref2$sweepFlag;\n\n  var curves = [];\n\n  if (rx === 0 || ry === 0) {\n    return [];\n  }\n\n  var sinphi = Math.sin(xAxisRotation * TAU / 360);\n  var cosphi = Math.cos(xAxisRotation * TAU / 360);\n\n  var pxp = cosphi * (px - cx) / 2 + sinphi * (py - cy) / 2;\n  var pyp = -sinphi * (px - cx) / 2 + cosphi * (py - cy) / 2;\n\n  if (pxp === 0 && pyp === 0) {\n    return [];\n  }\n\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n\n  var lambda = Math.pow(pxp, 2) / Math.pow(rx, 2) + Math.pow(pyp, 2) / Math.pow(ry, 2);\n\n  if (lambda > 1) {\n    rx *= Math.sqrt(lambda);\n    ry *= Math.sqrt(lambda);\n  }\n\n  var _getArcCenter = getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp),\n      _getArcCenter2 = _slicedToArray(_getArcCenter, 4),\n      centerx = _getArcCenter2[0],\n      centery = _getArcCenter2[1],\n      ang1 = _getArcCenter2[2],\n      ang2 = _getArcCenter2[3];\n\n  // If 'ang2' == 90.0000000001, then `ratio` will evaluate to\n  // 1.0000000001. This causes `segments` to be greater than one, which is an\n  // unecessary split, and adds extra points to the bezier curve. To alleviate\n  // this issue, we round to 1.0 when the ratio is close to 1.0.\n\n\n  var ratio = Math.abs(ang2) / (TAU / 4);\n  if (Math.abs(1.0 - ratio) < 0.0000001) {\n    ratio = 1.0;\n  }\n\n  var segments = Math.max(Math.ceil(ratio), 1);\n\n  ang2 /= segments;\n\n  for (var i = 0; i < segments; i++) {\n    curves.push(approxUnitArc(ang1, ang2));\n    ang1 += ang2;\n  }\n\n  return curves.map(function (curve) {\n    var _mapToEllipse = mapToEllipse(curve[0], rx, ry, cosphi, sinphi, centerx, centery),\n        x1 = _mapToEllipse.x,\n        y1 = _mapToEllipse.y;\n\n    var _mapToEllipse2 = mapToEllipse(curve[1], rx, ry, cosphi, sinphi, centerx, centery),\n        x2 = _mapToEllipse2.x,\n        y2 = _mapToEllipse2.y;\n\n    var _mapToEllipse3 = mapToEllipse(curve[2], rx, ry, cosphi, sinphi, centerx, centery),\n        x = _mapToEllipse3.x,\n        y = _mapToEllipse3.y;\n\n    return { x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y };\n  });\n};\n\nexport default arcToBezier;","/** @ignore */ /** */\r\nimport { BlendMode } from \"./Renderer\";\r\nimport { Color } from \"../../util/Color\";\r\nimport { Matrix } from \"../../util/Matrix\";\r\nimport { Percent, percent } from \"../../util/Percent\";\r\n//import { Throttler } from \"../../util/Throttler\";\r\nimport { ArrayDisposer, Disposer, DisposerClass, CounterDisposer, MultiDisposer } from \"../../util/Disposer\";\r\nimport { TextFormatter } from \"../../util/TextFormatter\";\r\nimport * as $utils from \"../../util/Utils\";\r\nimport * as $array from \"../../util/Array\";\r\nimport * as $object from \"../../util/Object\";\r\nimport * as $type from \"../../util/Type\";\r\nimport * as $math from \"../../util/Math\";\r\nimport arcToBezier from 'svg-arc-to-cubic-bezier';\r\n/**\r\n * @ignore\r\n */\r\nfunction checkArgs(name, actual, expected) {\r\n    if (actual !== expected) {\r\n        throw new Error(\"Required \" + expected + \" arguments for \" + name + \" but got \" + actual);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction checkMinArgs(name, actual, expected) {\r\n    if (actual < expected) {\r\n        throw new Error(\"Required at least \" + expected + \" arguments for \" + name + \" but got \" + actual);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction checkEvenArgs(name, actual, expected) {\r\n    checkMinArgs(name, actual, expected);\r\n    if ((actual % expected) !== 0) {\r\n        throw new Error(\"Arguments for \" + name + \" must be in pairs of \" + expected);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n * This splits the flag so that way 0017 will be processed as 0 0 17\r\n *\r\n * This is important for weird paths like `M17 5A1 1 0 0017 30 1 1 0 0017 5`\r\n */\r\nfunction splitArcFlags(args) {\r\n    for (let i = 0; i < args.length; i += 7) {\r\n        let index = i + 3;\r\n        let flag = args[index];\r\n        if (flag.length > 1) {\r\n            const a = /^([01])([01])(.*)$/.exec(flag);\r\n            if (a !== null) {\r\n                args.splice(index, 0, a[1]);\r\n                ++index;\r\n                args.splice(index, 0, a[2]);\r\n                ++index;\r\n                if (a[3].length > 0) {\r\n                    args[index] = a[3];\r\n                }\r\n                else {\r\n                    args.splice(index, 1);\r\n                }\r\n            }\r\n        }\r\n        ++index;\r\n        flag = args[index];\r\n        if (flag.length > 1) {\r\n            const a = /^([01])(.+)$/.exec(flag);\r\n            if (a !== null) {\r\n                args.splice(index, 0, a[1]);\r\n                ++index;\r\n                args[index] = a[2];\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction assertBinary(value) {\r\n    if (value === 0 || value === 1) {\r\n        return value;\r\n    }\r\n    else {\r\n        throw new Error(\"Flag must be 0 or 1\");\r\n    }\r\n}\r\n//  1 -> 0xffffff * (2 / 2)\r\n//  2 -> 0xffffff * (1 / 2)\r\n//\r\n//  3 -> 0xffffff * (3 / 4)\r\n//  4 -> 0xffffff * (1 / 4)\r\n//\r\n//  5 -> 0xffffff * (7 / 8)\r\n//  6 -> 0xffffff * (5 / 8)\r\n//  7 -> 0xffffff * (3 / 8)\r\n//  8 -> 0xffffff * (1 / 8)\r\n//\r\n//  9 -> 0xffffff * (15 / 16)\r\n// 10 -> 0xffffff * (13 / 16)\r\n// 11 -> 0xffffff * (11 / 16)\r\n// 12 -> 0xffffff *  (9 / 16)\r\n// 13 -> 0xffffff *  (7 / 16)\r\n// 14 -> 0xffffff *  (5 / 16)\r\n// 15 -> 0xffffff *  (3 / 16)\r\n// 16 -> 0xffffff *  (1 / 16)\r\n// @todo remove this old color distribution algo if the new one pans out\r\n// function distributeIdBAK(id: number): number {\r\n// \tif (id === 1) {\r\n// \t\treturn 0x000001;\r\n// \t} else {\r\n// \t\t// Finds the closest power of 2\r\n// \t\tconst base = Math.pow(2, Math.ceil(Math.log(id) / Math.log(2)));\r\n// \t\t// Translates the id into an odd fraction index\r\n// \t\tconst index = ((base - id) * 2) + 1;\r\n// \t\t// TODO is Math.round correct ?\r\n// \t\treturn Math.round(0xffffff * (index / base));\r\n// \t}\r\n// }\r\n/**\r\n * Function by smeans:\r\n * https://lowcode.life/generating-unique-contrasting-colors-in-javascript/\r\n * @ignore\r\n */\r\nfunction distributeId(id) {\r\n    const rgb = [0, 0, 0];\r\n    for (let i = 0; i < 24; i++) {\r\n        rgb[i % 3] <<= 1;\r\n        rgb[i % 3] |= id & 0x01;\r\n        id >>= 1;\r\n    }\r\n    return (rgb[2] | 0) + (rgb[1] << 8) + (rgb[0] << 16);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction eachTargets(hitTarget, f) {\r\n    for (;;) {\r\n        if (hitTarget.interactive) {\r\n            if (!f(hitTarget)) {\r\n                break;\r\n            }\r\n        }\r\n        if (hitTarget._parent) {\r\n            hitTarget = hitTarget._parent;\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n}\r\n// TODO feature detection for mouse/touch/pointer\r\n/**\r\n * @ignore\r\n */\r\nfunction onPointerEvent(element, name, f) {\r\n    return $utils.addEventListener(element, $utils.getRendererEvent(name), (event) => {\r\n        let touches = event.touches;\r\n        if (touches) {\r\n            if (touches.length == 0) {\r\n                touches = event.changedTouches;\r\n            }\r\n            f($array.copy(touches));\r\n        }\r\n        else {\r\n            f([event]);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction isTainted(image) {\r\n    const canvas = document.createElement(\"canvas\");\r\n    canvas.width = 1;\r\n    canvas.height = 1;\r\n    const context = canvas.getContext(\"2d\", { willReadFrequently: true });\r\n    context.drawImage(image, 0, 0, 1, 1);\r\n    try {\r\n        context.getImageData(0, 0, 1, 1);\r\n        return false;\r\n    }\r\n    catch (err) {\r\n        console.warn(\"Image \\\"\" + image.src + \"\\\" is loaded from different host and is not covered by CORS policy. For more information about the implications read here: https://www.amcharts.com/docs/v5/concepts/cors\");\r\n        return true;\r\n    }\r\n}\r\n/**\r\n * This is needed to workaround a bug in iOS which causes it to not GC canvas elements.\r\n *\r\n * @ignore\r\n */\r\nfunction clearCanvas(view) {\r\n    view.width = 0;\r\n    view.height = 0;\r\n    view.style.width = \"0px\";\r\n    view.style.height = \"0px\";\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasPivot {\r\n    constructor() {\r\n        Object.defineProperty(this, \"_x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    get x() {\r\n        return this._x;\r\n    }\r\n    get y() {\r\n        return this._y;\r\n    }\r\n    set x(value) {\r\n        this._x = value;\r\n    }\r\n    set y(value) {\r\n        this._y = value;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasDisplayObject extends DisposerClass {\r\n    constructor(renderer) {\r\n        super();\r\n        Object.defineProperty(this, \"_layer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"mask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"visible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"exportable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"interactive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"inactive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"wheelable\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"cancelTouch\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"isMeasured\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"buttonMode\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"alpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"compoundAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"angle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"scale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"crisp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"pivot\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new CanvasPivot()\r\n        });\r\n        Object.defineProperty(this, \"filter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"cursorOverStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_replacedCursorStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_localMatrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        Object.defineProperty(this, \"_matrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        // TODO can this be replaced with _localMatrix ?\r\n        Object.defineProperty(this, \"_uMatrix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Matrix()\r\n        });\r\n        Object.defineProperty(this, \"_renderer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_parent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_localBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_bounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_colorId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._renderer = renderer;\r\n    }\r\n    _dispose() {\r\n        this._renderer._removeObject(this);\r\n        this.getLayer().dirty = true;\r\n    }\r\n    getCanvas() {\r\n        return this.getLayer().view;\r\n    }\r\n    getLayer() {\r\n        let self = this;\r\n        for (;;) {\r\n            if (self._layer) {\r\n                return self._layer;\r\n            }\r\n            else if (self._parent) {\r\n                self = self._parent;\r\n            }\r\n            else {\r\n                return this._renderer.defaultLayer;\r\n            }\r\n        }\r\n    }\r\n    setLayer(order, margin) {\r\n        if (order == null) {\r\n            this._layer = undefined;\r\n        }\r\n        else {\r\n            const visible = true;\r\n            this._layer = this._renderer.getLayer(order, visible);\r\n            this._layer.visible = visible;\r\n            this._layer.margin = margin;\r\n            if (margin) {\r\n                $utils.setInteractive(this._layer.view, false);\r\n            }\r\n            this._renderer._ghostLayer.setMargin(this._renderer.layers);\r\n            if (this._parent) {\r\n                this._parent.registerChildLayer(this._layer);\r\n            }\r\n            this._renderer.resizeLayer(this._layer);\r\n            this._renderer.resizeGhost();\r\n        }\r\n    }\r\n    markDirtyLayer() {\r\n        this.getLayer().dirty = true;\r\n    }\r\n    clear() {\r\n        this.invalidateBounds();\r\n    }\r\n    invalidateBounds() {\r\n        this._localBounds = undefined;\r\n    }\r\n    _addBounds(_bounds) { }\r\n    _getColorId() {\r\n        if (this._colorId === undefined) {\r\n            this._colorId = this._renderer.paintId(this);\r\n        }\r\n        return this._colorId;\r\n    }\r\n    _isInteractive() {\r\n        return this.inactive == false && (this.interactive || this._renderer._forceInteractive > 0);\r\n    }\r\n    _isInteractiveMask() {\r\n        return this._isInteractive();\r\n    }\r\n    contains(child) {\r\n        for (;;) {\r\n            if (child === this) {\r\n                return true;\r\n            }\r\n            else if (child._parent) {\r\n                child = child._parent;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    toGlobal(point) {\r\n        return this._matrix.apply(point);\r\n    }\r\n    toLocal(point) {\r\n        return this._matrix.applyInverse(point);\r\n    }\r\n    getLocalMatrix() {\r\n        this._uMatrix.setTransform(0, 0, this.pivot.x, this.pivot.y, this.angle * Math.PI / 180, this.scale);\r\n        return this._uMatrix;\r\n    }\r\n    getLocalBounds() {\r\n        if (!this._localBounds) {\r\n            const bn = 10000000;\r\n            this._localBounds = {\r\n                left: bn,\r\n                top: bn,\r\n                right: -bn,\r\n                bottom: -bn\r\n            };\r\n            this._addBounds(this._localBounds);\r\n        }\r\n        return this._localBounds;\r\n    }\r\n    getAdjustedBounds(bounds) {\r\n        this._setMatrix();\r\n        const matrix = this.getLocalMatrix();\r\n        const p0 = matrix.apply({ x: bounds.left, y: bounds.top });\r\n        const p1 = matrix.apply({ x: bounds.right, y: bounds.top });\r\n        const p2 = matrix.apply({ x: bounds.right, y: bounds.bottom });\r\n        const p3 = matrix.apply({ x: bounds.left, y: bounds.bottom });\r\n        return {\r\n            left: Math.min(p0.x, p1.x, p2.x, p3.x),\r\n            top: Math.min(p0.y, p1.y, p2.y, p3.y),\r\n            right: Math.max(p0.x, p1.x, p2.x, p3.x),\r\n            bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\r\n        };\r\n    }\r\n    on(key, callback, context) {\r\n        if (this.interactive) {\r\n            return this._renderer._addEvent(this, key, callback, context);\r\n        }\r\n        else {\r\n            return new Disposer(() => { });\r\n        }\r\n    }\r\n    _setMatrix() {\r\n        // TODO only calculate this if it has actually changed\r\n        this._localMatrix.setTransform(this.x, this.y, this.pivot.x, this.pivot.y, \r\n        // Converts degrees to radians\r\n        this.angle * Math.PI / 180, this.scale);\r\n        this._matrix.copyFrom(this._localMatrix);\r\n        if (this._parent) {\r\n            // TODO only calculate this if it has actually changed\r\n            this._matrix.prepend(this._parent._matrix);\r\n        }\r\n    }\r\n    _transform(context, resolution) {\r\n        const m = this._matrix;\r\n        let tx = m.tx * resolution;\r\n        let ty = m.ty * resolution;\r\n        if (this.crisp) {\r\n            tx = Math.floor(tx) + .5;\r\n            ty = Math.floor(ty) + .5;\r\n        }\r\n        context.setTransform(m.a * resolution, m.b * resolution, m.c * resolution, m.d * resolution, tx, ty);\r\n    }\r\n    _transformMargin(context, resolution, margin) {\r\n        const m = this._matrix;\r\n        context.setTransform(m.a * resolution, m.b * resolution, m.c * resolution, m.d * resolution, (m.tx + margin.left) * resolution, (m.ty + margin.top) * resolution);\r\n    }\r\n    _transformLayer(context, resolution, layer) {\r\n        if (layer.margin) {\r\n            this._transformMargin(context, layer.scale || resolution, layer.margin);\r\n        }\r\n        else {\r\n            this._transform(context, layer.scale || resolution);\r\n        }\r\n    }\r\n    render(parentLayer) {\r\n        if (this.visible && (this.exportable !== false || !this._renderer._omitTainted)) {\r\n            this._setMatrix();\r\n            const resolution = this._renderer.resolution;\r\n            const layers = this._renderer.layers;\r\n            const ghostLayer = this._renderer._ghostLayer;\r\n            const ghostContext = ghostLayer.context;\r\n            const mask = this.mask;\r\n            if (mask) {\r\n                mask._setMatrix();\r\n            }\r\n            // TODO improve this\r\n            $array.each(layers, (layer) => {\r\n                if (layer) {\r\n                    const context = layer.context;\r\n                    context.save();\r\n                    // We must apply the mask before we transform the element\r\n                    if (mask) {\r\n                        mask._transformLayer(context, resolution, layer);\r\n                        mask._runPath(context);\r\n                        context.clip();\r\n                    }\r\n                    context.globalAlpha = this.compoundAlpha * this.alpha;\r\n                    this._transformLayer(context, resolution, layer);\r\n                    if (this.filter) {\r\n                        context.filter = this.filter;\r\n                    }\r\n                }\r\n            });\r\n            ghostContext.save();\r\n            // We must apply the mask before we transform the element\r\n            if (mask && this._isInteractiveMask()) {\r\n                mask._transformMargin(ghostContext, resolution, ghostLayer.margin);\r\n                mask._runPath(ghostContext);\r\n                ghostContext.clip();\r\n            }\r\n            this._transformMargin(ghostContext, resolution, ghostLayer.margin);\r\n            this._render(parentLayer);\r\n            ghostContext.restore();\r\n            $array.each(layers, (layer) => {\r\n                if (layer) {\r\n                    layer.context.restore();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _render(parentLayer) {\r\n        if (this.exportable === false) {\r\n            const layer = this._layer || parentLayer;\r\n            layer.tainted = true;\r\n        }\r\n    }\r\n    hovering() {\r\n        return this._renderer._hovering.has(this);\r\n    }\r\n    dragging() {\r\n        return this._renderer._dragging.some((x) => x.value === this);\r\n    }\r\n    shouldCancelTouch() {\r\n        const renderer = this._renderer;\r\n        if (renderer.tapToActivate && !renderer._touchActive) {\r\n            return false;\r\n        }\r\n        if (this.cancelTouch) {\r\n            return true;\r\n        }\r\n        else if (this._parent) {\r\n            return this._parent.shouldCancelTouch();\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasContainer extends CanvasDisplayObject {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"interactiveChildren\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_childLayers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_children\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n    _isInteractiveMask() {\r\n        return this.interactiveChildren || super._isInteractiveMask();\r\n    }\r\n    addChild(child) {\r\n        child._parent = this;\r\n        this._children.push(child);\r\n        if (child._layer) {\r\n            this.registerChildLayer(child._layer);\r\n        }\r\n    }\r\n    addChildAt(child, index) {\r\n        child._parent = this;\r\n        this._children.splice(index, 0, child);\r\n        if (child._layer) {\r\n            this.registerChildLayer(child._layer);\r\n        }\r\n    }\r\n    removeChild(child) {\r\n        child._parent = undefined;\r\n        $array.removeFirst(this._children, child);\r\n    }\r\n    _render(parentLayer) {\r\n        super._render(parentLayer);\r\n        const renderer = this._renderer;\r\n        if (this.interactive && this.interactiveChildren) {\r\n            ++renderer._forceInteractive;\r\n        }\r\n        const layer = this._layer || parentLayer;\r\n        $array.each(this._children, (child) => {\r\n            child.compoundAlpha = this.compoundAlpha * this.alpha;\r\n            child.render(layer);\r\n        });\r\n        if (this.interactive && this.interactiveChildren) {\r\n            --renderer._forceInteractive;\r\n        }\r\n    }\r\n    registerChildLayer(layer) {\r\n        if (!this._childLayers) {\r\n            this._childLayers = [];\r\n        }\r\n        $array.pushOne(this._childLayers, layer);\r\n        if (this._parent) {\r\n            this._parent.registerChildLayer(layer);\r\n        }\r\n    }\r\n    markDirtyLayer(deep = false) {\r\n        super.markDirtyLayer();\r\n        if (deep && this._childLayers) {\r\n            $array.each(this._childLayers, (layer) => layer.dirty = true);\r\n        }\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        if (this._childLayers) {\r\n            $array.each(this._childLayers, (layer) => {\r\n                layer.dirty = true;\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction setPoint(bounds, point) {\r\n    bounds.left = Math.min(bounds.left, point.x);\r\n    bounds.top = Math.min(bounds.top, point.y);\r\n    bounds.right = Math.max(bounds.right, point.x);\r\n    bounds.bottom = Math.max(bounds.bottom, point.y);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Op {\r\n    colorize(_context, _forceColor) { }\r\n    path(_context) { }\r\n    addBounds(_bounds) { }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass BeginFill extends Op {\r\n    constructor(color) {\r\n        super();\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n    }\r\n    colorize(context, forceColor) {\r\n        if (forceColor !== undefined) {\r\n            context.fillStyle = forceColor;\r\n        }\r\n        else {\r\n            context.fillStyle = this.color;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass EndFill extends Op {\r\n    constructor(clearShadow) {\r\n        super();\r\n        Object.defineProperty(this, \"clearShadow\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: clearShadow\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.fill();\r\n        if (this.clearShadow) {\r\n            context.shadowColor = \"\";\r\n            context.shadowBlur = 0;\r\n            context.shadowOffsetX = 0;\r\n            context.shadowOffsetY = 0;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass EndStroke extends Op {\r\n    colorize(context, _forceColor) {\r\n        context.stroke();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineStyle extends Op {\r\n    constructor(width, color, lineJoin) {\r\n        super();\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n        Object.defineProperty(this, \"lineJoin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: lineJoin\r\n        });\r\n    }\r\n    colorize(context, forceColor) {\r\n        if (forceColor !== undefined) {\r\n            context.strokeStyle = forceColor;\r\n        }\r\n        else {\r\n            context.strokeStyle = this.color;\r\n        }\r\n        context.lineWidth = this.width;\r\n        if (this.lineJoin) {\r\n            context.lineJoin = this.lineJoin;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineDash extends Op {\r\n    constructor(dash) {\r\n        super();\r\n        Object.defineProperty(this, \"dash\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: dash\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.setLineDash(this.dash);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineDashOffset extends Op {\r\n    constructor(dashOffset) {\r\n        super();\r\n        Object.defineProperty(this, \"dashOffset\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: dashOffset\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        context.lineDashOffset = this.dashOffset;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawRect extends Op {\r\n    constructor(x, y, width, height) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: height\r\n        });\r\n    }\r\n    path(context) {\r\n        context.rect(this.x, this.y, this.width, this.height);\r\n    }\r\n    addBounds(bounds) {\r\n        const l = this.x;\r\n        const t = this.y;\r\n        const r = l + this.width;\r\n        const b = t + this.height;\r\n        setPoint(bounds, { x: l, y: t });\r\n        setPoint(bounds, { x: r, y: t });\r\n        setPoint(bounds, { x: l, y: b });\r\n        setPoint(bounds, { x: r, y: b });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawCircle extends Op {\r\n    constructor(x, y, radius) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n    }\r\n    path(context) {\r\n        context.moveTo(this.x + this.radius, this.y);\r\n        context.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\r\n    }\r\n    // TODO handle skewing and rotation\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x - this.radius, y: this.y - this.radius });\r\n        setPoint(bounds, { x: this.x + this.radius, y: this.y + this.radius });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass DrawEllipse extends Op {\r\n    constructor(x, y, radiusX, radiusY) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n        Object.defineProperty(this, \"radiusX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radiusX\r\n        });\r\n        Object.defineProperty(this, \"radiusY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radiusY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.ellipse(0, 0, this.radiusX, this.radiusY, 0, 0, Math.PI * 2);\r\n    }\r\n    // TODO handle skewing and rotation\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x - this.radiusX, y: this.y - this.radiusY });\r\n        setPoint(bounds, { x: this.x + this.radiusX, y: this.y + this.radiusY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Arc extends Op {\r\n    constructor(cx, cy, radius, startAngle, endAngle, anticlockwise) {\r\n        super();\r\n        Object.defineProperty(this, \"cx\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cx\r\n        });\r\n        Object.defineProperty(this, \"cy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cy\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n        Object.defineProperty(this, \"startAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: startAngle\r\n        });\r\n        Object.defineProperty(this, \"endAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: endAngle\r\n        });\r\n        Object.defineProperty(this, \"anticlockwise\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: anticlockwise\r\n        });\r\n    }\r\n    path(context) {\r\n        if (this.radius > 0) {\r\n            context.arc(this.cx, this.cy, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\r\n        }\r\n    }\r\n    addBounds(bounds) {\r\n        let arcBounds = $math.getArcBounds(this.cx, this.cy, this.startAngle * $math.DEGREES, this.endAngle * $math.DEGREES, this.radius);\r\n        setPoint(bounds, { x: arcBounds.left, y: arcBounds.top });\r\n        setPoint(bounds, { x: arcBounds.right, y: arcBounds.bottom });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass ArcTo extends Op {\r\n    constructor(x1, y1, x2, y2, radius) {\r\n        super();\r\n        Object.defineProperty(this, \"x1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x1\r\n        });\r\n        Object.defineProperty(this, \"y1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y1\r\n        });\r\n        Object.defineProperty(this, \"x2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x2\r\n        });\r\n        Object.defineProperty(this, \"y2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y2\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: radius\r\n        });\r\n    }\r\n    path(context) {\r\n        if (this.radius > 0) {\r\n            context.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\r\n        }\r\n    }\r\n    // TODO: add points\r\n    addBounds(_bounds) {\r\n        /*\r\n        // not finished\r\n        https://math.stackexchange.com/questions/1781438/finding-the-center-of-a-circle-given-two-points-and-a-radius-algebraically\r\n\r\n        if (prevPoint) {\r\n            let x1 = prevPoint.x;\r\n            let y1 = prevPoint.y;\r\n            let x2 = this.x2;\r\n            let y2 = this.y2;\r\n            let r = this.radius;\r\n\r\n            let xa = (x2 - x1) / 2;\r\n            let ya = (y2 - y1) / 2;\r\n\r\n            let x0 = x1 + xa;\r\n            let y0 = y1 + ya;\r\n\r\n            let a = Math.hypot(xa, ya);\r\n            let b = Math.sqrt(r * r - a * a);\r\n\r\n            let cx = x0 + b * ya / a;\r\n            let cy = y0 - b * xa / a;\r\n\r\n            console.log(cx, cy);\r\n        }*/\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass LineTo extends Op {\r\n    constructor(x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.lineTo(this.x, this.y);\r\n    }\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass MoveTo extends Op {\r\n    constructor(x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.moveTo(this.x, this.y);\r\n    }\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass ClosePath extends Op {\r\n    path(context) {\r\n        context.closePath();\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass BezierCurveTo extends Op {\r\n    constructor(cpX, cpY, cpX2, cpY2, toX, toY) {\r\n        super();\r\n        Object.defineProperty(this, \"cpX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX\r\n        });\r\n        Object.defineProperty(this, \"cpY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY\r\n        });\r\n        Object.defineProperty(this, \"cpX2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX2\r\n        });\r\n        Object.defineProperty(this, \"cpY2\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY2\r\n        });\r\n        Object.defineProperty(this, \"toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toX\r\n        });\r\n        Object.defineProperty(this, \"toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.bezierCurveTo(this.cpX, this.cpY, this.cpX2, this.cpY2, this.toX, this.toY);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.cpX, y: this.cpY });\r\n        setPoint(bounds, { x: this.cpX2, y: this.cpY2 });\r\n        setPoint(bounds, { x: this.toX, y: this.toY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass QuadraticCurveTo extends Op {\r\n    constructor(cpX, cpY, toX, toY) {\r\n        super();\r\n        Object.defineProperty(this, \"cpX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpX\r\n        });\r\n        Object.defineProperty(this, \"cpY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: cpY\r\n        });\r\n        Object.defineProperty(this, \"toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toX\r\n        });\r\n        Object.defineProperty(this, \"toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: toY\r\n        });\r\n    }\r\n    path(context) {\r\n        context.quadraticCurveTo(this.cpX, this.cpY, this.toX, this.toY);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.cpX, y: this.cpY });\r\n        setPoint(bounds, { x: this.toX, y: this.toY });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass Shadow extends Op {\r\n    constructor(color, blur, offsetX, offsetY, opacity) {\r\n        super();\r\n        Object.defineProperty(this, \"color\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: color\r\n        });\r\n        Object.defineProperty(this, \"blur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: blur\r\n        });\r\n        Object.defineProperty(this, \"offsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: offsetX\r\n        });\r\n        Object.defineProperty(this, \"offsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: offsetY\r\n        });\r\n        Object.defineProperty(this, \"opacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: opacity\r\n        });\r\n    }\r\n    colorize(context, _forceColor) {\r\n        if (this.opacity) {\r\n            context.fillStyle = this.color;\r\n        }\r\n        context.shadowColor = this.color;\r\n        context.shadowBlur = this.blur;\r\n        context.shadowOffsetX = this.offsetX;\r\n        context.shadowOffsetY = this.offsetY;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass GraphicsImage extends Op {\r\n    constructor(image, width, height, x, y) {\r\n        super();\r\n        Object.defineProperty(this, \"image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: image\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: width\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: height\r\n        });\r\n        Object.defineProperty(this, \"x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: x\r\n        });\r\n        Object.defineProperty(this, \"y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: y\r\n        });\r\n    }\r\n    path(context) {\r\n        context.drawImage(this.image, this.x, this.y, this.width, this.height);\r\n    }\r\n    // TODO: OK?\r\n    addBounds(bounds) {\r\n        setPoint(bounds, { x: this.x, y: this.y });\r\n        setPoint(bounds, { x: this.width, y: this.height });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasGraphics extends CanvasDisplayObject {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_operations\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"blendMode\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: BlendMode.NORMAL\r\n        });\r\n        Object.defineProperty(this, \"_hasShadows\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_fillAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeAlpha\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    clear() {\r\n        super.clear();\r\n        this._operations.length = 0;\r\n    }\r\n    _pushOp(op) {\r\n        this._operations.push(op);\r\n    }\r\n    beginFill(color, alpha = 1) {\r\n        this._fillAlpha = alpha;\r\n        if (color) {\r\n            if (color instanceof Color) {\r\n                this._pushOp(new BeginFill(color.toCSS(alpha)));\r\n            }\r\n            else {\r\n                this.isMeasured = true;\r\n                this._pushOp(new BeginFill(color));\r\n            }\r\n        }\r\n        else {\r\n            this._pushOp(new BeginFill(\"rgba(0, 0, 0, \" + alpha + \")\"));\r\n        }\r\n    }\r\n    endFill() {\r\n        this._pushOp(new EndFill(this._hasShadows));\r\n    }\r\n    endStroke() {\r\n        this._pushOp(new EndStroke());\r\n    }\r\n    lineStyle(width = 0, color, alpha = 1, lineJoin) {\r\n        this._strokeAlpha = alpha;\r\n        if (color) {\r\n            if (color instanceof Color) {\r\n                this._pushOp(new LineStyle(width, color.toCSS(alpha), lineJoin));\r\n            }\r\n            else {\r\n                this._pushOp(new LineStyle(width, color, lineJoin));\r\n            }\r\n        }\r\n        else {\r\n            this._pushOp(new LineStyle(width, \"rgba(0, 0, 0, \" + alpha + \")\", lineJoin));\r\n        }\r\n    }\r\n    setLineDash(dash) {\r\n        this._pushOp(new LineDash(dash ? dash : []));\r\n    }\r\n    setLineDashOffset(dashOffset = 0) {\r\n        this._pushOp(new LineDashOffset(dashOffset));\r\n    }\r\n    drawRect(x, y, width, height) {\r\n        this._pushOp(new DrawRect(x, y, width, height));\r\n    }\r\n    drawCircle(x, y, radius) {\r\n        this._pushOp(new DrawCircle(x, y, radius));\r\n    }\r\n    drawEllipse(x, y, radiusX, radiusY) {\r\n        this._pushOp(new DrawEllipse(x, y, radiusX, radiusY));\r\n    }\r\n    arc(cx, cy, radius, startAngle, endAngle, anticlockwise = false) {\r\n        this._pushOp(new Arc(cx, cy, radius, startAngle, endAngle, anticlockwise));\r\n    }\r\n    arcTo(x1, y1, x2, y2, radius) {\r\n        this._pushOp(new ArcTo(x1, y1, x2, y2, radius));\r\n    }\r\n    lineTo(x, y) {\r\n        this._pushOp(new LineTo(x, y));\r\n    }\r\n    moveTo(x, y) {\r\n        this._pushOp(new MoveTo(x, y));\r\n    }\r\n    bezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY) {\r\n        this._pushOp(new BezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY));\r\n    }\r\n    quadraticCurveTo(cpX, cpY, toX, toY) {\r\n        this._pushOp(new QuadraticCurveTo(cpX, cpY, toX, toY));\r\n    }\r\n    closePath() {\r\n        this._pushOp(new ClosePath());\r\n    }\r\n    shadow(color, blur = 0, offsetX = 0, offsetY = 0, opacity) {\r\n        this._hasShadows = true;\r\n        this._pushOp(new Shadow(opacity ? color.toCSS(opacity) : color.toCSS(this._fillAlpha || this._strokeAlpha), blur, offsetX, offsetY));\r\n    }\r\n    image(image, width, height, x, y) {\r\n        this._pushOp(new GraphicsImage(image, width, height, x, y));\r\n    }\r\n    // https://svgwg.org/svg2-draft/paths.html#DProperty\r\n    // TODO better error checking\r\n    svgPath(path) {\r\n        let x = 0;\r\n        let y = 0;\r\n        let cpx = null;\r\n        let cpy = null;\r\n        let qcpx = null;\r\n        let qcpy = null;\r\n        const SEGMENTS_REGEXP = /([MmZzLlHhVvCcSsQqTtAa])([^MmZzLlHhVvCcSsQqTtAa]*)/g;\r\n        const ARGS_REGEXP = /[\\u0009\\u0020\\u000A\\u000C\\u000D]*([\\+\\-]?[0-9]*\\.?[0-9]+(?:[eE][\\+\\-]?[0-9]+)?)[\\u0009\\u0020\\u000A\\u000C\\u000D]*,?/g;\r\n        let match;\r\n        while ((match = SEGMENTS_REGEXP.exec(path)) !== null) {\r\n            const name = match[1];\r\n            const rest = match[2];\r\n            const args = [];\r\n            while ((match = ARGS_REGEXP.exec(rest)) !== null) {\r\n                args.push(match[1]);\r\n            }\r\n            // Reset control point\r\n            if (name !== \"S\" && name !== \"s\" && name !== \"C\" && name !== \"c\") {\r\n                cpx = null;\r\n                cpy = null;\r\n            }\r\n            // Reset control point\r\n            if (name !== \"Q\" && name !== \"q\" && name !== \"T\" && name !== \"t\") {\r\n                qcpx = null;\r\n                qcpy = null;\r\n            }\r\n            switch (name) {\r\n                case \"M\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    x = +args[0];\r\n                    y = +args[1];\r\n                    this.moveTo(x, y);\r\n                    for (let i = 2; i < args.length; i += 2) {\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"m\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    x += +args[0];\r\n                    y += +args[1];\r\n                    this.moveTo(x, y);\r\n                    for (let i = 2; i < args.length; i += 2) {\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"L\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"l\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"H\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        x = +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"h\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        x += +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"V\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        y = +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"v\":\r\n                    checkMinArgs(name, args.length, 1);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        y += +args[i];\r\n                        this.lineTo(x, y);\r\n                    }\r\n                    break;\r\n                case \"C\":\r\n                    checkEvenArgs(name, args.length, 6);\r\n                    for (let i = 0; i < args.length; i += 6) {\r\n                        const x1 = +args[i];\r\n                        const y1 = +args[i + 1];\r\n                        cpx = +args[i + 2];\r\n                        cpy = +args[i + 3];\r\n                        x = +args[i + 4];\r\n                        y = +args[i + 5];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"c\":\r\n                    checkEvenArgs(name, args.length, 6);\r\n                    for (let i = 0; i < args.length; i += 6) {\r\n                        const x1 = +args[i] + x;\r\n                        const y1 = +args[i + 1] + y;\r\n                        cpx = +args[i + 2] + x;\r\n                        cpy = +args[i + 3] + y;\r\n                        x += +args[i + 4];\r\n                        y += +args[i + 5];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"S\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    if (cpx === null || cpy === null) {\r\n                        cpx = x;\r\n                        cpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        const x1 = 2 * x - cpx;\r\n                        const y1 = 2 * y - cpy;\r\n                        cpx = +args[i];\r\n                        cpy = +args[i + 1];\r\n                        x = +args[i + 2];\r\n                        y = +args[i + 3];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"s\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    if (cpx === null || cpy === null) {\r\n                        cpx = x;\r\n                        cpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        const x1 = 2 * x - cpx;\r\n                        const y1 = 2 * y - cpy;\r\n                        cpx = +args[i] + x;\r\n                        cpy = +args[i + 1] + y;\r\n                        x += +args[i + 2];\r\n                        y += +args[i + 3];\r\n                        this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"Q\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        qcpx = +args[i];\r\n                        qcpy = +args[i + 1];\r\n                        x = +args[i + 2];\r\n                        y = +args[i + 3];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"q\":\r\n                    checkEvenArgs(name, args.length, 4);\r\n                    for (let i = 0; i < args.length; i += 4) {\r\n                        qcpx = +args[i] + x;\r\n                        qcpy = +args[i + 1] + y;\r\n                        x += +args[i + 2];\r\n                        y += +args[i + 3];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"T\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    if (qcpx === null || qcpy === null) {\r\n                        qcpx = x;\r\n                        qcpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        qcpx = 2 * x - qcpx;\r\n                        qcpy = 2 * y - qcpy;\r\n                        x = +args[i];\r\n                        y = +args[i + 1];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"t\":\r\n                    checkEvenArgs(name, args.length, 2);\r\n                    if (qcpx === null || qcpy === null) {\r\n                        qcpx = x;\r\n                        qcpy = y;\r\n                    }\r\n                    for (let i = 0; i < args.length; i += 2) {\r\n                        qcpx = 2 * x - qcpx;\r\n                        qcpy = 2 * y - qcpy;\r\n                        x += +args[i];\r\n                        y += +args[i + 1];\r\n                        this.quadraticCurveTo(qcpx, qcpy, x, y);\r\n                    }\r\n                    break;\r\n                case \"A\":\r\n                case \"a\":\r\n                    const relative = (name === \"a\");\r\n                    splitArcFlags(args);\r\n                    checkEvenArgs(name, args.length, 7);\r\n                    for (let i = 0; i < args.length; i += 7) {\r\n                        let cx = +args[i + 5];\r\n                        let cy = +args[i + 6];\r\n                        if (relative) {\r\n                            cx += x;\r\n                            cy += y;\r\n                        }\r\n                        const bs = arcToBezier({\r\n                            px: x,\r\n                            py: y,\r\n                            rx: +args[i],\r\n                            ry: +args[i + 1],\r\n                            xAxisRotation: +args[i + 2],\r\n                            largeArcFlag: assertBinary(+args[i + 3]),\r\n                            sweepFlag: assertBinary(+args[i + 4]),\r\n                            cx,\r\n                            cy,\r\n                        });\r\n                        $array.each(bs, (b) => {\r\n                            this.bezierCurveTo(b.x1, b.y1, b.x2, b.y2, b.x, b.y);\r\n                            x = b.x;\r\n                            y = b.y;\r\n                        });\r\n                    }\r\n                    break;\r\n                case \"Z\":\r\n                case \"z\":\r\n                    checkArgs(name, args.length, 0);\r\n                    this.closePath();\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    _runPath(context) {\r\n        context.beginPath();\r\n        $array.each(this._operations, (op) => {\r\n            op.path(context);\r\n        });\r\n    }\r\n    _render(parentLayer) {\r\n        super._render(parentLayer);\r\n        const layer = this._layer || parentLayer;\r\n        const layerDirty = layer.dirty;\r\n        const interactive = this._isInteractive();\r\n        if (layerDirty || interactive) {\r\n            const context = layer.context;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            if (layerDirty) {\r\n                context.globalCompositeOperation = this.blendMode;\r\n                context.beginPath();\r\n            }\r\n            let color;\r\n            if (interactive) {\r\n                ghostContext.beginPath();\r\n                color = this._getColorId();\r\n            }\r\n            $array.each(this._operations, (op) => {\r\n                if (layerDirty) {\r\n                    op.path(context);\r\n                    op.colorize(context, undefined);\r\n                }\r\n                if (interactive) {\r\n                    op.path(ghostContext);\r\n                    op.colorize(ghostContext, color);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    renderDetached(context) {\r\n        if (this.visible) {\r\n            this._setMatrix();\r\n            context.save();\r\n            // We must apply the mask before we transform the element\r\n            const mask = this.mask;\r\n            if (mask) {\r\n                mask._setMatrix();\r\n                mask._transform(context, 1);\r\n                mask._runPath(context);\r\n                context.clip();\r\n            }\r\n            // TODO handle compoundAlpha somehow ?\r\n            context.globalAlpha = this.compoundAlpha * this.alpha;\r\n            this._transform(context, 1);\r\n            if (this.filter) {\r\n                context.filter = this.filter;\r\n            }\r\n            context.globalCompositeOperation = this.blendMode;\r\n            context.beginPath();\r\n            $array.each(this._operations, (op) => {\r\n                op.path(context);\r\n                op.colorize(context, undefined);\r\n            });\r\n            context.restore();\r\n        }\r\n    }\r\n    _addBounds(bounds) {\r\n        if (this.visible && this.isMeasured) {\r\n            $array.each(this._operations, (op) => {\r\n                op.addBounds(bounds);\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasText extends CanvasDisplayObject {\r\n    constructor(renderer, text, style) {\r\n        super(renderer);\r\n        Object.defineProperty(this, \"text\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"style\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"resolution\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_textInfo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_textVisible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_originalScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        this.text = text;\r\n        this.style = style;\r\n    }\r\n    invalidateBounds() {\r\n        super.invalidateBounds();\r\n        this._textInfo = undefined;\r\n    }\r\n    _shared(context) {\r\n        if (this.style.textAlign) {\r\n            context.textAlign = this.style.textAlign;\r\n        }\r\n        if (this.style.direction) {\r\n            context.direction = this.style.direction;\r\n        }\r\n        if (this.style.textBaseline) {\r\n            context.textBaseline = this.style.textBaseline;\r\n        }\r\n    }\r\n    _prerender(layer, ignoreGhost = false, ignoreFontWeight = false) {\r\n        super._render(layer);\r\n        const context = layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        // Font style\r\n        const style = this.style;\r\n        let fontStyle = this._getFontStyle(undefined, ignoreFontWeight);\r\n        context.font = fontStyle;\r\n        if (this._isInteractive() && !ignoreGhost) {\r\n            ghostContext.font = fontStyle;\r\n        }\r\n        // Other parameters\r\n        if (style.fill) {\r\n            if (style.fill instanceof Color) {\r\n                context.fillStyle = style.fill.toCSS(style.fillOpacity != undefined ? style.fillOpacity : 1);\r\n            }\r\n            else {\r\n                context.fillStyle = style.fill;\r\n            }\r\n        }\r\n        if (style.shadowColor) {\r\n            layer.context.shadowColor = style.shadowColor.toCSS(style.shadowOpacity || 1);\r\n        }\r\n        if (style.shadowBlur) {\r\n            layer.context.shadowBlur = style.shadowBlur;\r\n        }\r\n        if (style.shadowOffsetX) {\r\n            layer.context.shadowOffsetX = style.shadowOffsetX;\r\n        }\r\n        if (style.shadowOffsetY) {\r\n            layer.context.shadowOffsetY = style.shadowOffsetY;\r\n        }\r\n        this._shared(context);\r\n        if (this._isInteractive() && !ignoreGhost) {\r\n            ghostContext.fillStyle = this._getColorId();\r\n            this._shared(ghostContext);\r\n        }\r\n    }\r\n    _getFontStyle(style2, ignoreFontWeight = false) {\r\n        // Process defaults\r\n        const style = this.style;\r\n        let fontStyle = [];\r\n        if (style2 && style2.fontVariant) {\r\n            fontStyle.push(style2.fontVariant);\r\n        }\r\n        else if (style.fontVariant) {\r\n            fontStyle.push(style.fontVariant);\r\n        }\r\n        if (!ignoreFontWeight) {\r\n            if (style2 && style2.fontWeight) {\r\n                fontStyle.push(style2.fontWeight);\r\n            }\r\n            else if (style.fontWeight) {\r\n                fontStyle.push(style.fontWeight);\r\n            }\r\n        }\r\n        if (style2 && style2.fontStyle) {\r\n            fontStyle.push(style2.fontStyle);\r\n        }\r\n        else if (style.fontStyle) {\r\n            fontStyle.push(style.fontStyle);\r\n        }\r\n        if (style2 && style2.fontSize) {\r\n            if ($type.isNumber(style2.fontSize)) {\r\n                style2.fontSize = style2.fontSize + \"px\";\r\n            }\r\n            fontStyle.push(style2.fontSize);\r\n        }\r\n        else if (style.fontSize) {\r\n            if ($type.isNumber(style.fontSize)) {\r\n                style.fontSize = style.fontSize + \"px\";\r\n            }\r\n            fontStyle.push(style.fontSize);\r\n        }\r\n        if (style2 && style2.fontFamily) {\r\n            fontStyle.push(style2.fontFamily);\r\n        }\r\n        else if (style.fontFamily) {\r\n            fontStyle.push(style.fontFamily);\r\n        }\r\n        else if (fontStyle.length) {\r\n            fontStyle.push(\"Arial\");\r\n        }\r\n        return fontStyle.join(\" \");\r\n    }\r\n    _render(parentLayer) {\r\n        const layer = this._layer || parentLayer;\r\n        // We need measurements in order to properly position text for alignment\r\n        if (!this._textInfo) {\r\n            this._measure(layer);\r\n        }\r\n        if (this._textVisible) {\r\n            const interactive = this._isInteractive();\r\n            const context = layer.context;\r\n            const layerDirty = layer.dirty;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            context.save();\r\n            ghostContext.save();\r\n            this._prerender(layer);\r\n            // const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n            // const x = this._localBounds && (this._localBounds.left < 0) ? Math.abs(this._localBounds.left) : 0;\r\n            // Process text info produced by _measure()\r\n            $array.each(this._textInfo, (line, _index) => {\r\n                $array.each(line.textChunks, (chunk, _index) => {\r\n                    // Set style\r\n                    if (chunk.style) {\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        context.font = chunk.style;\r\n                        if (this._isInteractive()) {\r\n                            ghostContext.font = chunk.style;\r\n                        }\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.save();\r\n                        context.fillStyle = chunk.fill.toCSS();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Draw text\r\n                    if (layerDirty) {\r\n                        context.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\r\n                    }\r\n                    // Draw underline\r\n                    if (chunk.textDecoration == \"underline\" || chunk.textDecoration == \"line-through\") {\r\n                        let thickness = 1;\r\n                        let offset = 1;\r\n                        let fontSize = chunk.height;\r\n                        let offsetX = chunk.offsetX;\r\n                        switch (this.style.textAlign) {\r\n                            case \"right\":\r\n                            case \"end\":\r\n                                offsetX -= chunk.width;\r\n                                break;\r\n                            case \"center\":\r\n                                offsetX -= chunk.width / 2;\r\n                                break;\r\n                        }\r\n                        if (chunk.style) {\r\n                            const format = TextFormatter.getTextStyle(chunk.style);\r\n                            switch (format.fontWeight) {\r\n                                case \"bolder\":\r\n                                case \"bold\":\r\n                                case \"700\":\r\n                                case \"800\":\r\n                                case \"900\":\r\n                                    thickness = 2;\r\n                                    break;\r\n                            }\r\n                        }\r\n                        if (fontSize) {\r\n                            offset = fontSize / 20;\r\n                        }\r\n                        let y;\r\n                        if (chunk.textDecoration == \"line-through\") {\r\n                            y = thickness + line.offsetY + chunk.offsetY - chunk.height / 2;\r\n                        }\r\n                        else {\r\n                            y = thickness + offset * 1.5 + line.offsetY + chunk.offsetY;\r\n                        }\r\n                        context.save();\r\n                        context.beginPath();\r\n                        if (chunk.fill) {\r\n                            context.strokeStyle = chunk.fill.toCSS();\r\n                        }\r\n                        else if (this.style.fill && this.style.fill instanceof Color) {\r\n                            context.strokeStyle = this.style.fill.toCSS();\r\n                        }\r\n                        context.lineWidth = thickness * offset;\r\n                        context.moveTo(offsetX, y);\r\n                        context.lineTo(offsetX + chunk.width, y);\r\n                        context.stroke();\r\n                        context.restore();\r\n                    }\r\n                    if (interactive && this.interactive) {\r\n                        // Draw text in ghost canvas ONLY if it is set as interactive\r\n                        // explicitly. This way we avoid hit test anomalies caused by anti\r\n                        // aliasing of text.\r\n                        ghostContext.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.restore();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Reset style\r\n                    if (chunk.style) {\r\n                        context.restore();\r\n                        ghostContext.restore();\r\n                    }\r\n                });\r\n            });\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n    }\r\n    _addBounds(bounds) {\r\n        if (this.visible && this.isMeasured) {\r\n            //if (this._textVisible) {\r\n            const x = this._measure(this.getLayer());\r\n            setPoint(bounds, { x: x.left, y: x.top });\r\n            setPoint(bounds, { x: x.right, y: x.bottom });\r\n            //}\r\n        }\r\n    }\r\n    _ignoreFontWeight() {\r\n        return /apple/i.test(navigator.vendor);\r\n    }\r\n    _measure(layer) {\r\n        const context = layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        const rtl = this.style.direction == \"rtl\";\r\n        // Reset text info\r\n        this._textInfo = [];\r\n        // Init\r\n        const oversizedBehavior = this.style.oversizedBehavior;\r\n        const maxWidth = this.style.maxWidth;\r\n        const truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\r\n        const wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\r\n        // Pre-render\r\n        context.save();\r\n        ghostContext.save();\r\n        this._prerender(layer, true, this._ignoreFontWeight());\r\n        // Get default font metrix\r\n        const refText = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 \";\r\n        // Split up text into lines\r\n        const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n        let styleRestored = true;\r\n        let minX = 0;\r\n        let maxX = 0;\r\n        // Iterate through the lines\r\n        let offsetY = 0;\r\n        let currentStyle;\r\n        $array.each(lines, (line, _index) => {\r\n            // Split up line into format/value chunks\r\n            let chunks;\r\n            if (line == \"\") {\r\n                chunks = [{\r\n                        type: \"value\",\r\n                        text: \"\"\r\n                    }];\r\n            }\r\n            else {\r\n                chunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\r\n            }\r\n            while (chunks.length > 0) {\r\n                // Init line object\r\n                let lineInfo = {\r\n                    offsetY: offsetY,\r\n                    ascent: 0,\r\n                    width: 0,\r\n                    height: 0,\r\n                    left: 0,\r\n                    right: 0,\r\n                    textChunks: []\r\n                };\r\n                // Measure reference text\r\n                const metrics = this._measureText(refText, context);\r\n                const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                lineInfo.height = height;\r\n                lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                let currentFormat;\r\n                let currentDecoration = this.style.textDecoration;\r\n                let currentFill;\r\n                let currentChunkWidth;\r\n                let skipFurtherText = false;\r\n                let firstTextChunk = true;\r\n                let leftoverChunks = [];\r\n                let currentVerticalAlign;\r\n                //let offsetX = 0;\r\n                //let chunk;\r\n                //while(chunk = chunks.shift()) {\r\n                $array.eachContinue(chunks, (chunk, index) => {\r\n                    // Format chunk\r\n                    if (chunk.type == \"format\") {\r\n                        if (chunk.text == \"[/]\") {\r\n                            if (!styleRestored) {\r\n                                context.restore();\r\n                                ghostContext.restore();\r\n                                styleRestored = true;\r\n                            }\r\n                            currentFill = undefined;\r\n                            currentStyle = undefined;\r\n                            currentChunkWidth = undefined;\r\n                            currentDecoration = this.style.textDecoration;\r\n                            currentVerticalAlign = undefined;\r\n                            currentFormat = chunk.text;\r\n                        }\r\n                        else {\r\n                            if (!styleRestored) {\r\n                                context.restore();\r\n                                ghostContext.restore();\r\n                            }\r\n                            let format = TextFormatter.getTextStyle(chunk.text);\r\n                            const fontStyle = this._getFontStyle(format);\r\n                            context.save();\r\n                            ghostContext.save();\r\n                            context.font = fontStyle;\r\n                            currentStyle = fontStyle;\r\n                            currentFormat = chunk.text;\r\n                            if (format.textDecoration) {\r\n                                currentDecoration = format.textDecoration;\r\n                            }\r\n                            if (format.fill) {\r\n                                currentFill = format.fill;\r\n                            }\r\n                            if (format.width) {\r\n                                currentChunkWidth = $type.toNumber(format.width);\r\n                            }\r\n                            if (format.verticalAlign) {\r\n                                currentVerticalAlign = format.verticalAlign;\r\n                            }\r\n                            styleRestored = false;\r\n                            // Measure reference text after change of format\r\n                            const metrics = this._measureText(refText, context);\r\n                            const height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                            if (height > lineInfo.height) {\r\n                                lineInfo.height = height;\r\n                            }\r\n                            if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                                lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                            }\r\n                        }\r\n                    }\r\n                    // Text chunk\r\n                    else if (chunk.type == \"value\" && !skipFurtherText) {\r\n                        // Measure\r\n                        const metrics = this._measureText(chunk.text, context);\r\n                        let chunkWidth = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\r\n                        // Check for fit\r\n                        if (truncate) {\r\n                            // Break words?\r\n                            let breakWords = firstTextChunk || this.style.breakWords || false;\r\n                            // Measure ellipsis and check if it fits\r\n                            const ellipsis = this.style.ellipsis || \"\";\r\n                            const ellipsisMetrics = this._measureText(ellipsis, context);\r\n                            const ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\r\n                            // Check fit\r\n                            if ((lineInfo.width + chunkWidth) > maxWidth) {\r\n                                const excessWidth = maxWidth - lineInfo.width - ellipsisWidth;\r\n                                chunk.text = this._truncateText(context, chunk.text, excessWidth, breakWords);\r\n                                chunk.text += ellipsis;\r\n                                skipFurtherText = true;\r\n                            }\r\n                        }\r\n                        else if (wrap) {\r\n                            // Check fit\r\n                            if ((lineInfo.width + chunkWidth) > maxWidth) {\r\n                                const excessWidth = maxWidth - lineInfo.width;\r\n                                const tmpText = this._truncateText(context, chunk.text, excessWidth, false, (firstTextChunk && this.style.oversizedBehavior != \"wrap-no-break\"));\r\n                                if (tmpText == \"\") {\r\n                                    // Unable to fit a single letter - hide the whole label\r\n                                    this._textVisible = true;\r\n                                    return false;\r\n                                }\r\n                                //skipFurtherText = true;\r\n                                //Add remaining chunks for the next line\r\n                                leftoverChunks = chunks.slice(index + 1);\r\n                                //Add remaining text of current chunk if it was forced-cut\r\n                                if ($utils.trim(tmpText) != $utils.trim(chunk.text)) {\r\n                                    leftoverChunks.unshift({\r\n                                        type: \"value\",\r\n                                        text: chunk.text.substr(tmpText.length)\r\n                                    });\r\n                                    if (currentFormat) {\r\n                                        leftoverChunks.unshift({\r\n                                            type: \"format\",\r\n                                            text: currentFormat\r\n                                        });\r\n                                    }\r\n                                }\r\n                                // Set current chunk (truncated)\r\n                                chunk.text = $utils.trim(tmpText);\r\n                                chunks = [];\r\n                                skipFurtherText = true;\r\n                            }\r\n                        }\r\n                        // Chunk width?\r\n                        let leftBoundMod = 1;\r\n                        let rightBoundMod = 1;\r\n                        if (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\r\n                            // increase horizontal bounding boxes accordingly\r\n                            const boundsMod = chunkWidth / currentChunkWidth;\r\n                            switch (this.style.textAlign) {\r\n                                case \"right\":\r\n                                case \"end\":\r\n                                    leftBoundMod = boundsMod;\r\n                                    break;\r\n                                case \"center\":\r\n                                    leftBoundMod = boundsMod;\r\n                                    rightBoundMod = boundsMod;\r\n                                    break;\r\n                                default:\r\n                                    rightBoundMod = boundsMod;\r\n                            }\r\n                            chunkWidth = currentChunkWidth;\r\n                        }\r\n                        const chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                        if (chunkHeight > lineInfo.height) {\r\n                            lineInfo.height = chunkHeight;\r\n                        }\r\n                        if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                            lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                        }\r\n                        lineInfo.width += chunkWidth;\r\n                        lineInfo.left += metrics.actualBoundingBoxLeft / leftBoundMod;\r\n                        lineInfo.right += metrics.actualBoundingBoxRight / rightBoundMod;\r\n                        lineInfo.textChunks.push({\r\n                            style: currentStyle,\r\n                            fill: currentFill,\r\n                            text: chunk.text,\r\n                            width: chunkWidth,\r\n                            height: chunkHeight,\r\n                            left: metrics.actualBoundingBoxLeft,\r\n                            right: metrics.actualBoundingBoxRight,\r\n                            ascent: metrics.actualBoundingBoxAscent,\r\n                            offsetX: 0,\r\n                            offsetY: 0,\r\n                            textDecoration: currentDecoration,\r\n                            verticalAlign: currentVerticalAlign\r\n                        });\r\n                        //offsetX += chunkWidth;\r\n                        firstTextChunk = false;\r\n                    }\r\n                    if (leftoverChunks) {\r\n                        //return false;\r\n                    }\r\n                    return true;\r\n                    //}\r\n                });\r\n                if (this.style.lineHeight instanceof Percent) {\r\n                    lineInfo.height *= this.style.lineHeight.value;\r\n                    lineInfo.ascent *= this.style.lineHeight.value;\r\n                }\r\n                else {\r\n                    lineInfo.height *= this.style.lineHeight || 1.2;\r\n                    lineInfo.ascent *= this.style.lineHeight || 1.2;\r\n                }\r\n                if (minX < lineInfo.left) {\r\n                    minX = lineInfo.left;\r\n                }\r\n                if (maxX < lineInfo.right) {\r\n                    maxX = lineInfo.right;\r\n                }\r\n                this._textInfo.push(lineInfo);\r\n                //lineInfo.offsetY += lineInfo.ascent;\r\n                offsetY += lineInfo.height;\r\n                // Reset chunks so that it can proceed to the next line\r\n                chunks = leftoverChunks || [];\r\n            }\r\n        });\r\n        if (!styleRestored) {\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n        // Adjust chunk internal offsets\r\n        $array.each(this._textInfo, (lineInfo, _index) => {\r\n            let currentChunkOffset = 0;\r\n            $array.each(lineInfo.textChunks, (chunk) => {\r\n                chunk.offsetX = currentChunkOffset + chunk.left - lineInfo.left;\r\n                chunk.offsetY += lineInfo.height - lineInfo.height * (this.style.baselineRatio || 0.19);\r\n                currentChunkOffset += chunk.width;\r\n                if (chunk.verticalAlign) {\r\n                    switch (chunk.verticalAlign) {\r\n                        case \"super\":\r\n                            chunk.offsetY -= lineInfo.height / 2 - chunk.height / 2;\r\n                            break;\r\n                        case \"sub\":\r\n                            chunk.offsetY += chunk.height / 2;\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        const bounds = {\r\n            left: rtl ? -maxX : -minX,\r\n            top: 0,\r\n            right: rtl ? minX : maxX,\r\n            bottom: offsetY,\r\n        };\r\n        // We need to fit?\r\n        if (oversizedBehavior !== \"none\") {\r\n            const ratio = this._fitRatio(bounds);\r\n            if (ratio < 1) {\r\n                if (oversizedBehavior == \"fit\") {\r\n                    if ($type.isNumber(this.style.minScale) && (ratio < this.style.minScale)) {\r\n                        this._textVisible = false;\r\n                    }\r\n                    else {\r\n                        if (!this._originalScale || this._originalScale == 1) {\r\n                            this._originalScale = this.scale;\r\n                        }\r\n                        this.scale = ratio;\r\n                        this._textVisible = true;\r\n                    }\r\n                }\r\n                else if (oversizedBehavior == \"hide\") {\r\n                    this._textVisible = false;\r\n                }\r\n                else {\r\n                    switch (this.style.textAlign) {\r\n                        case \"right\":\r\n                        case \"end\":\r\n                            bounds.left = -maxWidth;\r\n                            bounds.right = 0;\r\n                            break;\r\n                        case \"center\":\r\n                            bounds.left = -maxWidth / 2;\r\n                            bounds.right = maxWidth / 2;\r\n                            break;\r\n                        default:\r\n                            bounds.left = 0;\r\n                            bounds.right = maxWidth;\r\n                    }\r\n                    this.scale = this._originalScale || 1;\r\n                    this._originalScale = undefined;\r\n                    this._textVisible = true;\r\n                }\r\n            }\r\n            else {\r\n                this.scale = this._originalScale || 1;\r\n                this._originalScale = undefined;\r\n                this._textVisible = true;\r\n            }\r\n        }\r\n        context.restore();\r\n        ghostContext.restore();\r\n        return bounds;\r\n    }\r\n    _fitRatio(bounds) {\r\n        const maxW = this.style.maxWidth;\r\n        const maxH = this.style.maxHeight;\r\n        if (!$type.isNumber(maxW) && !$type.isNumber(maxH)) {\r\n            return 1;\r\n        }\r\n        const w = bounds.right - bounds.left;\r\n        const h = bounds.bottom - bounds.top;\r\n        return Math.min(maxW / w || 1, maxH / h || 1);\r\n    }\r\n    _truncateText(context, text, maxWidth, breakWords = false, fallbackBreakWords = true) {\r\n        let width;\r\n        do {\r\n            if (breakWords) {\r\n                text = text.slice(0, -1);\r\n            }\r\n            else {\r\n                let tmp = text.replace(/[^,;:!?\\\\\\/\\s]+[,;:!?\\\\\\/\\s]*$/g, \"\");\r\n                if (tmp == \"\" && fallbackBreakWords) {\r\n                    breakWords = true;\r\n                }\r\n                else if (tmp == \"\") {\r\n                    return text;\r\n                }\r\n                else {\r\n                    text = tmp;\r\n                }\r\n            }\r\n            const metrics = this._measureText(text, context);\r\n            width = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\r\n        } while ((width > maxWidth) && text != \"\");\r\n        return text;\r\n    }\r\n    _measureText(text, context) {\r\n        let metrics = context.measureText(text);\r\n        let fakeMetrics = {};\r\n        if (metrics.actualBoundingBoxAscent == null) {\r\n            const div = document.createElement(\"div\");\r\n            div.innerText = text;\r\n            div.style.visibility = \"hidden\";\r\n            div.style.position = \"absolute\";\r\n            div.style.top = \"-1000000px;\";\r\n            div.style.fontFamily = this.style.fontFamily || \"\";\r\n            div.style.fontSize = this.style.fontSize + \"\";\r\n            document.body.appendChild(div);\r\n            const bbox = div.getBoundingClientRect();\r\n            document.body.removeChild(div);\r\n            const h = bbox.height;\r\n            const w = metrics.width;\r\n            let left = 0;\r\n            let right = w;\r\n            fakeMetrics = {\r\n                actualBoundingBoxAscent: h,\r\n                actualBoundingBoxDescent: 0,\r\n                actualBoundingBoxLeft: left,\r\n                actualBoundingBoxRight: right,\r\n                fontBoundingBoxAscent: h,\r\n                fontBoundingBoxDescent: 0,\r\n                width: w\r\n            };\r\n            //return fake;\r\n        }\r\n        else {\r\n            fakeMetrics = {\r\n                actualBoundingBoxAscent: metrics.actualBoundingBoxAscent,\r\n                actualBoundingBoxDescent: metrics.actualBoundingBoxDescent,\r\n                actualBoundingBoxLeft: metrics.actualBoundingBoxLeft,\r\n                actualBoundingBoxRight: metrics.actualBoundingBoxRight,\r\n                fontBoundingBoxAscent: metrics.actualBoundingBoxAscent,\r\n                fontBoundingBoxDescent: metrics.actualBoundingBoxDescent,\r\n                width: metrics.width\r\n            };\r\n        }\r\n        const w = metrics.width;\r\n        switch (this.style.textAlign) {\r\n            case \"right\":\r\n            case \"end\":\r\n                fakeMetrics.actualBoundingBoxLeft = w;\r\n                fakeMetrics.actualBoundingBoxRight = 0;\r\n                break;\r\n            case \"center\":\r\n                fakeMetrics.actualBoundingBoxLeft = w / 2;\r\n                fakeMetrics.actualBoundingBoxRight = w / 2;\r\n                break;\r\n            default:\r\n                fakeMetrics.actualBoundingBoxLeft = 0;\r\n                fakeMetrics.actualBoundingBoxRight = w;\r\n        }\r\n        return fakeMetrics;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasTextStyle {\r\n    constructor() {\r\n        //public wordWrapWidth: number = 100;\r\n        Object.defineProperty(this, \"fill\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fillOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textAlign\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontFamily\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontSize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontWeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontStyle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"fontVariant\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textDecoration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowColor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowBlur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // leading?: number;\r\n        // letterSpacing?: number;\r\n        Object.defineProperty(this, \"lineHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: percent(120)\r\n        });\r\n        Object.defineProperty(this, \"baselineRatio\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0.19\r\n        });\r\n        // padding?: number;\r\n        // stroke?: number;\r\n        // strokeThickness?: number;\r\n        // trim?: number;\r\n        // wordWrap?: boolean;\r\n        Object.defineProperty(this, \"direction\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"textBaseline\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"oversizedBehavior\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"none\"\r\n        });\r\n        Object.defineProperty(this, \"breakWords\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"ellipsis\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"…\"\r\n        });\r\n        Object.defineProperty(this, \"maxWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"maxHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"minScale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"ignoreFormatting\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasRadialText extends CanvasText {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"textType\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"circular\"\r\n        });\r\n        Object.defineProperty(this, \"radius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"startAngle\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"inside\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"orientation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"auto\"\r\n        });\r\n        Object.defineProperty(this, \"kerning\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_textReversed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _render(parentLayer) {\r\n        switch (this.textType) {\r\n            case \"circular\":\r\n                this._renderCircular(parentLayer);\r\n                break;\r\n            default:\r\n                super._render(parentLayer);\r\n                break;\r\n        }\r\n    }\r\n    _renderCircular(parentLayer) {\r\n        if (this._textVisible) {\r\n            const layer = this._layer || parentLayer;\r\n            this._prerender(layer);\r\n            const interactive = this._isInteractive();\r\n            const context = layer.context;\r\n            const layerDirty = layer.dirty;\r\n            const ghostContext = this._renderer._ghostLayer.context;\r\n            // Savepoint\r\n            context.save();\r\n            if (interactive) {\r\n                ghostContext.save();\r\n            }\r\n            // Init\r\n            let radius = (this.radius || 0);\r\n            let startAngle = (this.startAngle || 0);\r\n            let deltaAngle = 0;\r\n            let orientation = this.orientation;\r\n            let inward = orientation == \"auto\" ? \"auto\" : orientation == \"inward\";\r\n            const inside = this.inside;\r\n            const align = this.style.textAlign || \"left\";\r\n            const kerning = this.kerning || 0;\r\n            let clockwise = align == \"left\" ? 1 : -1;\r\n            const shouldReverse = !this._textReversed;\r\n            // We need measurements in order to properly position text for alignment\r\n            if (!this._textInfo) {\r\n                this._measure(layer);\r\n            }\r\n            // Check if we need to invert the whole stuff\r\n            if (inward == \"auto\") {\r\n                // Calc max angle so we know whether we need to flip it\r\n                let maxAngle = 0;\r\n                let midAngle = 0;\r\n                $array.each(this._textInfo, (line, _index) => {\r\n                    const deltaAngle = startAngle + (line.width / (radius - line.height)) / 2 * -clockwise;\r\n                    if (deltaAngle > maxAngle) {\r\n                        maxAngle = deltaAngle;\r\n                    }\r\n                });\r\n                if (align == \"left\") {\r\n                    midAngle = (maxAngle + deltaAngle / 2) * $math.DEGREES;\r\n                }\r\n                else if (align == \"right\") {\r\n                    midAngle = (maxAngle - deltaAngle / 2) * $math.DEGREES;\r\n                }\r\n                else {\r\n                    midAngle = startAngle * $math.DEGREES;\r\n                }\r\n                midAngle = $math.normalizeAngle(midAngle);\r\n                inward = (midAngle >= 270) || (midAngle <= 90);\r\n            }\r\n            if (inward == true && shouldReverse) {\r\n                this._textInfo.reverse();\r\n                this._textReversed = true;\r\n            }\r\n            // if ((inward == false && align == \"left\") || (inward == true && align == \"right\")) {\r\n            // \tclockwise *= -1;\r\n            // }\r\n            // Process text info produced by _measure()\r\n            $array.each(this._textInfo, (line, _index) => {\r\n                const textHeight = line.height;\r\n                // Adjust radius (for `inside = false`)\r\n                // Radius adjustment for `inside = false` is below the line calculation\r\n                if (!inside) {\r\n                    radius += textHeight;\r\n                }\r\n                // Reverse letters if we're painting them counter-clockwise\r\n                if (((clockwise == -1 && inward) || (clockwise == 1 && !inward)) && shouldReverse) {\r\n                    line.textChunks.reverse();\r\n                }\r\n                // Init angles\r\n                let lineStartAngle = startAngle;\r\n                deltaAngle = 0;\r\n                // Adjust for center-align\r\n                if (align == \"center\") {\r\n                    lineStartAngle += (line.width / (radius - textHeight)) / 2 * -clockwise;\r\n                    deltaAngle = lineStartAngle - startAngle;\r\n                }\r\n                // if (inward == \"auto\") {\r\n                // \tlet midAngle;\r\n                // \tif (align == \"left\") {\r\n                // \t\tmidAngle = (lineStartAngle + deltaAngle / 2) * $math.DEGREES;\r\n                // \t}\r\n                // \telse if () {\r\n                // \t\tmidAngle = (lineStartAngle - deltaAngle / 2) * $math.DEGREES;\r\n                // \t}\r\n                // \tinward = (midAngle >= 270) || (midAngle <= 90);\r\n                // }\r\n                // Rotate letters if they are facing outward\r\n                lineStartAngle += (Math.PI * (inward ? 0 : 1)); // Rotate 180 if outward\r\n                // Savepoint\r\n                context.save();\r\n                if (interactive) {\r\n                    ghostContext.save();\r\n                }\r\n                // Assume starting angle\r\n                context.rotate(lineStartAngle);\r\n                if (interactive) {\r\n                    ghostContext.rotate(lineStartAngle);\r\n                }\r\n                let angleShift = 0;\r\n                $array.each(line.textChunks, (chunk, _index) => {\r\n                    // Draw the letter\r\n                    const char = chunk.text;\r\n                    const charWidth = chunk.width;\r\n                    // Rotate half a letter\r\n                    angleShift = (charWidth / 2) / (radius - textHeight) * clockwise;\r\n                    context.rotate(angleShift);\r\n                    if (interactive) {\r\n                        ghostContext.rotate(angleShift);\r\n                    }\r\n                    // Set style\r\n                    if (chunk.style) {\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        context.font = chunk.style;\r\n                        if (interactive) {\r\n                            ghostContext.font = chunk.style;\r\n                        }\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.save();\r\n                        context.fillStyle = chunk.fill.toCSS();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Center letters\r\n                    context.textBaseline = \"middle\";\r\n                    context.textAlign = \"center\";\r\n                    if (interactive) {\r\n                        ghostContext.textBaseline = \"middle\";\r\n                        ghostContext.textAlign = \"center\";\r\n                    }\r\n                    // Plop the letter\r\n                    if (layerDirty) {\r\n                        context.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\r\n                    }\r\n                    if (interactive) {\r\n                        ghostContext.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\r\n                    }\r\n                    if (chunk.fill) {\r\n                        context.restore();\r\n                        // Color does not affect ghostContext so we not set it\r\n                    }\r\n                    // Reset style\r\n                    if (chunk.style) {\r\n                        context.restore();\r\n                        ghostContext.restore();\r\n                    }\r\n                    // Rotate half a letter and add spacing\r\n                    angleShift = (charWidth / 2 + kerning) / (radius - textHeight) * clockwise;\r\n                    context.rotate(angleShift);\r\n                    if (interactive) {\r\n                        ghostContext.rotate(angleShift);\r\n                    }\r\n                });\r\n                // Restore angle\r\n                context.restore();\r\n                if (interactive) {\r\n                    ghostContext.restore();\r\n                }\r\n                // Adjust radius (for `inside = true`)\r\n                if (inside) {\r\n                    radius -= textHeight;\r\n                }\r\n            });\r\n            // Restore\r\n            context.restore();\r\n            if (interactive) {\r\n                ghostContext.restore();\r\n            }\r\n        }\r\n    }\r\n    _measure(layer) {\r\n        switch (this.textType) {\r\n            case \"circular\":\r\n                return this._measureCircular(layer);\r\n            default:\r\n                return super._measure(layer);\r\n        }\r\n    }\r\n    _measureCircular(layer) {\r\n        const context = layer.context;\r\n        const ghostContext = this._renderer._ghostLayer.context;\r\n        const rtl = this.style.direction == \"rtl\";\r\n        const oversizedBehavior = this.style.oversizedBehavior;\r\n        const maxWidth = this.style.maxWidth;\r\n        const truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\r\n        const ellipsis = this.style.ellipsis || \"\";\r\n        let ellipsisMetrics;\r\n        //const wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\r\n        // Reset text info\r\n        this._textVisible = true;\r\n        this._textInfo = [];\r\n        this._textReversed = false;\r\n        // Pre-render\r\n        context.save();\r\n        ghostContext.save();\r\n        this._prerender(layer, true);\r\n        // Split up text into lines\r\n        const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\r\n        let styleRestored = true;\r\n        let totalWidth = 0;\r\n        // Iterate through the lines\r\n        let offsetY = 0;\r\n        $array.each(lines, (line, _index) => {\r\n            // Split up line into format/value chunks\r\n            let chunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\r\n            // Init line object\r\n            let lineInfo = {\r\n                offsetY: offsetY,\r\n                ascent: 0,\r\n                width: 0,\r\n                height: 0,\r\n                left: 0,\r\n                right: 0,\r\n                textChunks: []\r\n            };\r\n            let currentStyle;\r\n            let currentFill;\r\n            let currentChunkWidth;\r\n            //while(chunk = chunks.shift()) {\r\n            $array.each(chunks, (chunk, _index) => {\r\n                // Format chunk\r\n                if (chunk.type == \"format\") {\r\n                    if (chunk.text == \"[/]\") {\r\n                        if (!styleRestored) {\r\n                            context.restore();\r\n                            ghostContext.restore();\r\n                            styleRestored = true;\r\n                        }\r\n                        currentFill = undefined;\r\n                        currentStyle = undefined;\r\n                        currentChunkWidth = undefined;\r\n                    }\r\n                    else {\r\n                        let format = TextFormatter.getTextStyle(chunk.text);\r\n                        const fontStyle = this._getFontStyle(format);\r\n                        context.save();\r\n                        ghostContext.save();\r\n                        context.font = fontStyle;\r\n                        currentStyle = fontStyle;\r\n                        if (format.fill) {\r\n                            currentFill = format.fill;\r\n                        }\r\n                        if (format.width) {\r\n                            currentChunkWidth = $type.toNumber(format.width);\r\n                        }\r\n                        styleRestored = false;\r\n                    }\r\n                    if (truncate) {\r\n                        ellipsisMetrics = this._measureText(ellipsis, context);\r\n                    }\r\n                }\r\n                // Text format\r\n                else if (chunk.type == \"value\") {\r\n                    // Measure each letter\r\n                    const chars = chunk.text.match(/./ug) || [];\r\n                    if (rtl) {\r\n                        chars.reverse();\r\n                    }\r\n                    for (let i = 0; i < chars.length; i++) {\r\n                        const char = chars[i];\r\n                        // Measure\r\n                        const metrics = this._measureText(char, context);\r\n                        let chunkWidth = metrics.width;\r\n                        // Chunk width?\r\n                        if (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\r\n                            chunkWidth = currentChunkWidth;\r\n                        }\r\n                        const chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n                        if (chunkHeight > lineInfo.height) {\r\n                            lineInfo.height = chunkHeight;\r\n                        }\r\n                        if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\r\n                            lineInfo.ascent = metrics.actualBoundingBoxAscent;\r\n                        }\r\n                        lineInfo.width += chunkWidth;\r\n                        lineInfo.left += metrics.actualBoundingBoxLeft;\r\n                        lineInfo.right += metrics.actualBoundingBoxRight;\r\n                        lineInfo.textChunks.push({\r\n                            style: currentStyle,\r\n                            fill: currentFill,\r\n                            text: char,\r\n                            width: chunkWidth,\r\n                            height: chunkHeight + metrics.actualBoundingBoxDescent,\r\n                            left: metrics.actualBoundingBoxLeft,\r\n                            right: metrics.actualBoundingBoxRight,\r\n                            ascent: metrics.actualBoundingBoxAscent,\r\n                            offsetX: 0,\r\n                            offsetY: chunkHeight,\r\n                            textDecoration: undefined\r\n                        });\r\n                        totalWidth += chunkWidth;\r\n                        // Handle oversized behavior\r\n                        if (truncate) {\r\n                            // Measure ellipsis and check if it fits\r\n                            if (!ellipsisMetrics) {\r\n                                ellipsisMetrics = this._measureText(ellipsis, context);\r\n                            }\r\n                            const ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\r\n                            totalWidth += ellipsisWidth;\r\n                            if ((totalWidth + ellipsisWidth) > maxWidth) {\r\n                                if (lineInfo.textChunks.length == 1) {\r\n                                    this._textVisible = false;\r\n                                }\r\n                                else {\r\n                                    lineInfo.width += ellipsisWidth;\r\n                                    lineInfo.left += ellipsisMetrics.actualBoundingBoxLeft;\r\n                                    lineInfo.right += ellipsisMetrics.actualBoundingBoxRight;\r\n                                    lineInfo.textChunks.push({\r\n                                        style: currentStyle,\r\n                                        fill: currentFill,\r\n                                        text: ellipsis,\r\n                                        width: ellipsisWidth,\r\n                                        height: chunkHeight + ellipsisMetrics.actualBoundingBoxDescent,\r\n                                        left: ellipsisMetrics.actualBoundingBoxLeft,\r\n                                        right: ellipsisMetrics.actualBoundingBoxRight,\r\n                                        ascent: ellipsisMetrics.actualBoundingBoxAscent,\r\n                                        offsetX: 0,\r\n                                        offsetY: chunkHeight,\r\n                                        textDecoration: undefined\r\n                                    });\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (rtl) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            if (this.style.lineHeight instanceof Percent) {\r\n                lineInfo.height *= this.style.lineHeight.value;\r\n            }\r\n            else {\r\n                lineInfo.height *= this.style.lineHeight || 1.2;\r\n            }\r\n            this._textInfo.push(lineInfo);\r\n            //lineInfo.offsetY += lineInfo.ascent;\r\n            offsetY += lineInfo.height;\r\n        });\r\n        if (!styleRestored) {\r\n            context.restore();\r\n            ghostContext.restore();\r\n        }\r\n        if (oversizedBehavior == \"hide\" && (totalWidth > maxWidth)) {\r\n            this._textVisible = false;\r\n        }\r\n        // Adjust chunk internal offsets\r\n        $array.each(this._textInfo, (lineInfo) => {\r\n            $array.each(lineInfo.textChunks, (chunk) => {\r\n                chunk.offsetY += Math.round((lineInfo.height - chunk.height + (lineInfo.ascent - chunk.ascent)) / 2);\r\n            });\r\n        });\r\n        context.restore();\r\n        ghostContext.restore();\r\n        return {\r\n            left: 0,\r\n            top: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n        };\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasImage extends CanvasDisplayObject {\r\n    constructor(renderer, image) {\r\n        super(renderer);\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"image\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowColor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowBlur\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOffsetY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"shadowOpacity\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_imageMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.image = image;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        if (this._imageMask) {\r\n            clearCanvas(this._imageMask);\r\n        }\r\n    }\r\n    getLocalBounds() {\r\n        if (!this._localBounds) {\r\n            let w = 0;\r\n            let h = 0;\r\n            if (this.width) {\r\n                w = this.width;\r\n            }\r\n            if (this.height) {\r\n                h = this.height;\r\n            }\r\n            this._localBounds = {\r\n                left: 0,\r\n                top: 0,\r\n                right: w,\r\n                bottom: h\r\n            };\r\n            this._addBounds(this._localBounds);\r\n        }\r\n        return this._localBounds;\r\n    }\r\n    _render(parentLayer) {\r\n        super._render(parentLayer);\r\n        if (this.image) {\r\n            const layer = this._layer || parentLayer;\r\n            if (this.tainted === undefined) {\r\n                this.tainted = isTainted(this.image);\r\n                layer.tainted = true;\r\n            }\r\n            if (this.tainted && this._renderer._omitTainted) {\r\n                return;\r\n            }\r\n            if (layer.dirty) {\r\n                if (this.shadowColor) {\r\n                    layer.context.shadowColor = this.shadowColor.toCSS(this.shadowOpacity || 1);\r\n                }\r\n                if (this.shadowBlur) {\r\n                    layer.context.shadowBlur = this.shadowBlur;\r\n                }\r\n                if (this.shadowOffsetX) {\r\n                    layer.context.shadowOffsetX = this.shadowOffsetX;\r\n                }\r\n                if (this.shadowOffsetY) {\r\n                    layer.context.shadowOffsetY = this.shadowOffsetY;\r\n                }\r\n                // TODO should this round ?\r\n                const width = this.width || this.image.naturalWidth;\r\n                const height = this.height || this.image.naturalHeight;\r\n                layer.context.drawImage(this.image, 0, 0, width, height);\r\n            }\r\n            if (this.interactive && this._isInteractive()) {\r\n                const mask = this._getMask(this.image);\r\n                this._renderer._ghostLayer.context.drawImage(mask, 0, 0);\r\n            }\r\n        }\r\n    }\r\n    clear() {\r\n        super.clear();\r\n        this.image = undefined;\r\n        this._imageMask = undefined;\r\n    }\r\n    _getMask(image) {\r\n        if (this._imageMask === undefined) {\r\n            // TODO should this round ?\r\n            const width = this.width || image.naturalWidth;\r\n            const height = this.height || image.naturalHeight;\r\n            // We need to create a second canvas because destination-in clears out the entire canvas\r\n            const canvas = document.createElement(\"canvas\");\r\n            canvas.width = width;\r\n            canvas.height = height;\r\n            const context = canvas.getContext(\"2d\");\r\n            context.imageSmoothingEnabled = false;\r\n            context.fillStyle = this._getColorId();\r\n            context.fillRect(0, 0, width, height);\r\n            if (!isTainted(image)) {\r\n                context.globalCompositeOperation = \"destination-in\";\r\n                context.drawImage(image, 0, 0, width, height);\r\n            }\r\n            this._imageMask = canvas;\r\n        }\r\n        return this._imageMask;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasRendererEvent {\r\n    constructor(event, originalPoint, point, bbox) {\r\n        Object.defineProperty(this, \"event\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: event\r\n        });\r\n        Object.defineProperty(this, \"originalPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: originalPoint\r\n        });\r\n        Object.defineProperty(this, \"point\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: point\r\n        });\r\n        Object.defineProperty(this, \"bbox\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: bbox\r\n        });\r\n        Object.defineProperty(this, \"id\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"simulated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"native\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        if ($utils.supports(\"touchevents\") && event instanceof Touch) {\r\n            this.id = event.identifier;\r\n        }\r\n        else {\r\n            this.id = null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasRenderer extends ArrayDisposer {\r\n    /*protected _mouseMoveThrottler: Throttler = new Throttler(() => {\r\n        this._dispatchGlobalMousemove(this._lastPointerMoveEvent.event, this._lastPointerMoveEvent.native);\r\n    });\r\n    */\r\n    constructor(resolution) {\r\n        super();\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"div\")\r\n        });\r\n        Object.defineProperty(this, \"_layerDom\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"div\")\r\n        });\r\n        Object.defineProperty(this, \"layers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_dirtyLayers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"defaultLayer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.getLayer(0)\r\n        });\r\n        Object.defineProperty(this, \"_ghostLayer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new GhostLayer()\r\n        });\r\n        Object.defineProperty(this, \"_patternCanvas\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: document.createElement(\"canvas\")\r\n        });\r\n        Object.defineProperty(this, \"_patternContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._patternCanvas.getContext(\"2d\")\r\n        });\r\n        Object.defineProperty(this, \"_width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_clientWidth\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_clientHeight\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"resolution\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"interactionsEnabled\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_listeners\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_colorId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_colorMap\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_forceInteractive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_omitTainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        // TODO this should store the Id as well\r\n        Object.defineProperty(this, \"_hovering\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new Set()\r\n        });\r\n        Object.defineProperty(this, \"_dragging\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_mousedown\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_lastPointerMoveEvent\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tapToActivate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"tapToActivateTimeout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 3000\r\n        });\r\n        Object.defineProperty(this, \"_touchActive\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_touchActiveTimeout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        if (resolution == null) {\r\n            this.resolution = window.devicePixelRatio;\r\n        }\r\n        else {\r\n            this.resolution = resolution;\r\n        }\r\n        this.view.style.position = \"absolute\";\r\n        this.view.appendChild(this._layerDom);\r\n        this._disposers.push(new Disposer(() => {\r\n            $object.each(this._events, (_key, events) => {\r\n                events.disposer.dispose();\r\n            });\r\n            $array.each(this.layers, (layer) => {\r\n                clearCanvas(layer.view);\r\n                if (layer.exportableView) {\r\n                    clearCanvas(layer.exportableView);\r\n                }\r\n            });\r\n            clearCanvas(this._ghostLayer.view);\r\n            clearCanvas(this._patternCanvas);\r\n        }));\r\n        /*\r\n        this._disposers.push($utils.addEventListener(this._ghostLayer.view, \"click\", (originalEvent: MouseEvent) => {\r\n            const event = this.getEvent(originalEvent);\r\n            const target = this._getHitTarget(event.originalPoint, event.bbox);\r\n            console.debug(target);\r\n        }));\r\n        */\r\n        // Monitor for possible pixel ratio changes (when page is zoomed)\r\n        this._disposers.push($utils.onZoom(() => {\r\n            if (resolution == null) {\r\n                this.resolution = window.devicePixelRatio;\r\n            }\r\n        }));\r\n        // We need this in order top prevent default touch gestures when dragging\r\n        // draggable elements\r\n        if ($utils.supports(\"touchevents\")) {\r\n            const listener = (ev) => {\r\n                if (this._dragging.length !== 0) {\r\n                    $array.eachContinue(this._dragging, (item) => {\r\n                        if (item.value.shouldCancelTouch()) {\r\n                            ev.preventDefault();\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    });\r\n                }\r\n                // If touch down happends, delay touch out\r\n                if (this._touchActiveTimeout) {\r\n                    this._delayTouchDeactivate();\r\n                }\r\n            };\r\n            this._disposers.push($utils.addEventListener(window, \"touchstart\", listener, { passive: false }));\r\n            this._disposers.push($utils.addEventListener(this.view, \"touchstart\", listener, { passive: false }));\r\n            this._disposers.push($utils.addEventListener(this.view, \"touchmove\", () => {\r\n                // If touch is moving, delay touch out\r\n                if (this._touchActiveTimeout) {\r\n                    this._delayTouchDeactivate();\r\n                }\r\n            }, { passive: true }));\r\n            this._disposers.push($utils.addEventListener(window, \"click\", (_ev) => {\r\n                this._touchActive = false;\r\n            }, { passive: true }));\r\n            this._disposers.push($utils.addEventListener(this.view, \"click\", (_ev) => {\r\n                window.setTimeout(() => {\r\n                    this._touchActive = true;\r\n                    this._delayTouchDeactivate();\r\n                }, 100);\r\n            }, { passive: true }));\r\n        }\r\n        // Prevent scrolling of the window when hovering on \"wheelable\" object\r\n        if ($utils.supports(\"wheelevents\")) {\r\n            this._disposers.push($utils.addEventListener(this.view, \"wheel\", (ev) => {\r\n                let prevent = false;\r\n                this._hovering.forEach((obj) => {\r\n                    if (obj.wheelable) {\r\n                        prevent = true;\r\n                        return false;\r\n                    }\r\n                });\r\n                if (prevent) {\r\n                    ev.preventDefault();\r\n                }\r\n            }, { passive: false }));\r\n        }\r\n    }\r\n    _delayTouchDeactivate() {\r\n        if (this._touchActiveTimeout) {\r\n            clearTimeout(this._touchActiveTimeout);\r\n        }\r\n        if (this.tapToActivateTimeout > 0) {\r\n            this._touchActiveTimeout = window.setTimeout(() => {\r\n                this._touchActive = false;\r\n            }, this.tapToActivateTimeout);\r\n        }\r\n    }\r\n    get debugGhostView() {\r\n        return !!this._ghostLayer.view.parentNode;\r\n    }\r\n    set debugGhostView(value) {\r\n        if (value) {\r\n            if (!this._ghostLayer.view.parentNode) {\r\n                this.view.appendChild(this._ghostLayer.view);\r\n            }\r\n        }\r\n        else {\r\n            if (this._ghostLayer.view.parentNode) {\r\n                this._ghostLayer.view.parentNode.removeChild(this._ghostLayer.view);\r\n            }\r\n        }\r\n    }\r\n    createLinearGradient(x1, y1, x2, y2) {\r\n        return this.defaultLayer.context.createLinearGradient(x1, y1, x2, y2);\r\n    }\r\n    createRadialGradient(x1, y1, radius1, x2, y2, radius2) {\r\n        return this.defaultLayer.context.createRadialGradient(x1, y1, radius1, x2, y2, radius2);\r\n    }\r\n    createPattern(graphics, background, repetition, width, height) {\r\n        // const patternCanvas = document.createElement(\"canvas\");\r\n        // const patternContext = patternCanvas.getContext(\"2d\")!;\r\n        // patternCanvas.width = width;\r\n        // patternCanvas.height = height;\r\n        // if (fill) {\r\n        // \tpatternContext.fillStyle = fill.toCSS();\r\n        // \tpatternContext.fillRect(0, 0, patternCanvas.width, patternCanvas.height);\r\n        // }\r\n        // const layer = {\r\n        // \tview: patternCanvas,\r\n        // \tcontext: patternContext,\r\n        // \tvisible: true,\r\n        // \torder: 0,\r\n        // \twidth: width,\r\n        // \theight: height,\r\n        // \tdirty: true\r\n        // };\r\n        // // patternContext.arc(0, 0, 50, 0, .5 * Math.PI);\r\n        // // patternContext.stroke();\r\n        // image.targetLayer = layer;\r\n        // image.render(layer);\r\n        //this._layerDom.appendChild(patternCanvas);\r\n        this._patternCanvas.width = width;\r\n        this._patternCanvas.height = height;\r\n        this._patternContext.clearRect(0, 0, width, height);\r\n        // patternCanvas.style.width = width * this.resolution + \"px\";\r\n        // patternCanvas.style.height = height * this.resolution + \"px\";\r\n        background.renderDetached(this._patternContext);\r\n        graphics.renderDetached(this._patternContext);\r\n        return this._patternContext.createPattern(this._patternCanvas, repetition);\r\n    }\r\n    makeContainer() {\r\n        return new CanvasContainer(this);\r\n    }\r\n    makeGraphics() {\r\n        return new CanvasGraphics(this);\r\n    }\r\n    makeText(text, style) {\r\n        return new CanvasText(this, text, style);\r\n    }\r\n    makeTextStyle() {\r\n        return new CanvasTextStyle();\r\n    }\r\n    makeRadialText(text, style) {\r\n        return new CanvasRadialText(this, text, style);\r\n    }\r\n    makePicture(image) {\r\n        return new CanvasImage(this, image);\r\n    }\r\n    resizeLayer(layer) {\r\n        layer.dirty = true;\r\n        layer.resize(this._clientWidth, this._clientHeight, this.resolution);\r\n    }\r\n    resizeGhost() {\r\n        this._ghostLayer.resize(this._clientWidth, this._clientHeight, this.resolution);\r\n    }\r\n    resize(width, height) {\r\n        this._clientWidth = width;\r\n        this._clientHeight = height;\r\n        this._width = Math.floor(width * this.resolution);\r\n        this._height = Math.floor(height * this.resolution);\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                this.resizeLayer(layer);\r\n            }\r\n        });\r\n        this.resizeGhost();\r\n        this.view.style.width = width + \"px\";\r\n        this.view.style.height = height + \"px\";\r\n    }\r\n    createDetachedLayer(willReadFrequently = false) {\r\n        const view = document.createElement(\"canvas\");\r\n        const context = view.getContext(\"2d\", { willReadFrequently: willReadFrequently });\r\n        const layer = new CanvasLayer(view, context);\r\n        view.style.position = \"absolute\";\r\n        view.style.top = \"0px\";\r\n        view.style.left = \"0px\";\r\n        return layer;\r\n    }\r\n    getLayerByOrder(order) {\r\n        const layers = this.layers;\r\n        const length = layers.length;\r\n        for (let i = 0; i < length; i++) {\r\n            const layer = layers[i];\r\n            if (layer.order == order) {\r\n                return layer;\r\n            }\r\n        }\r\n    }\r\n    getLayer(order, visible = true) {\r\n        let existingLayer = this.getLayerByOrder(order);\r\n        if (existingLayer) {\r\n            return existingLayer;\r\n        }\r\n        const layer = this.createDetachedLayer(order == 99);\r\n        layer.order = order;\r\n        layer.visible = visible;\r\n        if (layer.visible && this._width) {\r\n            layer.view.width = this._width;\r\n            layer.view.style.width = this._clientWidth + \"px\";\r\n            layer.view.height = this._height;\r\n            layer.view.style.height = this._clientHeight + \"px\";\r\n        }\r\n        const layers = this.layers;\r\n        layers.push(layer);\r\n        layers.sort((a, b) => {\r\n            if (a.order > b.order) {\r\n                return 1;\r\n            }\r\n            else if (a.order < b.order) {\r\n                return -1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        });\r\n        const length = layers.length;\r\n        const layerIndex = $array.indexOf(layers, layer);\r\n        let next;\r\n        for (let i = layerIndex + 1; i < length; i++) {\r\n            if (layers[i].visible) {\r\n                next = layers[i];\r\n                break;\r\n            }\r\n        }\r\n        if (layer.visible) {\r\n            if (next === undefined) {\r\n                this._layerDom.appendChild(layer.view);\r\n            }\r\n            else {\r\n                this._layerDom.insertBefore(layer.view, next.view);\r\n            }\r\n        }\r\n        return layer;\r\n    }\r\n    render(root) {\r\n        this._dirtyLayers.length = 0;\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                if (layer.dirty && layer.visible) {\r\n                    this._dirtyLayers.push(layer);\r\n                    layer.clear();\r\n                }\r\n            }\r\n        });\r\n        this._ghostLayer.clear();\r\n        root.render(this.defaultLayer);\r\n        this._ghostLayer.context.restore();\r\n        //setTimeout(() => {\r\n        // Remove this after the Chrome bug is fixed:\r\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1279394\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer) {\r\n                const context = layer.context;\r\n                context.beginPath();\r\n                context.moveTo(0, 0);\r\n                context.stroke();\r\n            }\r\n        });\r\n        $array.each(this._dirtyLayers, (layer) => {\r\n            layer.context.restore();\r\n            layer.dirty = false;\r\n        });\r\n        //}, 100)\r\n        if (this._hovering.size && this._lastPointerMoveEvent) {\r\n            //this._mouseMoveThrottler.run();\r\n            const native = this._lastPointerMoveEvent.native;\r\n            $array.each(this._lastPointerMoveEvent.events, (event) => {\r\n                this._dispatchGlobalMousemove(event, native);\r\n            });\r\n        }\r\n    }\r\n    paintId(obj) {\r\n        const id = distributeId(++this._colorId);\r\n        const color = Color.fromHex(id).toCSS();\r\n        this._colorMap[color] = obj;\r\n        return color;\r\n    }\r\n    _removeObject(obj) {\r\n        if (obj._colorId !== undefined) {\r\n            delete this._colorMap[obj._colorId];\r\n        }\r\n    }\r\n    // protected _identifyObjectByColor(colorId: number): CanvasDisplayObject | undefined {\r\n    // \treturn this._colorMap[colorId];\r\n    // }\r\n    _adjustBoundingBox(bbox) {\r\n        const margin = this._ghostLayer.margin;\r\n        return new DOMRect(bbox.left - margin.left, bbox.top - margin.top, bbox.width + margin.left + margin.right, bbox.height + margin.top + margin.bottom);\r\n    }\r\n    getEvent(originalEvent, adjustPoint = true) {\r\n        const bbox = this.view.getBoundingClientRect();\r\n        const originalPoint = {\r\n            x: originalEvent.clientX || 0,\r\n            y: originalEvent.clientY || 0,\r\n        };\r\n        const point = {\r\n            x: originalPoint.x - (adjustPoint ? bbox.left : 0),\r\n            y: originalPoint.y - (adjustPoint ? bbox.top : 0),\r\n        };\r\n        return new CanvasRendererEvent(originalEvent, originalPoint, point, this._adjustBoundingBox(bbox));\r\n    }\r\n    _getHitTarget(point, bbox) {\r\n        if (bbox.width === 0 || bbox.height === 0 || point.x < bbox.left || point.x > bbox.right || point.y < bbox.top || point.y > bbox.bottom) {\r\n            return;\r\n        }\r\n        else {\r\n            const pixel = this._ghostLayer.getImageData(point, bbox);\r\n            if (pixel.data[0] === 0 && pixel.data[1] === 0 && pixel.data[2] === 0) {\r\n                return false;\r\n            }\r\n            const colorId = Color.fromRGB(pixel.data[0], pixel.data[1], pixel.data[2]).toCSS();\r\n            const hit = this._colorMap[colorId];\r\n            return hit;\r\n        }\r\n    }\r\n    _withEvents(key, f) {\r\n        const events = this._events[key];\r\n        if (events !== undefined) {\r\n            events.dispatching = true;\r\n            try {\r\n                f(events);\r\n            }\r\n            finally {\r\n                events.dispatching = false;\r\n                if (events.cleanup) {\r\n                    events.cleanup = false;\r\n                    $array.keepIf(events.callbacks, (callback) => {\r\n                        return !callback.disposed;\r\n                    });\r\n                    if (events.callbacks.length === 0) {\r\n                        events.disposer.dispose();\r\n                        delete this._events[key];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _dispatchEventAll(key, event) {\r\n        if (!this.interactionsEnabled) {\r\n            return;\r\n        }\r\n        this._withEvents(key, (events) => {\r\n            $array.each(events.callbacks, (callback) => {\r\n                if (!callback.disposed) {\r\n                    callback.callback.call(callback.context, event);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    _dispatchEvent(key, target, event) {\r\n        if (!this.interactionsEnabled) {\r\n            return false;\r\n        }\r\n        let dispatched = false;\r\n        this._withEvents(key, (events) => {\r\n            $array.each(events.callbacks, (callback) => {\r\n                if (!callback.disposed && callback.object === target) {\r\n                    callback.callback.call(callback.context, event);\r\n                    dispatched = true;\r\n                }\r\n            });\r\n        });\r\n        return dispatched;\r\n    }\r\n    _dispatchMousedown(originalEvent) {\r\n        const button = originalEvent.button;\r\n        if (button != 0 && button != 2 && button != 1 && button !== undefined) {\r\n            // Ignore non-primary mouse buttons\r\n            return;\r\n        }\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox);\r\n        if (target) {\r\n            const id = event.id;\r\n            let dragged = false;\r\n            eachTargets(target, (obj) => {\r\n                const info = { id: id, value: obj };\r\n                this._mousedown.push(info);\r\n                if (!dragged && this._dispatchEvent(\"pointerdown\", obj, event)) {\r\n                    // Only dispatch the first element which matches\r\n                    dragged = true;\r\n                    const has = this._dragging.some((x) => {\r\n                        return x.value === obj && x.id === id;\r\n                    });\r\n                    if (!has) {\r\n                        this._dragging.push(info);\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n        }\r\n    }\r\n    _dispatchGlobalMousemove(originalEvent, native) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox);\r\n        event.native = native;\r\n        if (target) {\r\n            this._hovering.forEach((obj) => {\r\n                if (!obj.contains(target)) {\r\n                    this._hovering.delete(obj);\r\n                    if (obj.cursorOverStyle) {\r\n                        $utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle);\r\n                    }\r\n                    this._dispatchEvent(\"pointerout\", obj, event);\r\n                }\r\n            });\r\n            if (event.native) {\r\n                eachTargets(target, (obj) => {\r\n                    if (!this._hovering.has(obj)) {\r\n                        this._hovering.add(obj);\r\n                        if (obj.cursorOverStyle) {\r\n                            obj._replacedCursorStyle = $utils.getStyle(document.body, \"cursor\");\r\n                            $utils.setStyle(document.body, \"cursor\", obj.cursorOverStyle);\r\n                        }\r\n                        this._dispatchEvent(\"pointerover\", obj, event);\r\n                    }\r\n                    return true;\r\n                });\r\n            }\r\n            //} else if (target === false) {\r\n        }\r\n        else {\r\n            this._hovering.forEach((obj) => {\r\n                if (obj.cursorOverStyle) {\r\n                    $utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle);\r\n                }\r\n                this._dispatchEvent(\"pointerout\", obj, event);\r\n            });\r\n            this._hovering.clear();\r\n        }\r\n        this._dispatchEventAll(\"globalpointermove\", event);\r\n    }\r\n    _dispatchGlobalMouseup(originalEvent, native) {\r\n        const event = this.getEvent(originalEvent);\r\n        event.native = native;\r\n        //const target = this._getHitTarget(event.originalPoint);\r\n        this._dispatchEventAll(\"globalpointerup\", event);\r\n    }\r\n    _dispatchDragMove(originalEvent) {\r\n        if (this._dragging.length !== 0) {\r\n            const event = this.getEvent(originalEvent);\r\n            const id = event.id;\r\n            this._dragging.forEach((obj) => {\r\n                if (obj.id === id) {\r\n                    this._dispatchEvent(\"pointermove\", obj.value, event);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _dispatchDragEnd(originalEvent) {\r\n        const button = originalEvent.button;\r\n        let clickevent;\r\n        if (button == 0 || button === undefined) {\r\n            clickevent = \"click\";\r\n        }\r\n        else if (button == 2) {\r\n            clickevent = \"rightclick\";\r\n        }\r\n        else if (button == 1) {\r\n            clickevent = \"middleclick\";\r\n        }\r\n        else {\r\n            // Ignore non-primary mouse buttons\r\n            return;\r\n        }\r\n        const event = this.getEvent(originalEvent);\r\n        const id = event.id;\r\n        if (this._mousedown.length !== 0) {\r\n            const target = this._getHitTarget(event.originalPoint, event.bbox);\r\n            if (target) {\r\n                this._mousedown.forEach((obj) => {\r\n                    if (obj.id === id && obj.value.contains(target)) {\r\n                        this._dispatchEvent(clickevent, obj.value, event);\r\n                    }\r\n                });\r\n            }\r\n            this._mousedown.length = 0;\r\n        }\r\n        if (this._dragging.length !== 0) {\r\n            this._dragging.forEach((obj) => {\r\n                if (obj.id === id) {\r\n                    this._dispatchEvent(\"pointerup\", obj.value, event);\r\n                }\r\n            });\r\n            this._dragging.length = 0;\r\n        }\r\n    }\r\n    _dispatchDoubleClick(originalEvent) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox);\r\n        if (target) {\r\n            eachTargets(target, (obj) => {\r\n                if (this._dispatchEvent(\"dblclick\", obj, event)) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _dispatchWheel(originalEvent) {\r\n        const event = this.getEvent(originalEvent);\r\n        const target = this._getHitTarget(event.originalPoint, event.bbox);\r\n        if (target) {\r\n            eachTargets(target, (obj) => {\r\n                if (this._dispatchEvent(\"wheel\", obj, event)) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _makeSharedEvent(key, f) {\r\n        if (this._listeners[key] === undefined) {\r\n            const listener = f();\r\n            this._listeners[key] = new CounterDisposer(() => {\r\n                delete this._listeners[key];\r\n                listener.dispose();\r\n            });\r\n        }\r\n        return this._listeners[key].increment();\r\n    }\r\n    _onPointerEvent(name, f) {\r\n        let native = false;\r\n        let timer = null;\r\n        function clear() {\r\n            timer = null;\r\n            native = false;\r\n        }\r\n        return new MultiDisposer([\r\n            new Disposer(() => {\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                }\r\n                clear();\r\n            }),\r\n            $utils.addEventListener(this.view, $utils.getRendererEvent(name), (_) => {\r\n                native = true;\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                }\r\n                timer = window.setTimeout(clear, 0);\r\n            }),\r\n            onPointerEvent(window, name, (ev) => {\r\n                if (timer !== null) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                f(ev, native);\r\n                native = false;\r\n            }),\r\n        ]);\r\n    }\r\n    // This ensures that only a single DOM event is added (e.g. only a single mousemove event listener)\r\n    _initEvent(key) {\r\n        switch (key) {\r\n            case \"globalpointermove\":\r\n            case \"pointerover\":\r\n            case \"pointerout\":\r\n                return this._makeSharedEvent(\"pointermove\", () => {\r\n                    const listener = (events, native) => {\r\n                        this._lastPointerMoveEvent = { events, native };\r\n                        $array.each(events, (event) => {\r\n                            this._dispatchGlobalMousemove(event, native);\r\n                        });\r\n                    };\r\n                    return new MultiDisposer([\r\n                        this._onPointerEvent(\"pointerdown\", listener),\r\n                        this._onPointerEvent(\"pointermove\", listener),\r\n                    ]);\r\n                });\r\n            case \"globalpointerup\":\r\n                return this._makeSharedEvent(\"pointerup\", () => {\r\n                    var mouseup = this._onPointerEvent(\"pointerup\", (events, native) => {\r\n                        $array.each(events, (event) => {\r\n                            this._dispatchGlobalMouseup(event, native);\r\n                        });\r\n                        this._lastPointerMoveEvent = { events, native };\r\n                    });\r\n                    var pointercancel = this._onPointerEvent(\"pointercancel\", (events, native) => {\r\n                        $array.each(events, (event) => {\r\n                            this._dispatchGlobalMouseup(event, native);\r\n                        });\r\n                        this._lastPointerMoveEvent = { events, native };\r\n                    });\r\n                    return new Disposer(() => {\r\n                        mouseup.dispose();\r\n                        pointercancel.dispose();\r\n                    });\r\n                });\r\n            case \"click\":\r\n            case \"rightclick\":\r\n            case \"middleclick\":\r\n            case \"pointerdown\":\r\n            /*\r\n                return this._makeSharedEvent(\"pointerdown\", () => {\r\n                    return this._onPointerEvent(\"pointerdown\", (event, native) => {\r\n                        this._lastPointerMoveEvent = { event, native };\r\n                        this._dispatchMousedown(event)\r\n                    });\r\n                });\r\n            */\r\n            case \"pointermove\":\r\n            case \"pointerup\":\r\n                return this._makeSharedEvent(\"pointerdown\", () => {\r\n                    //const throttler = new Throttler();\r\n                    const mousedown = onPointerEvent(this.view, \"pointerdown\", (events) => {\r\n                        $array.each(events, (ev) => {\r\n                            this._dispatchMousedown(ev);\r\n                        });\r\n                    });\r\n                    // TODO handle throttling properly for multitouch\r\n                    const mousemove = this._onPointerEvent(\"pointermove\", (ev) => {\r\n                        //throttler.throttle(() => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDragMove(ev);\r\n                        });\r\n                        //});\r\n                    });\r\n                    const mouseup = this._onPointerEvent(\"pointerup\", (ev) => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDragEnd(ev);\r\n                        });\r\n                    });\r\n                    const pointercancel = this._onPointerEvent(\"pointercancel\", (ev) => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDragEnd(ev);\r\n                        });\r\n                    });\r\n                    return new Disposer(() => {\r\n                        mousedown.dispose();\r\n                        mousemove.dispose();\r\n                        mouseup.dispose();\r\n                        pointercancel.dispose();\r\n                    });\r\n                });\r\n            case \"dblclick\":\r\n                return this._makeSharedEvent(\"dblclick\", () => {\r\n                    return this._onPointerEvent(\"dblclick\", (ev) => {\r\n                        $array.each(ev, (ev) => {\r\n                            this._dispatchDoubleClick(ev);\r\n                        });\r\n                    });\r\n                });\r\n            case \"wheel\":\r\n                return this._makeSharedEvent(\"wheel\", () => {\r\n                    return $utils.addEventListener(window, $utils.getRendererEvent(\"wheel\"), (event) => {\r\n                        this._dispatchWheel(event);\r\n                    }, { passive: false });\r\n                });\r\n        }\r\n    }\r\n    _addEvent(object, key, callback, context) {\r\n        let events = this._events[key];\r\n        if (events === undefined) {\r\n            events = this._events[key] = {\r\n                disposer: this._initEvent(key),\r\n                callbacks: [],\r\n                dispatching: false,\r\n                cleanup: false,\r\n            };\r\n        }\r\n        const listener = { object, context, callback, disposed: false };\r\n        events.callbacks.push(listener);\r\n        return new Disposer(() => {\r\n            listener.disposed = true;\r\n            if (events.dispatching) {\r\n                events.cleanup = true;\r\n            }\r\n            else {\r\n                $array.removeFirst(events.callbacks, listener);\r\n                if (events.callbacks.length === 0) {\r\n                    events.disposer.dispose();\r\n                    delete this._events[key];\r\n                }\r\n            }\r\n        });\r\n    }\r\n    getCanvas(root, options) {\r\n        // Make sure everything is rendered\r\n        this.render(root);\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        let scale = this.resolution;\r\n        // Check if we need to scale\r\n        if (options.minWidth && (options.minWidth > this._width)) {\r\n            let minScale = options.minWidth / this._width;\r\n            if (minScale > scale) {\r\n                scale = minScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.minHeight && (options.minHeight > this._height)) {\r\n            let minScale = options.minHeight / this._height;\r\n            if (minScale > scale) {\r\n                scale = minScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.maxWidth && (options.maxWidth < this._width)) {\r\n            let maxScale = options.maxWidth / this._width;\r\n            if (maxScale < scale) {\r\n                scale = maxScale * this.resolution;\r\n            }\r\n        }\r\n        if (options.maxHeight && (options.maxHeight > this._height)) {\r\n            let maxScale = options.maxHeight / this._height;\r\n            if (maxScale < scale) {\r\n                scale = maxScale * this.resolution;\r\n            }\r\n        }\r\n        // Check if we need to compensate for pixel ratio\r\n        if (options.maintainPixelRatio) {\r\n            scale /= this.resolution;\r\n        }\r\n        // Init list canvases to remove from DOM after export\r\n        const canvases = [];\r\n        // Set up new canvas for export\r\n        let forceRender = false;\r\n        let canvasWidth = this._width;\r\n        let canvasHeight = this._height;\r\n        const canvas = document.createElement(\"canvas\");\r\n        if (scale != this.resolution) {\r\n            forceRender = true;\r\n            canvasWidth = this._width * scale / this.resolution;\r\n            canvasHeight = this._height * scale / this.resolution;\r\n        }\r\n        canvas.width = canvasWidth;\r\n        canvas.height = canvasHeight;\r\n        // Add to DOM so it inherits CSS\r\n        canvas.style.position = \"fixed\";\r\n        canvas.style.top = \"-10000px\";\r\n        this.view.appendChild(canvas);\r\n        canvases.push(canvas);\r\n        // Context\r\n        const context = canvas.getContext(\"2d\");\r\n        let width = 0;\r\n        let height = 0;\r\n        let needRerender = false;\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer && layer.visible) {\r\n                if (layer.tainted || forceRender) {\r\n                    needRerender = true;\r\n                    layer.exportableView = layer.view;\r\n                    layer.exportableContext = layer.context;\r\n                    layer.view = document.createElement(\"canvas\");\r\n                    // Add to DOM so it inherits CSS\r\n                    layer.view.style.position = \"fixed\";\r\n                    layer.view.style.top = \"-10000px\";\r\n                    this.view.appendChild(layer.view);\r\n                    canvases.push(layer.view);\r\n                    layer.view.width = canvasWidth;\r\n                    layer.view.height = canvasHeight;\r\n                    layer.context = layer.view.getContext(\"2d\");\r\n                    layer.dirty = true;\r\n                    layer.scale = scale;\r\n                }\r\n            }\r\n        });\r\n        if (needRerender) {\r\n            this._omitTainted = true;\r\n            this.render(root);\r\n            this._omitTainted = false;\r\n        }\r\n        $array.each(this.layers, (layer) => {\r\n            if (layer && layer.visible) {\r\n                // Layer is fine. Just plop it into our target canvas\r\n                context.drawImage(layer.view, 0, 0);\r\n                // Restore layer original canvas\r\n                if (layer.exportableView) {\r\n                    layer.view = layer.exportableView;\r\n                    layer.exportableView = undefined;\r\n                }\r\n                if (layer.exportableContext) {\r\n                    layer.context = layer.exportableContext;\r\n                    layer.exportableContext = undefined;\r\n                }\r\n                if (width < layer.view.clientWidth) {\r\n                    width = layer.view.clientWidth;\r\n                }\r\n                if (height < layer.view.clientHeight) {\r\n                    height = layer.view.clientHeight;\r\n                }\r\n                layer.scale = undefined;\r\n            }\r\n        });\r\n        canvas.style.width = width + \"px\";\r\n        canvas.style.height = height + \"px\";\r\n        $array.each(canvases, (canvas) => {\r\n            canvas.style.position = \"\";\r\n            canvas.style.top = \"\";\r\n            this.view.removeChild(canvas);\r\n        });\r\n        return canvas;\r\n    }\r\n}\r\nclass GhostLayer {\r\n    constructor() {\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"context\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"margin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0,\r\n            }\r\n        });\r\n        Object.defineProperty(this, \"_width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        this.view = document.createElement(\"canvas\");\r\n        this.context = this.view.getContext(\"2d\", { alpha: false, willReadFrequently: true });\r\n        this.context.imageSmoothingEnabled = false;\r\n        this.view.style.position = \"absolute\";\r\n        this.view.style.top = \"0px\";\r\n        this.view.style.left = \"0px\";\r\n    }\r\n    resize(width, height, resolution) {\r\n        width += (this.margin.left + this.margin.right);\r\n        height += (this.margin.top + this.margin.bottom);\r\n        this.view.style.left = -this.margin.left + \"px\";\r\n        this.view.style.top = -this.margin.top + \"px\";\r\n        this._width = Math.floor(width * resolution);\r\n        this._height = Math.floor(height * resolution);\r\n        this.view.width = this._width;\r\n        this.view.style.width = width + \"px\";\r\n        this.view.height = this._height;\r\n        this.view.style.height = height + \"px\";\r\n    }\r\n    getImageData(point, bbox) {\r\n        return this.context.getImageData(\r\n        // TODO should this round ?\r\n        Math.round(((point.x - bbox.left) / bbox.width) * this._width), Math.round(((point.y - bbox.top) / bbox.height) * this._height), 1, 1);\r\n    }\r\n    setMargin(layers) {\r\n        this.margin.left = 0;\r\n        this.margin.right = 0;\r\n        this.margin.top = 0;\r\n        this.margin.bottom = 0;\r\n        $array.each(layers, (layer) => {\r\n            if (layer.margin) {\r\n                this.margin.left = Math.max(this.margin.left, layer.margin.left);\r\n                this.margin.right = Math.max(this.margin.right, layer.margin.right);\r\n                this.margin.top = Math.max(this.margin.top, layer.margin.top);\r\n                this.margin.bottom = Math.max(this.margin.bottom, layer.margin.bottom);\r\n            }\r\n        });\r\n    }\r\n    clear() {\r\n        this.context.save();\r\n        this.context.fillStyle = '#000';\r\n        this.context.fillRect(0, 0, this._width, this._height);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport class CanvasLayer {\r\n    constructor(view, context) {\r\n        Object.defineProperty(this, \"view\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"context\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"tainted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"margin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"order\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"visible\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"scale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"exportableView\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"exportableContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_width\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_height\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        this.view = view;\r\n        this.context = context;\r\n    }\r\n    resize(width, height, resolution) {\r\n        if (this.width != null) {\r\n            width = this.width;\r\n        }\r\n        if (this.height != null) {\r\n            height = this.height;\r\n        }\r\n        if (this.margin) {\r\n            width += (this.margin.left + this.margin.right);\r\n            height += (this.margin.top + this.margin.bottom);\r\n            this.view.style.left = -this.margin.left + \"px\";\r\n            this.view.style.top = -this.margin.top + \"px\";\r\n        }\r\n        else {\r\n            this.view.style.left = \"0px\";\r\n            this.view.style.top = \"0px\";\r\n        }\r\n        this._width = Math.floor(width * resolution);\r\n        this._height = Math.floor(height * resolution);\r\n        this.view.width = this._width;\r\n        this.view.style.width = width + \"px\";\r\n        this.view.height = this._height;\r\n        this.view.style.height = height + \"px\";\r\n    }\r\n    clear() {\r\n        this.context.save();\r\n        this.context.clearRect(0, 0, this._width, this._height);\r\n    }\r\n}\r\n//# sourceMappingURL=CanvasRenderer.js.map","import { Container } from \"./render/Container\";\r\nimport { Text } from \"./render/Text\";\r\nimport { HorizontalLayout } from \"./render/HorizontalLayout\";\r\nimport { VerticalLayout } from \"./render/VerticalLayout\";\r\nimport { GridLayout } from \"./render/GridLayout\";\r\nimport { Disposer } from \"./util/Disposer\";\r\nimport { ResizeSensor } from \"./util/ResizeSensor\";\r\nimport { InterfaceColors } from \"./util/InterfaceColors\";\r\nimport { Graphics } from \"./render/Graphics\";\r\nimport { Rectangle } from \"./render/Rectangle\";\r\nimport { Tooltip } from \"./render/Tooltip\";\r\nimport { NumberFormatter } from \"./util/NumberFormatter\";\r\nimport { DateFormatter } from \"./util/DateFormatter\";\r\nimport { DurationFormatter } from \"./util/DurationFormatter\";\r\nimport { Language } from \"./util/Language\";\r\nimport { EventDispatcher } from \"./util/EventDispatcher\";\r\nimport { DefaultTheme } from \"../themes/DefaultTheme\";\r\nimport { CanvasRenderer } from \"./render/backend/CanvasRenderer\";\r\nimport { p100, percent } from \"./util/Percent\";\r\nimport { color } from \"./util/Color\";\r\nimport { populateString } from \"./util/PopulateString\";\r\nimport { registry } from \"./Registry\";\r\nimport * as $order from \"./util/Order\";\r\nimport * as $array from \"./util/Array\";\r\nimport * as $object from \"./util/Object\";\r\nimport * as $utils from \"./util/Utils\";\r\nimport * as $type from \"./util/Type\";\r\nimport en from \"../../locales/en\";\r\nfunction rAF(fps, callback) {\r\n    if (fps == null) {\r\n        requestAnimationFrame(callback);\r\n    }\r\n    else {\r\n        setTimeout(() => {\r\n            requestAnimationFrame(callback);\r\n        }, 1000 / fps);\r\n    }\r\n}\r\n// TODO implement Disposer\r\n/**\r\n * Root element of the chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/getting-started/#Root_element} for more info\r\n */\r\nexport class Root {\r\n    constructor(id, settings = {}, isReal) {\r\n        /**\r\n         * A reference to original chart container (div element).\r\n         */\r\n        Object.defineProperty(this, \"dom\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_inner\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_isDirtyParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyParents\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyBounds\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_dirtyPositions\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_ticker\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_tickers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_updateTick\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        /**\r\n         * Root's event dispatcher.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n         */\r\n        Object.defineProperty(this, \"events\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new EventDispatcher()\r\n        });\r\n        /**\r\n         * @ignore\r\n         * @todo needs description\r\n         */\r\n        Object.defineProperty(this, \"animationTime\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: null\r\n        });\r\n        Object.defineProperty(this, \"_animations\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_renderer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rootContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Main content container.\r\n         */\r\n        Object.defineProperty(this, \"container\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A [[Container]] used to display tooltips in.\r\n         */\r\n        Object.defineProperty(this, \"tooltipContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipContainerSettings\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltip\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // Locale-related\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"language\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Language.new(this, {})\r\n        });\r\n        /**\r\n         * Locale used by the chart.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/}\r\n         */\r\n        Object.defineProperty(this, \"locale\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: en\r\n        });\r\n        // Date-time related\r\n        /**\r\n         * Use UTC when formatting date/time.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#UTC_and_time_zones} for more info\r\n         */\r\n        Object.defineProperty(this, \"utc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * If set, will format date/time in specific time zone.\r\n         *\r\n         * The value should be named time zone, e.g.:\r\n         * `\"America/Vancouver\"`, `\"Australia/Sydney\"`, `\"UTC\"`.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Time_zone} for more info\r\n         * @since 5.1.0\r\n         */\r\n        Object.defineProperty(this, \"timezone\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * The maximum FPS that the Root will run at.\r\n         *\r\n         * If `undefined` it will run at the highest FPS.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Performance} for more info\r\n         */\r\n        Object.defineProperty(this, \"fps\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Number formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\r\n         */\r\n        Object.defineProperty(this, \"numberFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: NumberFormatter.new(this, {})\r\n        });\r\n        /**\r\n         * Date/time formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n         */\r\n        Object.defineProperty(this, \"dateFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: DateFormatter.new(this, {})\r\n        });\r\n        /**\r\n         * Duration formatter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\r\n         */\r\n        Object.defineProperty(this, \"durationFormatter\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: DurationFormatter.new(this, {})\r\n        });\r\n        // Accessibility\r\n        /**\r\n         * Global tab index for using for the whole chart\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\r\n         */\r\n        Object.defineProperty(this, \"tabindex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        //@todo maybe make this better\r\n        Object.defineProperty(this, \"_tabindexes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_a11yD\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_focusElementDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_focusElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_focusedSprite\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_isShift\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_keyboardDragPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_readerAlertElement\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_logo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipDiv\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Used for dynamically-created CSS and JavaScript with strict source policies.\r\n         */\r\n        Object.defineProperty(this, \"nonce\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Special color set to be used for various controls.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Interface_colors} for more info\r\n         */\r\n        Object.defineProperty(this, \"interfaceColors\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * An instance of vertical layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default VerticalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"verticalLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: VerticalLayout.new(this, {})\r\n        });\r\n        /**\r\n         * An instance of horizontal layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default HorizontalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"horizontalLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: HorizontalLayout.new(this, {})\r\n        });\r\n        /**\r\n         * An instance of grid layout object that can be used to set `layout` setting\r\n         * of a [[Container]].\r\n         *\r\n         * @default VerticalLayout.new()\r\n         */\r\n        Object.defineProperty(this, \"gridLayout\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: GridLayout.new(this, {})\r\n        });\r\n        /**\r\n         * Indicates whether chart should resized automatically when parent container\r\n         * width and/or height changes.\r\n         *\r\n         * If disabled (`autoResize = false`) you can make the chart resize manually\r\n         * by calling root element's `resize()` method.\r\n         */\r\n        Object.defineProperty(this, \"autoResize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"_fontHash\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: \"\"\r\n        });\r\n        Object.defineProperty(this, \"_isDisposed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_disposers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_resizeSensorDisposer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltips\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_htmlElementContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_htmlEnabledContainers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        if (!isReal) {\r\n            throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\r\n        }\r\n        if (settings.accessible == false) {\r\n            this._a11yD = true;\r\n        }\r\n        if (settings.useSafeResolution == null) {\r\n            settings.useSafeResolution = true;\r\n        }\r\n        let resolution;\r\n        if (settings.useSafeResolution) {\r\n            resolution = $utils.getSafeResolution();\r\n        }\r\n        this._renderer = new CanvasRenderer(resolution);\r\n        let dom;\r\n        if (id instanceof HTMLElement) {\r\n            dom = id;\r\n        }\r\n        else {\r\n            dom = document.getElementById(id);\r\n        }\r\n        $array.each(registry.rootElements, (root) => {\r\n            if (root.dom === dom) {\r\n                throw new Error(\"You cannot have multiple Roots on the same DOM node\");\r\n            }\r\n        });\r\n        this.interfaceColors = InterfaceColors.new(this, {});\r\n        if (dom === null) {\r\n            throw new Error(\"Could not find HTML element with id `\" + id + \"`\");\r\n        }\r\n        this.dom = dom;\r\n        let inner = document.createElement(\"div\");\r\n        inner.style.position = \"relative\";\r\n        inner.style.height = \"100%\";\r\n        dom.appendChild(inner);\r\n        const tooltipContainerBounds = settings.tooltipContainerBounds;\r\n        if (tooltipContainerBounds) {\r\n            this._tooltipContainerSettings = tooltipContainerBounds;\r\n        }\r\n        this._inner = inner;\r\n        this._updateComputedStyles();\r\n        registry.rootElements.push(this);\r\n    }\r\n    static new(id, settings) {\r\n        const root = new Root(id, settings, true);\r\n        root._init();\r\n        return root;\r\n    }\r\n    moveDOM(id) {\r\n        let dom;\r\n        if (id instanceof HTMLElement) {\r\n            dom = id;\r\n        }\r\n        else {\r\n            dom = document.getElementById(id);\r\n        }\r\n        if (dom) {\r\n            while (this.dom.childNodes.length > 0) {\r\n                dom.appendChild(this.dom.childNodes[0]);\r\n            }\r\n            this.dom = dom;\r\n            this._initResizeSensor();\r\n            this.resize();\r\n        }\r\n    }\r\n    _handleLogo() {\r\n        if (this._logo) {\r\n            const w = this.dom.offsetWidth;\r\n            const h = this.dom.offsetHeight;\r\n            if ((w <= 150) || (h <= 60)) {\r\n                this._logo.hide();\r\n            }\r\n            else {\r\n                this._logo.show();\r\n            }\r\n        }\r\n    }\r\n    _showBranding() {\r\n        if (!this._logo) {\r\n            const logo = this.tooltipContainer.children.push(Container.new(this, {\r\n                interactive: true,\r\n                interactiveChildren: false,\r\n                position: \"absolute\",\r\n                setStateOnChildren: true,\r\n                paddingTop: 9,\r\n                paddingRight: 9,\r\n                paddingBottom: 9,\r\n                paddingLeft: 9,\r\n                scale: .6,\r\n                y: percent(100),\r\n                centerY: p100,\r\n                tooltipText: \"Created using amCharts 5\",\r\n                tooltipX: p100,\r\n                cursorOverStyle: \"pointer\",\r\n                background: Rectangle.new(this, {\r\n                    fill: color(0x474758),\r\n                    fillOpacity: 0,\r\n                    tooltipY: 5\r\n                })\r\n            }));\r\n            const tooltip = Tooltip.new(this, {\r\n                pointerOrientation: \"horizontal\",\r\n                paddingTop: 4,\r\n                paddingRight: 7,\r\n                paddingBottom: 4,\r\n                paddingLeft: 7\r\n            });\r\n            tooltip.label.setAll({\r\n                fontSize: 12\r\n            });\r\n            tooltip.get(\"background\").setAll({\r\n                fill: this.interfaceColors.get(\"background\"),\r\n                stroke: this.interfaceColors.get(\"grid\"),\r\n                strokeOpacity: 0.3\r\n            });\r\n            logo.set(\"tooltip\", tooltip);\r\n            logo.events.on(\"click\", () => {\r\n                window.open(\"https://www.amcharts.com/\", \"_blank\");\r\n            });\r\n            logo.states.create(\"hover\", {});\r\n            const m = logo.children.push(Graphics.new(this, {\r\n                stroke: color(0xcccccc),\r\n                strokeWidth: 3,\r\n                svgPath: \"M5 25 L13 25h13.6c3.4 0 6 0 10.3-4.3s5.2-12 8.6-12c3.4 0 4.3 8.6 7.7 8.6M83.4 25H79.8c-3.4 0-6 0-10.3-4.3s-5.2-12-8.6-12-4.3 8.6-7.7 8.6\"\r\n            }));\r\n            m.states.create(\"hover\", { stroke: color(0x3CABFF) });\r\n            const a = logo.children.push(Graphics.new(this, {\r\n                stroke: color(0x888888),\r\n                strokeWidth: 3,\r\n                svgPath: \"M83.4 25h-31C37 25 39.5 4.4 28.4 4.4S18.9 24.2 4.3 25H0\"\r\n            }));\r\n            a.states.create(\"hover\", { stroke: color(0x474758) });\r\n            //logo.set(\"tooltip\", this._tooltip);\r\n            //logo.setPrivate(\"tooltipTarget\", logo.get(\"background\"));\r\n            this._logo = logo;\r\n            this._handleLogo();\r\n        }\r\n    }\r\n    _init() {\r\n        const renderer = this._renderer;\r\n        const rect = this.dom.getBoundingClientRect();\r\n        const width = Math.floor(rect.width);\r\n        const height = Math.floor(rect.height);\r\n        const rootContainer = Container.new(this, { visible: true, width, height });\r\n        this._rootContainer = rootContainer;\r\n        this._rootContainer._defaultThemes.push(DefaultTheme.new(this));\r\n        const container = rootContainer.children.push(Container.new(this, { visible: true, width: p100, height: p100 }));\r\n        this.container = container;\r\n        renderer.resize(width, height);\r\n        //@todo: better appendChild - refer\r\n        this._inner.appendChild(renderer.view);\r\n        // TODO: TMP TMP TMP for testing only, remove\r\n        //renderer.debugGhostView = true;\r\n        this._initResizeSensor();\r\n        // HTML content holder\r\n        const htmlElementContainer = document.createElement(\"div\");\r\n        this._htmlElementContainer = htmlElementContainer;\r\n        htmlElementContainer.className = \"am5-html-container\";\r\n        htmlElementContainer.style.position = \"absolute\";\r\n        htmlElementContainer.style.pointerEvents = \"none\";\r\n        if (!this._tooltipContainerSettings) {\r\n            htmlElementContainer.style.overflow = \"hidden\";\r\n        }\r\n        this._inner.appendChild(htmlElementContainer);\r\n        if (this._a11yD !== true) {\r\n            // Create element which is used to make announcements to screen reader\r\n            const readerAlertElement = document.createElement(\"div\");\r\n            readerAlertElement.className = \"am5-reader-container\";\r\n            readerAlertElement.setAttribute(\"role\", \"alert\");\r\n            readerAlertElement.style.zIndex = \"-100000\";\r\n            readerAlertElement.style.opacity = \"0\";\r\n            readerAlertElement.style.position = \"absolute\";\r\n            readerAlertElement.style.top = \"0\";\r\n            this._readerAlertElement = readerAlertElement;\r\n            this._inner.appendChild(this._readerAlertElement);\r\n            const focusElementContainer = document.createElement(\"div\");\r\n            focusElementContainer.className = \"am5-focus-container\";\r\n            focusElementContainer.style.position = \"absolute\";\r\n            focusElementContainer.style.pointerEvents = \"none\";\r\n            focusElementContainer.style.top = \"0px\";\r\n            focusElementContainer.style.left = \"0px\";\r\n            focusElementContainer.style.overflow = \"hidden\";\r\n            focusElementContainer.style.width = width + \"px\";\r\n            focusElementContainer.style.height = height + \"px\";\r\n            focusElementContainer.setAttribute(\"role\", \"application\");\r\n            $utils.setInteractive(focusElementContainer, false);\r\n            this._focusElementContainer = focusElementContainer;\r\n            this._inner.appendChild(this._focusElementContainer);\r\n            const tooltipElementContainer = document.createElement(\"div\");\r\n            this._tooltipElementContainer = tooltipElementContainer;\r\n            tooltipElementContainer.className = \"am5-tooltip-container\";\r\n            this._inner.appendChild(tooltipElementContainer);\r\n            // Add keyboard events for accessibility, e.g. simulating drag with arrow\r\n            // keys and click with ENTER\r\n            if ($utils.supports(\"keyboardevents\")) {\r\n                this._disposers.push($utils.addEventListener(window, \"keydown\", (ev) => {\r\n                    if (ev.keyCode == 16) {\r\n                        this._isShift = true;\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(window, \"keyup\", (ev) => {\r\n                    if (ev.keyCode == 16) {\r\n                        this._isShift = false;\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(focusElementContainer, \"keydown\", (ev) => {\r\n                    const focusedSprite = this._focusedSprite;\r\n                    if (focusedSprite) {\r\n                        if (ev.keyCode == 27) {\r\n                            // ESC pressed - lose current focus\r\n                            $utils.blur();\r\n                            this._focusedSprite = undefined;\r\n                        }\r\n                        let dragOffsetX = 0;\r\n                        let dragOffsetY = 0;\r\n                        // TODO: figure out if using bogus MouseEvent is fine, or it will\r\n                        // fail on some platforms\r\n                        switch (ev.keyCode) {\r\n                            case 13:\r\n                                ev.preventDefault();\r\n                                const downEvent = renderer.getEvent(new MouseEvent(\"click\"));\r\n                                focusedSprite.events.dispatch(\"click\", {\r\n                                    type: \"click\",\r\n                                    originalEvent: downEvent.event,\r\n                                    point: downEvent.point,\r\n                                    simulated: true,\r\n                                    target: focusedSprite\r\n                                });\r\n                                return;\r\n                            case 37:\r\n                                dragOffsetX = -6;\r\n                                break;\r\n                            case 39:\r\n                                dragOffsetX = 6;\r\n                                break;\r\n                            case 38:\r\n                                dragOffsetY = -6;\r\n                                break;\r\n                            case 40:\r\n                                dragOffsetY = 6;\r\n                                break;\r\n                            default:\r\n                                return;\r\n                        }\r\n                        if (dragOffsetX != 0 || dragOffsetY != 0) {\r\n                            ev.preventDefault();\r\n                            if (!focusedSprite.isDragging()) {\r\n                                // Start dragging\r\n                                this._keyboardDragPoint = {\r\n                                    x: 0,\r\n                                    y: 0\r\n                                };\r\n                                const downEvent = renderer.getEvent(new MouseEvent(\"mousedown\", {\r\n                                    clientX: 0,\r\n                                    clientY: 0\r\n                                }));\r\n                                if (focusedSprite.events.isEnabled(\"pointerdown\")) {\r\n                                    focusedSprite.events.dispatch(\"pointerdown\", {\r\n                                        type: \"pointerdown\",\r\n                                        originalEvent: downEvent.event,\r\n                                        point: downEvent.point,\r\n                                        simulated: true,\r\n                                        target: focusedSprite\r\n                                    });\r\n                                }\r\n                            }\r\n                            else {\r\n                                // Move focus marker\r\n                                //this._positionFocusElement(focusedSprite);\r\n                            }\r\n                            // Move incrementally\r\n                            const dragPoint = this._keyboardDragPoint;\r\n                            dragPoint.x += dragOffsetX;\r\n                            dragPoint.y += dragOffsetY;\r\n                            const moveEvent = renderer.getEvent(new MouseEvent(\"mousemove\", {\r\n                                clientX: dragPoint.x,\r\n                                clientY: dragPoint.y\r\n                            }), false);\r\n                            if (focusedSprite.events.isEnabled(\"globalpointermove\")) {\r\n                                focusedSprite.events.dispatch(\"globalpointermove\", {\r\n                                    type: \"globalpointermove\",\r\n                                    originalEvent: moveEvent.event,\r\n                                    point: moveEvent.point,\r\n                                    simulated: true,\r\n                                    target: focusedSprite\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }));\r\n                this._disposers.push($utils.addEventListener(focusElementContainer, \"keyup\", (ev) => {\r\n                    if (this._focusedSprite) {\r\n                        const focusedSprite = this._focusedSprite;\r\n                        const keyCode = ev.keyCode;\r\n                        switch (keyCode) {\r\n                            case 37:\r\n                            case 39:\r\n                            case 38:\r\n                            case 40:\r\n                                if (focusedSprite.isDragging()) {\r\n                                    // Simulate drag stop\r\n                                    const dragPoint = this._keyboardDragPoint;\r\n                                    const upEvent = renderer.getEvent(new MouseEvent(\"mouseup\", {\r\n                                        clientX: dragPoint.x,\r\n                                        clientY: dragPoint.y\r\n                                    }));\r\n                                    if (focusedSprite.events.isEnabled(\"globalpointerup\")) {\r\n                                        focusedSprite.events.dispatch(\"globalpointerup\", {\r\n                                            type: \"globalpointerup\",\r\n                                            originalEvent: upEvent.event,\r\n                                            point: upEvent.point,\r\n                                            simulated: true,\r\n                                            target: focusedSprite\r\n                                        });\r\n                                    }\r\n                                    //this._positionFocusElement(focusedSprite);\r\n                                    this._keyboardDragPoint = undefined;\r\n                                    // @todo dispatch mouseup event instead of calling dragStop?\r\n                                    // this._dispatchEvent(\"globalpointerup\", target, upEvent);\r\n                                    return;\r\n                                }\r\n                                else if (focusedSprite.get(\"focusableGroup\")) {\r\n                                    // Find next item in focusable group\r\n                                    const group = focusedSprite.get(\"focusableGroup\");\r\n                                    const items = this._tabindexes.filter(item => item.get(\"focusableGroup\") == group);\r\n                                    let index = items.indexOf(focusedSprite);\r\n                                    const lastIndex = items.length - 1;\r\n                                    index += (keyCode == 39 || keyCode == 40) ? 1 : -1;\r\n                                    if (index < 0) {\r\n                                        index = lastIndex;\r\n                                    }\r\n                                    else if (index > lastIndex) {\r\n                                        index = 0;\r\n                                    }\r\n                                    $utils.focus(items[index].getPrivate(\"focusElement\").dom);\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n                }));\r\n            }\r\n        }\r\n        this._startTicker();\r\n        this.setThemes([]);\r\n        this._addTooltip();\r\n        if (!this._hasLicense()) {\r\n            this._showBranding();\r\n        }\r\n    }\r\n    _initResizeSensor() {\r\n        if (this._resizeSensorDisposer) {\r\n            this._resizeSensorDisposer.dispose();\r\n        }\r\n        this._resizeSensorDisposer = new ResizeSensor(this.dom, () => {\r\n            if (this.autoResize) {\r\n                this.resize();\r\n            }\r\n        });\r\n        this._disposers.push(this._resizeSensorDisposer);\r\n    }\r\n    /**\r\n     * If automatic resizing of char is disabled (`root.autoResize = false`), it\r\n     * can be resized manually by calling this method.\r\n     */\r\n    resize() {\r\n        const dom = this.dom;\r\n        const rect = dom.getBoundingClientRect();\r\n        const w = Math.floor(rect.width);\r\n        const h = Math.floor(rect.height);\r\n        if (w > 0 && h > 0) {\r\n            const htmlElementContainer = this._htmlElementContainer;\r\n            htmlElementContainer.style.width = w + \"px\";\r\n            htmlElementContainer.style.height = h + \"px\";\r\n            if (this._a11yD !== true) {\r\n                const focusElementContainer = this._focusElementContainer;\r\n                focusElementContainer.style.width = w + \"px\";\r\n                focusElementContainer.style.height = h + \"px\";\r\n            }\r\n            this._renderer.resize(w, h);\r\n            const rootContainer = this._rootContainer;\r\n            rootContainer.setPrivate(\"width\", w);\r\n            rootContainer.setPrivate(\"height\", h);\r\n            this._render();\r\n            this._handleLogo();\r\n        }\r\n    }\r\n    _render() {\r\n        this._renderer.render(this._rootContainer._display);\r\n        if (this._focusElementDirty) {\r\n            this._updateCurrentFocus();\r\n            this._focusElementDirty = false;\r\n        }\r\n    }\r\n    _runTickers(currentTime) {\r\n        $array.each(this._tickers, (f) => {\r\n            f(currentTime);\r\n        });\r\n    }\r\n    _runAnimations(currentTime) {\r\n        $array.keepIf(this._animations, (animation) => {\r\n            return animation._runAnimation(currentTime);\r\n        });\r\n    }\r\n    _runDirties() {\r\n        //console.log(\"tick **************************************************************\");\r\n        let allParents = {};\r\n        while (this._isDirtyParents) {\r\n            // This must be before calling _prepareChildren\r\n            this._isDirtyParents = false;\r\n            $object.keys(this._dirtyParents).forEach((key) => {\r\n                const parent = this._dirtyParents[key];\r\n                delete this._dirtyParents[key];\r\n                if (!parent.isDisposed()) {\r\n                    allParents[parent.uid] = parent;\r\n                    parent._prepareChildren();\r\n                }\r\n            });\r\n        }\r\n        $object.keys(allParents).forEach((key) => {\r\n            allParents[key]._updateChildren();\r\n        });\r\n        const objects = [];\r\n        //\t\tconsole.log(\"_beforeChanged\")\r\n        $object.keys(this._dirty).forEach((key) => {\r\n            const entity = this._dirty[key];\r\n            if (entity.isDisposed()) {\r\n                delete this._dirty[entity.uid];\r\n            }\r\n            else {\r\n                objects.push(entity);\r\n                entity._beforeChanged();\r\n            }\r\n        });\r\n        //\t\tconsole.log(\"_changed\")\r\n        objects.forEach((entity) => {\r\n            entity._changed();\r\n            delete this._dirty[entity.uid];\r\n            entity._clearDirty();\r\n        });\r\n        this._isDirty = false;\r\n        const depths = {};\r\n        const bounds = [];\r\n        $object.keys(this._dirtyBounds).forEach((key) => {\r\n            const entity = this._dirtyBounds[key];\r\n            delete this._dirtyBounds[key];\r\n            if (!entity.isDisposed()) {\r\n                depths[entity.uid] = entity.depth();\r\n                bounds.push(entity);\r\n            }\r\n        });\r\n        // High depth -> low depth\r\n        bounds.sort((x, y) => {\r\n            return $order.compare(depths[y.uid], depths[x.uid]);\r\n        });\r\n        //\t\tconsole.log(\"_updateBounds\")\r\n        bounds.forEach((entity) => {\r\n            entity._updateBounds();\r\n        });\r\n        //\t\tconsole.log(\"_updatePosition\")\r\n        const dirtyPositions = this._dirtyPositions;\r\n        $object.keys(dirtyPositions).forEach((key) => {\r\n            const sprite = dirtyPositions[key];\r\n            delete dirtyPositions[key];\r\n            if (!sprite.isDisposed()) {\r\n                sprite._updatePosition();\r\n            }\r\n        });\r\n        //\t\tconsole.log(\"_afterChanged\")\r\n        objects.forEach((entity) => {\r\n            entity._afterChanged();\r\n        });\r\n    }\r\n    _renderFrame(currentTime) {\r\n        if (this._updateTick) {\r\n            if (this.events.isEnabled(\"framestarted\")) {\r\n                this.events.dispatch(\"framestarted\", {\r\n                    type: \"framestarted\",\r\n                    target: this,\r\n                    timestamp: currentTime,\r\n                });\r\n            }\r\n            this._checkComputedStyles();\r\n            this._runTickers(currentTime);\r\n            this._runAnimations(currentTime);\r\n            this._runDirties();\r\n            this._render();\r\n            this._positionHTMLElements();\r\n            if (this.events.isEnabled(\"frameended\")) {\r\n                this.events.dispatch(\"frameended\", {\r\n                    type: \"frameended\",\r\n                    target: this,\r\n                    timestamp: currentTime,\r\n                });\r\n            }\r\n            return this._tickers.length === 0 &&\r\n                this._animations.length === 0 &&\r\n                !this._isDirty;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    _runTicker(currentTime) {\r\n        if (!this.isDisposed()) {\r\n            this.animationTime = currentTime;\r\n            const done = this._renderFrame(currentTime);\r\n            // No more work to do\r\n            if (done) {\r\n                this._ticker = null;\r\n                this.animationTime = null;\r\n            }\r\n            else {\r\n                rAF(this.fps, this._ticker);\r\n            }\r\n        }\r\n    }\r\n    _runTickerNow() {\r\n        if (!this.isDisposed()) {\r\n            for (;;) {\r\n                const currentTime = performance.now();\r\n                this.animationTime = currentTime;\r\n                const done = this._renderFrame(currentTime);\r\n                if (done) {\r\n                    this.animationTime = null;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _startTicker() {\r\n        if (this._ticker === null) {\r\n            this.animationTime = null;\r\n            this._ticker = (currentTime) => {\r\n                this._runTicker(currentTime);\r\n            };\r\n            rAF(this.fps, this._ticker);\r\n        }\r\n    }\r\n    /**\r\n     * Returns whether the root is updating or not.\r\n     */\r\n    get updateTick() {\r\n        return this._updateTick;\r\n    }\r\n    /**\r\n     * Enables or disables the root updating.\r\n     */\r\n    set updateTick(value) {\r\n        this._updateTick = value;\r\n        if (value) {\r\n            this._startTicker();\r\n        }\r\n    }\r\n    _addDirtyEntity(entity) {\r\n        if (this._dirty[entity.uid] === undefined) {\r\n            this._isDirty = true;\r\n            this._dirty[entity.uid] = entity;\r\n            this._startTicker();\r\n        }\r\n    }\r\n    _addDirtyParent(parent) {\r\n        if (this._dirtyParents[parent.uid] === undefined) {\r\n            this._isDirty = true;\r\n            this._isDirtyParents = true;\r\n            this._dirtyParents[parent.uid] = parent;\r\n            this._startTicker();\r\n        }\r\n    }\r\n    _addDirtyBounds(entity) {\r\n        if (this._dirtyBounds[entity.uid] === undefined) {\r\n            this._isDirty = true;\r\n            this._dirtyBounds[entity.uid] = entity;\r\n            this._startTicker();\r\n        }\r\n    }\r\n    _addDirtyPosition(sprite) {\r\n        if (this._dirtyPositions[sprite.uid] === undefined) {\r\n            this._isDirty = true;\r\n            this._dirtyPositions[sprite.uid] = sprite;\r\n            this._startTicker();\r\n        }\r\n    }\r\n    _addAnimation(animation) {\r\n        // TODO use numeric id instead\r\n        if (this._animations.indexOf(animation) === -1) {\r\n            this._animations.push(animation);\r\n            this._startTicker();\r\n        }\r\n    }\r\n    _markDirty() {\r\n        this._isDirty = true;\r\n    }\r\n    _markDirtyRedraw() {\r\n        this.events.once(\"frameended\", () => {\r\n            this._isDirty = true;\r\n            this._startTicker();\r\n        });\r\n    }\r\n    eachFrame(f) {\r\n        this._tickers.push(f);\r\n        this._startTicker();\r\n        return new Disposer(() => {\r\n            $array.removeFirst(this._tickers, f);\r\n        });\r\n    }\r\n    markDirtyGlobal(container) {\r\n        if (!container) {\r\n            container = this.container;\r\n        }\r\n        container.walkChildren((child) => {\r\n            if (child instanceof Container) {\r\n                this.markDirtyGlobal(child);\r\n            }\r\n            child.markDirty();\r\n            child.markDirtyBounds();\r\n        });\r\n    }\r\n    /**\r\n     * Returns width of the target container, in pixels.\r\n     *\r\n     * @return Width\r\n     */\r\n    width() {\r\n        // TODO make this more efficient, maybe just return the renderer's width ?\r\n        return Math.floor(this.dom.getBoundingClientRect().width);\r\n    }\r\n    /**\r\n     * Returns height of the target container, in pixels.\r\n     *\r\n     * @return Height\r\n     */\r\n    height() {\r\n        // TODO make this more efficient, maybe just return the renderer's height ?\r\n        return Math.floor(this.dom.getBoundingClientRect().height);\r\n    }\r\n    /**\r\n     * Disposes root and all the content in it.\r\n     */\r\n    dispose() {\r\n        if (!this._isDisposed) {\r\n            this._isDisposed = true;\r\n            this._rootContainer.dispose();\r\n            this._renderer.dispose();\r\n            this.horizontalLayout.dispose();\r\n            this.verticalLayout.dispose();\r\n            this.interfaceColors.dispose();\r\n            $array.each(this._disposers, (x) => {\r\n                x.dispose();\r\n            });\r\n            if (this._inner) {\r\n                $utils.removeElement(this._inner);\r\n            }\r\n            $array.remove(registry.rootElements, this);\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` if root element is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    isDisposed() {\r\n        return this._isDisposed;\r\n    }\r\n    /**\r\n     * Triggers screen reader read out a message.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\r\n     * @param  text  Alert text\r\n     */\r\n    readerAlert(text) {\r\n        if (this._a11yD !== true) {\r\n            this._readerAlertElement.innerHTML = $utils.stripTags(text);\r\n        }\r\n    }\r\n    /**\r\n     * Sets themes to be used for the chart.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\r\n     * @param  themes  A list of themes\r\n     */\r\n    setThemes(themes) {\r\n        this._rootContainer.set(\"themes\", themes);\r\n        // otherwise new themes are not applied\r\n        const tooltipContainer = this.tooltipContainer;\r\n        if (tooltipContainer) {\r\n            tooltipContainer._applyThemes();\r\n        }\r\n        // @todo review this\r\n        const interfaceColors = this.interfaceColors;\r\n        if (interfaceColors) {\r\n            interfaceColors._applyThemes();\r\n        }\r\n    }\r\n    _addTooltip() {\r\n        if (!this.tooltipContainer) {\r\n            const tooltipContainerSettings = this._tooltipContainerSettings;\r\n            const tooltipContainer = this._rootContainer.children.push(Container.new(this, {\r\n                position: \"absolute\",\r\n                isMeasured: false,\r\n                width: p100,\r\n                height: p100,\r\n                layer: tooltipContainerSettings ? 35 : 30,\r\n                layerMargin: tooltipContainerSettings ? tooltipContainerSettings : undefined\r\n            }));\r\n            this.tooltipContainer = tooltipContainer;\r\n            const tooltip = Tooltip.new(this, {});\r\n            this.container.set(\"tooltip\", tooltip);\r\n            tooltip.hide(0);\r\n            this._tooltip = tooltip;\r\n        }\r\n    }\r\n    /**\r\n     * Accesibility\r\n     */\r\n    _registerTabindexOrder(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        if (target.get(\"focusable\")) {\r\n            $array.pushOne(this._tabindexes, target);\r\n        }\r\n        else {\r\n            $array.remove(this._tabindexes, target);\r\n        }\r\n        this._invalidateTabindexes();\r\n    }\r\n    _unregisterTabindexOrder(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        $array.remove(this._tabindexes, target);\r\n        this._invalidateTabindexes();\r\n    }\r\n    _invalidateTabindexes() {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        this._tabindexes.sort((a, b) => {\r\n            const aindex = a.get(\"tabindexOrder\", 0);\r\n            const bindex = b.get(\"tabindexOrder\", 0);\r\n            if (aindex == bindex) {\r\n                return 0;\r\n            }\r\n            else if (aindex > bindex) {\r\n                return 1;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        });\r\n        const groups = [];\r\n        $array.each(this._tabindexes, (item, index) => {\r\n            if (!item.getPrivate(\"focusElement\")) {\r\n                this._makeFocusElement(index, item);\r\n            }\r\n            else {\r\n                this._moveFocusElement(index, item);\r\n            }\r\n            const group = item.get(\"focusableGroup\");\r\n            if (group) {\r\n                if (groups.indexOf(group) !== -1) {\r\n                    // Non-first element in the group, make it not directly focusable\r\n                    item.getPrivate(\"focusElement\").dom.setAttribute(\"tabindex\", \"-1\");\r\n                }\r\n                else {\r\n                    groups.push(group);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _updateCurrentFocus() {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        if (this._focusedSprite) {\r\n            this._decorateFocusElement(this._focusedSprite);\r\n            this._positionFocusElement(this._focusedSprite);\r\n        }\r\n    }\r\n    _decorateFocusElement(target, focusElement) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Decorate with proper accessibility attributes\r\n        if (!focusElement) {\r\n            focusElement = target.getPrivate(\"focusElement\").dom;\r\n        }\r\n        if (!focusElement) {\r\n            return;\r\n        }\r\n        if (target.get(\"visible\") && target.get(\"role\") != \"tooltip\" && !target.isHidden()) {\r\n            if (focusElement.getAttribute(\"tabindex\") != \"-1\") {\r\n                focusElement.setAttribute(\"tabindex\", \"\" + this.tabindex);\r\n            }\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"tabindex\");\r\n        }\r\n        const role = target.get(\"role\");\r\n        if (role) {\r\n            focusElement.setAttribute(\"role\", role);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"role\");\r\n        }\r\n        const ariaLabel = target.get(\"ariaLabel\");\r\n        if (ariaLabel) {\r\n            const label = populateString(target, ariaLabel);\r\n            focusElement.setAttribute(\"aria-label\", label);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-label\");\r\n        }\r\n        const ariaLive = target.get(\"ariaLive\");\r\n        if (ariaLive) {\r\n            focusElement.setAttribute(\"aria-live\", ariaLive);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-live\");\r\n        }\r\n        const ariaChecked = target.get(\"ariaChecked\");\r\n        if (ariaChecked != null) {\r\n            focusElement.setAttribute(\"aria-checked\", ariaChecked ? \"true\" : \"false\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-checked\");\r\n        }\r\n        if (target.get(\"ariaHidden\")) {\r\n            focusElement.setAttribute(\"aria-hidden\", \"hidden\");\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-hidden\");\r\n        }\r\n        const ariaOrientation = target.get(\"ariaOrientation\");\r\n        if (ariaOrientation) {\r\n            focusElement.setAttribute(\"aria-orientation\", ariaOrientation);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-orientation\");\r\n        }\r\n        const ariaValueNow = target.get(\"ariaValueNow\");\r\n        if (ariaValueNow) {\r\n            focusElement.setAttribute(\"aria-valuenow\", ariaValueNow);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuenow\");\r\n        }\r\n        const ariaValueMin = target.get(\"ariaValueMin\");\r\n        if (ariaValueMin) {\r\n            focusElement.setAttribute(\"aria-valuemin\", ariaValueMin);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuemin\");\r\n        }\r\n        const ariaValueMax = target.get(\"ariaValueMax\");\r\n        if (ariaValueMax) {\r\n            focusElement.setAttribute(\"aria-valuemax\", ariaValueMax);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuemax\");\r\n        }\r\n        const ariaValueText = target.get(\"ariaValueText\");\r\n        if (ariaValueText) {\r\n            focusElement.setAttribute(\"aria-valuetext\", ariaValueText);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-valuetext\");\r\n        }\r\n        const ariaControls = target.get(\"ariaControls\");\r\n        if (ariaControls) {\r\n            focusElement.setAttribute(\"aria-controls\", ariaControls);\r\n        }\r\n        else {\r\n            focusElement.removeAttribute(\"aria-controls\");\r\n        }\r\n    }\r\n    _makeFocusElement(index, target) {\r\n        if (target.getPrivate(\"focusElement\") || this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Init\r\n        const focusElement = document.createElement(\"div\");\r\n        if (target.get(\"role\") != \"tooltip\") {\r\n            focusElement.tabIndex = this.tabindex;\r\n        }\r\n        focusElement.style.position = \"absolute\";\r\n        $utils.setInteractive(focusElement, false);\r\n        const disposers = [];\r\n        target.setPrivate(\"focusElement\", {\r\n            dom: focusElement,\r\n            disposers,\r\n        });\r\n        this._decorateFocusElement(target);\r\n        disposers.push($utils.addEventListener(focusElement, \"focus\", (ev) => {\r\n            this._handleFocus(ev, index);\r\n        }));\r\n        disposers.push($utils.addEventListener(focusElement, \"blur\", (ev) => {\r\n            this._handleBlur(ev, index);\r\n        }));\r\n        this._moveFocusElement(index, target);\r\n    }\r\n    _removeFocusElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        $array.remove(this._tabindexes, target);\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        if (focusElement) {\r\n            const container = this._focusElementContainer;\r\n            container.removeChild(focusElement.dom);\r\n            $array.each(focusElement.disposers, (x) => {\r\n                x.dispose();\r\n            });\r\n        }\r\n    }\r\n    _hideFocusElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        focusElement.dom.style.display = \"none\";\r\n    }\r\n    _moveFocusElement(index, target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Get container\r\n        const container = this._focusElementContainer;\r\n        const focusElement = target.getPrivate(\"focusElement\").dom;\r\n        if (focusElement === this._focusElementContainer.children[index]) {\r\n            // Nothing to do\r\n            return;\r\n        }\r\n        const next = this._focusElementContainer.children[index + 1];\r\n        if (next) {\r\n            container.insertBefore(focusElement, next);\r\n        }\r\n        else {\r\n            container.append(focusElement);\r\n        }\r\n    }\r\n    _positionFocusElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const bounds = target.globalBounds();\r\n        const width = bounds.right == bounds.left ? target.width() : bounds.right - bounds.left;\r\n        const height = bounds.top == bounds.bottom ? target.height() : bounds.bottom - bounds.top;\r\n        const focusElement = target.getPrivate(\"focusElement\").dom;\r\n        focusElement.style.top = (bounds.top - 2) + \"px\";\r\n        focusElement.style.left = (bounds.left - 2) + \"px\";\r\n        focusElement.style.width = (width + 4) + \"px\";\r\n        focusElement.style.height = (height + 4) + \"px\";\r\n    }\r\n    _handleFocus(ev, index) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        // Get element\r\n        const focused = this._tabindexes[index];\r\n        // Jump over hidden elements\r\n        if (!focused.isVisibleDeep()) {\r\n            this._focusNext(ev.target, this._isShift ? -1 : 1);\r\n            return;\r\n        }\r\n        // Size and position\r\n        this._positionFocusElement(focused);\r\n        //this._decorateFocusElement(focused);\r\n        this._focusedSprite = focused;\r\n        if (focused.events.isEnabled(\"focus\")) {\r\n            focused.events.dispatch(\"focus\", {\r\n                type: \"focus\",\r\n                originalEvent: ev,\r\n                target: focused\r\n            });\r\n        }\r\n    }\r\n    _focusNext(el, direction) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        var focusableElements = Array.from(document.querySelectorAll([\r\n            'a[href]',\r\n            'area[href]',\r\n            'button:not([disabled])',\r\n            'details',\r\n            'input:not([disabled])',\r\n            'iframe:not([disabled])',\r\n            'select:not([disabled])',\r\n            'textarea:not([disabled])',\r\n            '[contentEditable=\"\"]',\r\n            '[contentEditable=\"true\"]',\r\n            '[contentEditable=\"TRUE\"]',\r\n            '[tabindex]:not([tabindex^=\"-\"])',\r\n            //':not([disabled])'\r\n        ].join(',')));\r\n        let index = focusableElements.indexOf(el) + direction;\r\n        if (index < 0) {\r\n            index = focusableElements.length - 1;\r\n        }\r\n        else if (index >= focusableElements.length) {\r\n            index = 0;\r\n        }\r\n        focusableElements[index].focus();\r\n    }\r\n    _handleBlur(ev, _index) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const focused = this._focusedSprite;\r\n        if (focused && focused.events.isEnabled(\"blur\")) {\r\n            focused.events.dispatch(\"blur\", {\r\n                type: \"blur\",\r\n                originalEvent: ev,\r\n                target: focused\r\n            });\r\n        }\r\n        this._focusedSprite = undefined;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltip(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const text = $utils.stripTags(target._getText());\r\n        let tooltipElement = target.getPrivate(\"tooltipElement\");\r\n        if (target.get(\"role\") == \"tooltip\" && text != \"\") {\r\n            if (!tooltipElement) {\r\n                tooltipElement = this._makeTooltipElement(target);\r\n            }\r\n            if (tooltipElement.innerHTML != text) {\r\n                tooltipElement.innerHTML = text;\r\n            }\r\n        }\r\n        else if (tooltipElement) {\r\n            tooltipElement.remove();\r\n            target.removePrivate(\"tooltipElement\");\r\n        }\r\n    }\r\n    _makeTooltipElement(target) {\r\n        const container = this._tooltipElementContainer;\r\n        const tooltipElement = document.createElement(\"div\");\r\n        tooltipElement.style.position = \"absolute\";\r\n        tooltipElement.style.top = \"-1000000px\";\r\n        tooltipElement.style.opacity = \"0.0000001\";\r\n        $utils.setInteractive(tooltipElement, false);\r\n        this._decorateFocusElement(target, tooltipElement);\r\n        container.append(tooltipElement);\r\n        target.setPrivate(\"tooltipElement\", tooltipElement);\r\n        return tooltipElement;\r\n    }\r\n    _removeTooltipElement(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        const tooltipElement = target.getPrivate(\"tooltipElement\");\r\n        if (tooltipElement) {\r\n            const parent = tooltipElement.parentElement;\r\n            if (parent) {\r\n                parent.removeChild(tooltipElement);\r\n            }\r\n        }\r\n    }\r\n    _invalidateAccessibility(target) {\r\n        if (this._a11yD == true) {\r\n            return;\r\n        }\r\n        this._focusElementDirty = true;\r\n        const focusElement = target.getPrivate(\"focusElement\");\r\n        if (target.get(\"focusable\")) {\r\n            if (focusElement) {\r\n                this._decorateFocusElement(target);\r\n                this._positionFocusElement(target);\r\n            }\r\n            // else {\r\n            // \tthis._renderer._makeFocusElement(0, this);\r\n            // }\r\n        }\r\n        else if (focusElement) {\r\n            this._removeFocusElement(target);\r\n        }\r\n        //this.updateCurrentFocus();\r\n    }\r\n    /**\r\n     * Returns `true` if `target` is currently focused.\r\n     *\r\n     * @param   target  Target\r\n     * @return          Focused?\r\n     */\r\n    focused(target) {\r\n        return this._focusedSprite === target;\r\n    }\r\n    /**\r\n     * Converts document coordinates to coordinates withing root element.\r\n     *\r\n     * @param   point  Document point\r\n     * @return         Root point\r\n     */\r\n    documentPointToRoot(point) {\r\n        const bbox = this.dom.getBoundingClientRect();\r\n        return {\r\n            x: point.x - bbox.left,\r\n            y: point.y - bbox.top\r\n        };\r\n    }\r\n    /**\r\n     * Converts root coordinates to document\r\n     *\r\n     * @param   point  Document point\r\n     * @return         Root point\r\n     */\r\n    rootPointToDocument(point) {\r\n        const bbox = this.dom.getBoundingClientRect();\r\n        return {\r\n            x: point.x + bbox.left,\r\n            y: point.y + bbox.top\r\n        };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    addDisposer(disposer) {\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    }\r\n    _updateComputedStyles() {\r\n        const styles = window.getComputedStyle(this.dom);\r\n        let fontHash = \"\";\r\n        $object.each(styles, (key, val) => {\r\n            if ($type.isString(key) && key.match(/^font/)) {\r\n                fontHash += val;\r\n            }\r\n        });\r\n        const changed = fontHash != this._fontHash;\r\n        if (changed) {\r\n            this._fontHash = fontHash;\r\n        }\r\n        return changed;\r\n    }\r\n    _checkComputedStyles() {\r\n        if (this._updateComputedStyles()) {\r\n            this._invalidateLabelBounds(this.container);\r\n        }\r\n    }\r\n    _invalidateLabelBounds(target) {\r\n        if (target instanceof Container) {\r\n            target.children.each((child) => {\r\n                this._invalidateLabelBounds(child);\r\n            });\r\n        }\r\n        else if (target instanceof Text) {\r\n            target.markDirtyBounds();\r\n        }\r\n    }\r\n    /**\r\n     * To all the clever heads out there. Yes, we did not make any attempts to\r\n     * scramble this.\r\n     *\r\n     * This is a part of a tool meant for our users to manage their commercial\r\n     * licenses for removal of amCharts branding from charts.\r\n     *\r\n     * The only legit way to do so is to purchase a commercial license for amCharts:\r\n     * https://www.amcharts.com/online-store/\r\n     *\r\n     * Removing or altering this code, or disabling amCharts branding in any other\r\n     * way is against the license and thus illegal.\r\n     */\r\n    _hasLicense() {\r\n        for (let i = 0; i < registry.licenses.length; i++) {\r\n            if (registry.licenses[i].match(/^AM5C.{5,}/i)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    _licenseApplied() {\r\n        if (this._logo) {\r\n            this._logo.set(\"forceHidden\", true);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get debugGhostView() {\r\n        return this._renderer.debugGhostView;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    set debugGhostView(value) {\r\n        this._renderer.debugGhostView = value;\r\n    }\r\n    /**\r\n     * Set this to `true` if you need chart to require first a tap onto it before\r\n     * touch gesture related functionality like zoom/pan is turned on.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\r\n     * @default false\r\n     * @since 5.2.9\r\n     * @param  value  Needs a tap to activate touch functions\r\n     */\r\n    set tapToActivate(value) {\r\n        this._renderer.tapToActivate = value;\r\n    }\r\n    /**\r\n     * @return Needs a tap to activate touch functions\r\n     */\r\n    get tapToActivate() {\r\n        return this._renderer.tapToActivate;\r\n    }\r\n    /**\r\n     * If `tapToActivate` is set to `true`, this setting will determine number\r\n     * of milliseconds the chart will stay \"active\", before releasing the\r\n     * controls back to the page.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\r\n     * @default 3000\r\n     * @since 5.2.9\r\n     * @param  value  Timeout\r\n     */\r\n    set tapToActivateTimeout(value) {\r\n        this._renderer.tapToActivateTimeout = value;\r\n    }\r\n    /**\r\n     * @return Timeout\r\n     */\r\n    get tapToActivateTimeout() {\r\n        return this._renderer.tapToActivateTimeout;\r\n    }\r\n    _makeHTMLElement(target) {\r\n        // Get container\r\n        const container = this._htmlElementContainer;\r\n        // Init\r\n        const htmlElement = document.createElement(\"div\");\r\n        target.setPrivate(\"htmlElement\", htmlElement);\r\n        //htmlElement.tabIndex = this.tabindex;\r\n        htmlElement.style.position = \"absolute\";\r\n        htmlElement.style.overflow = \"auto\";\r\n        htmlElement.style.boxSizing = \"border-box\";\r\n        $utils.setInteractive(htmlElement, true);\r\n        // Translate events\r\n        if (target.events.isEnabled(\"click\")) {\r\n            this._disposers.push($utils.addEventListener(htmlElement, \"click\", (ev) => {\r\n                const downEvent = this._renderer.getEvent(ev);\r\n                target.events.dispatch(\"click\", {\r\n                    type: \"click\",\r\n                    originalEvent: downEvent.event,\r\n                    point: downEvent.point,\r\n                    simulated: false,\r\n                    target: target\r\n                });\r\n            }));\r\n        }\r\n        this._positionHTMLElement(target);\r\n        container.append(htmlElement);\r\n        $array.pushOne(this._htmlEnabledContainers, target);\r\n        return htmlElement;\r\n    }\r\n    _positionHTMLElements() {\r\n        $array.each(this._htmlEnabledContainers, (target) => {\r\n            this._positionHTMLElement(target);\r\n        });\r\n    }\r\n    _positionHTMLElement(target) {\r\n        const htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (htmlElement) {\r\n            // Translate settings\r\n            const visualSettings = [\"paddingTop\", \"paddingRight\", \"paddingBottom\", \"paddingLeft\", \"minWidth\", \"minHeight\", \"maxWidth\", \"maxHeight\"];\r\n            $array.each(visualSettings, (setting) => {\r\n                const value = target.get(setting);\r\n                if (value) {\r\n                    htmlElement.style[setting] = value + \"px\";\r\n                }\r\n                else {\r\n                    htmlElement.style[setting] = \"\";\r\n                }\r\n            });\r\n            // Deal with opacity\r\n            const opacity = target.compositeOpacity();\r\n            setTimeout(() => {\r\n                htmlElement.style.opacity = opacity + \"\";\r\n            }, 10);\r\n            const visible = target.isVisibleDeep();\r\n            if (visible) {\r\n                htmlElement.style.display = \"block\";\r\n            }\r\n            // Deal with position\r\n            const bounds = target.globalBounds();\r\n            htmlElement.style.top = (bounds.top) + \"px\";\r\n            htmlElement.style.left = (bounds.left) + \"px\";\r\n            // Use width/height if those are set\r\n            const width = target.get(\"width\");\r\n            const height = target.get(\"height\");\r\n            let w = 0;\r\n            let h = 0;\r\n            if (width) {\r\n                w = target.width();\r\n            }\r\n            if (height) {\r\n                h = target.height();\r\n            }\r\n            if (!width || !height) {\r\n                htmlElement.style.width = \"\";\r\n                htmlElement.style.height = \"\";\r\n                const bbox = htmlElement.getBoundingClientRect();\r\n                w = bbox.width;\r\n                h = bbox.height;\r\n                target._adjustedLocalBounds = { left: 0, right: 0, top: 0, bottom: 0 };\r\n                target.setPrivate(\"minWidth\", w);\r\n                target.setPrivate(\"minHeight\", h);\r\n            }\r\n            else {\r\n                target.removePrivate(\"minWidth\");\r\n                target.removePrivate(\"minHeight\");\r\n            }\r\n            if (w > 0) {\r\n                htmlElement.style.minWidth = (w) + \"px\";\r\n            }\r\n            if (h > 0) {\r\n                htmlElement.style.minHeight = (h) + \"px\";\r\n            }\r\n            // Hide or show\r\n            if (!visible || opacity == 0) {\r\n                htmlElement.style.display = \"none\";\r\n            }\r\n        }\r\n    }\r\n    _setHTMLContent(target, html) {\r\n        let htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (!htmlElement) {\r\n            htmlElement = this._makeHTMLElement(target);\r\n        }\r\n        if (htmlElement.innerHTML != html) {\r\n            htmlElement.innerHTML = html;\r\n        }\r\n    }\r\n    _removeHTMLContent(target) {\r\n        let htmlElement = target.getPrivate(\"htmlElement\");\r\n        if (htmlElement) {\r\n            this._htmlElementContainer.removeChild(htmlElement);\r\n        }\r\n        $array.remove(this._htmlEnabledContainers, target);\r\n    }\r\n}\r\n//# sourceMappingURL=Root.js.map","import { Graphics } from \"./Graphics\";\r\n/**\r\n * Draws a circle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Circle extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"radius\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            this._display.drawCircle(0, 0, this.get(\"radius\", 10));\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Circle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Circle\"\r\n});\r\nObject.defineProperty(Circle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Circle.className])\r\n});\r\n//# sourceMappingURL=Circle.js.map","import { Entity } from \"../../core/util/Entity\";\r\n/**\r\n * A universal placeholder for bullet elements.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\r\n */\r\nexport class Bullet extends Entity {\r\n    constructor() {\r\n        super(...arguments);\r\n        // used by MapPolygons where one data item can have multiple bullets of the same kind\r\n        Object.defineProperty(this, \"_index\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * Target series object if it's a bullet for series.\r\n         */\r\n        Object.defineProperty(this, \"series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        // Applying themes because bullet will not have parent\r\n        super._afterNewApplyThemes();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"sprite\")) {\r\n            const sprite = this.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite.setAll({ position: \"absolute\", role: \"figure\" });\r\n                this._disposers.push(sprite);\r\n            }\r\n        }\r\n        if (this.isDirty(\"locationX\") || this.isDirty(\"locationY\")) {\r\n            if (this.series) {\r\n                this.series._positionBullet(this);\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Bullet, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Bullet\"\r\n});\r\nObject.defineProperty(Bullet, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([Bullet.className])\r\n});\r\n//# sourceMappingURL=Bullet.js.map","import { Entity } from \"./Entity\";\r\nimport { Color } from \"./Color\";\r\n/**\r\n * An object which holds list of colors and can generate new ones.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Color_sets} for more info\r\n */\r\nexport class ColorSet extends Entity {\r\n    //protected _currentPass: number = 0;\r\n    _afterNew() {\r\n        // Applying themes because color set will not have parent\r\n        super._afterNewApplyThemes();\r\n        this._dirty[\"colors\"] = false;\r\n    }\r\n    _beforeChanged() {\r\n        if (this.isDirty(\"colors\")) {\r\n            this.reset();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    generateColors() {\r\n        this.setPrivate(\"currentPass\", this.getPrivate(\"currentPass\", 0) + 1);\r\n        const pass = this.getPrivate(\"currentPass\");\r\n        const colors = this.get(\"colors\", [this.get(\"baseColor\", Color.fromHex(0xff0000))]);\r\n        if (!this.getPrivate(\"numColors\")) {\r\n            this.setPrivate(\"numColors\", colors.length);\r\n        }\r\n        //const len = colors.length;\r\n        const len = this.getPrivate(\"numColors\");\r\n        //const start = len - this.getPrivate(\"numColors\")!;\r\n        const start = 0;\r\n        const passOptions = this.get(\"passOptions\");\r\n        const reuse = this.get(\"reuse\");\r\n        for (let i = start; i < len; i++) {\r\n            if (reuse) {\r\n                colors.push(colors[i]);\r\n            }\r\n            else {\r\n                const hsl = colors[i].toHSL();\r\n                let h = hsl.h + (passOptions.hue || 0) * pass;\r\n                while (h > 1)\r\n                    h -= 1;\r\n                let s = hsl.s + (passOptions.saturation || 0) * pass;\r\n                //if (s > 1) s -= Math.floor(s);\r\n                if (s > 1)\r\n                    s = 1;\r\n                if (s < 0)\r\n                    s = 0;\r\n                let l = hsl.l + (passOptions.lightness || 0) * pass;\r\n                //if (l > 1) l -= Math.floor(l);\r\n                while (l > 1)\r\n                    l -= 1;\r\n                colors.push(Color.fromHSL(h, s, l));\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Returns a [[Color]] at specific index.\r\n     *\r\n     * If there's no color at this index, a new color is generated.\r\n     *\r\n     * @param   index  Index\r\n     * @return         Color\r\n     */\r\n    getIndex(index) {\r\n        const colors = this.get(\"colors\", []);\r\n        const saturation = this.get(\"saturation\");\r\n        if (index >= colors.length) {\r\n            this.generateColors();\r\n            return this.getIndex(index);\r\n        }\r\n        return saturation != null ? Color.saturate(colors[index], saturation) : colors[index];\r\n    }\r\n    /**\r\n     * Returns next [[Color]] in the list.\r\n     *\r\n     * If the list is out of colors, new ones are generated dynamically.\r\n     */\r\n    next() {\r\n        let currentStep = this.getPrivate(\"currentStep\", this.get(\"startIndex\", 0));\r\n        this.setPrivate(\"currentStep\", currentStep + this.get(\"step\", 1));\r\n        return this.getIndex(currentStep);\r\n    }\r\n    /**\r\n     * Resets counter to the start of the list, so the next call for `next()` will\r\n     * return the first color.\r\n     */\r\n    reset() {\r\n        this.setPrivate(\"currentStep\", this.get(\"startIndex\", 0));\r\n        this.setPrivate(\"currentPass\", 0);\r\n    }\r\n}\r\nObject.defineProperty(ColorSet, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ColorSet\"\r\n});\r\nObject.defineProperty(ColorSet, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Entity.classNames.concat([ColorSet.className])\r\n});\r\n//# sourceMappingURL=ColorSet.js.map","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * Returns a `Promise` which can be used to execute code after number of\r\n * milliseconds.\r\n *\r\n * @param   ms  Sleep duration in ms\r\n * @return      Promise\r\n */\r\nexport function sleep(ms) {\r\n    return new Promise((resolve, _reject) => {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\r\n/**\r\n * Maps time period names to their numeric representations in milliseconds.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport let timeUnitDurations = {\r\n    millisecond: 1,\r\n    second: 1000,\r\n    minute: 60000,\r\n    hour: 3600000,\r\n    day: 86400000,\r\n    week: 604800000,\r\n    month: 365.242 / 12 * 86400000,\r\n    year: 31536000000\r\n};\r\n/**\r\n * Returns the next time unit that goes after source `unit`.\r\n *\r\n * E.g. \"hour\" is the next unit after \"minute\", etc.\r\n *\r\n * @ignore Exclude from docs\r\n * @param unit  Source time unit\r\n * @return Next time unit\r\n */\r\nexport function getNextUnit(unit) {\r\n    switch (unit) {\r\n        case \"year\":\r\n            return;\r\n        case \"month\":\r\n            return \"year\";\r\n        case \"week\":\r\n            return \"month\";\r\n        case \"day\":\r\n            return \"month\"; // not a mistake\r\n        case \"hour\":\r\n            return \"day\";\r\n        case \"minute\":\r\n            return \"hour\";\r\n        case \"second\":\r\n            return \"minute\";\r\n        case \"millisecond\":\r\n            return \"second\";\r\n    }\r\n}\r\n/**\r\n * Returns number of milliseconds in the `count` of time `unit`.\r\n *\r\n * Available units: \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\",\r\n * \"month\", and \"year\".\r\n *\r\n * @param unit   Time unit\r\n * @param count  Number of units\r\n * @return Milliseconds\r\n */\r\nexport function getDuration(unit, count) {\r\n    if (count == null) {\r\n        count = 1;\r\n    }\r\n    return timeUnitDurations[unit] * count;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getIntervalDuration(interval) {\r\n    if (interval) {\r\n        return timeUnitDurations[interval.timeUnit] * interval.count;\r\n    }\r\n    return 0;\r\n}\r\nexport function getDateIntervalDuration(interval, date, firstDateOfWeek, utc, timezone) {\r\n    const unit = interval.timeUnit;\r\n    const count = interval.count;\r\n    if (unit == \"hour\" || unit == \"minute\" || unit == \"second\" || unit == \"millisecond\") {\r\n        return timeUnitDurations[interval.timeUnit] * interval.count;\r\n    }\r\n    else {\r\n        const firstTime = round(new Date(date.getTime()), unit, count, firstDateOfWeek, utc, undefined, timezone).getTime();\r\n        let lastTime = firstTime + count * getDuration(unit) * 1.05;\r\n        lastTime = round(new Date(lastTime), unit, 1, firstDateOfWeek, utc, undefined, timezone).getTime();\r\n        return lastTime - firstTime;\r\n    }\r\n}\r\n/**\r\n * Returns current `Date` object.\r\n *\r\n * @return Current date\r\n */\r\nexport function now() {\r\n    return new Date();\r\n}\r\n/**\r\n * Returns current timestamp.\r\n *\r\n * @return Current timestamp\r\n */\r\nexport function getTime() {\r\n    return now().getTime();\r\n}\r\n/**\r\n * Returns a copy of the `Date` object.\r\n *\r\n * @param date  Source date\r\n * @return Copy\r\n */\r\nexport function copy(date) {\r\n    return new Date(date.getTime()); // todo: check if this is ok. new Date(date) used to strip milliseconds on FF in v3\r\n}\r\n/**\r\n * Checks if the `unit` part of two `Date` objects do not match. Two dates\r\n * represent a \"range\" of time, rather the same time date.\r\n *\r\n * @param timeOne  timestamp\r\n * @param timeTwo  timestamp\r\n * @param unit     Time unit to check\r\n * @return Range?\r\n */\r\nexport function checkChange(timeOne, timeTwo, unit, utc, timezone) {\r\n    // quick\r\n    if ((timeTwo - timeOne) > getDuration(unit, 1.2)) {\r\n        return true;\r\n    }\r\n    let dateOne = new Date(timeOne);\r\n    let dateTwo = new Date(timeTwo);\r\n    if (timezone) {\r\n        dateOne = timezone.convertLocal(dateOne);\r\n        dateTwo = timezone.convertLocal(dateTwo);\r\n    }\r\n    let timeZoneOffset1 = 0;\r\n    let timeZoneOffset2 = 0;\r\n    if (!utc && unit != \"millisecond\") {\r\n        timeZoneOffset1 = dateOne.getTimezoneOffset();\r\n        dateOne.setUTCMinutes(dateOne.getUTCMinutes() - timeZoneOffset1);\r\n        timeZoneOffset2 = dateTwo.getTimezoneOffset();\r\n        dateTwo.setUTCMinutes(dateTwo.getUTCMinutes() - timeZoneOffset2);\r\n    }\r\n    let changed = false;\r\n    switch (unit) {\r\n        case \"year\":\r\n            if (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"month\":\r\n            if (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\r\n                changed = true;\r\n            }\r\n            else if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"day\":\r\n            if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\r\n                changed = true;\r\n            }\r\n            else if (dateOne.getUTCDate() != dateTwo.getUTCDate()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"hour\":\r\n            if (dateOne.getUTCHours() != dateTwo.getUTCHours()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"minute\":\r\n            if (dateOne.getUTCMinutes() != dateTwo.getUTCMinutes()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"second\":\r\n            if (dateOne.getUTCSeconds() != dateTwo.getUTCSeconds()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"millisecond\":\r\n            if (dateOne.getTime() != dateTwo.getTime()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n    }\r\n    if (changed) {\r\n        return changed;\r\n    }\r\n    let nextUnit = getNextUnit(unit);\r\n    if (nextUnit) {\r\n        return checkChange(timeOne, timeTwo, nextUnit, utc, timezone);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Adds `count` of time `unit` to the source date. Returns a modified `Date` object.\r\n *\r\n * @param date   Source date\r\n * @param unit   Time unit\r\n * @param count  Number of units to add\r\n * @return Modified date\r\n */\r\nexport function add(date, unit, count, utc, timezone) {\r\n    let timeZoneOffset = 0;\r\n    if (!utc && unit != \"millisecond\") {\r\n        timeZoneOffset = date.getTimezoneOffset();\r\n        if (timezone) {\r\n            timeZoneOffset -= timezone.offsetUTC(date);\r\n        }\r\n        date.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\r\n    }\r\n    switch (unit) {\r\n        case \"day\":\r\n            let day = date.getUTCDate();\r\n            date.setUTCDate(day + count);\r\n            break;\r\n        case \"second\":\r\n            let seconds = date.getUTCSeconds();\r\n            date.setUTCSeconds(seconds + count);\r\n            break;\r\n        case \"millisecond\":\r\n            let milliseconds = date.getUTCMilliseconds();\r\n            date.setUTCMilliseconds(milliseconds + count);\r\n            break;\r\n        case \"hour\":\r\n            let hours = date.getUTCHours();\r\n            date.setUTCHours(hours + count);\r\n            break;\r\n        case \"minute\":\r\n            let minutes = date.getUTCMinutes();\r\n            date.setUTCMinutes(minutes + count);\r\n            break;\r\n        case \"year\":\r\n            let year = date.getUTCFullYear();\r\n            date.setUTCFullYear(year + count);\r\n            break;\r\n        case \"month\":\r\n            let month = date.getUTCMonth();\r\n            date.setUTCMonth(month + count);\r\n            break;\r\n        case \"week\":\r\n            let wday = date.getUTCDate();\r\n            date.setUTCDate(wday + count * 7);\r\n            break;\r\n    }\r\n    if (!utc && unit != \"millisecond\") {\r\n        date.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\r\n        if (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\r\n            let newTimeZoneOffset = date.getTimezoneOffset();\r\n            if (timezone) {\r\n                newTimeZoneOffset += timezone.offsetUTC(date);\r\n            }\r\n            if (newTimeZoneOffset != timeZoneOffset) {\r\n                let diff = newTimeZoneOffset - timeZoneOffset;\r\n                date.setUTCMinutes(date.getUTCMinutes() + diff);\r\n                // solves issues if new time falls back to old time zone\r\n                if (date.getTimezoneOffset() != newTimeZoneOffset) {\r\n                    date.setUTCMinutes(date.getUTCMinutes() - diff);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return date;\r\n}\r\n/**\r\n * \"Rounds\" the date to specific time unit.\r\n *\r\n * @param date             Source date\r\n * @param unit             Time unit\r\n * @param count            Number of units to round to\r\n * @param firstDateOfWeek  First day of week\r\n * @param utc              Use UTC timezone\r\n * @param firstDate        First date to round to\r\n * @param roundMinutes     Minutes to round to (some timezones use non-whole hour)\r\n * @param timezone         Use specific named timezone when rounding\r\n * @return New date\r\n */\r\nexport function round(date, unit, count, firstDateOfWeek, utc, firstDate, timezone) {\r\n    if (!timezone || utc) {\r\n        let timeZoneOffset = 0;\r\n        if (!utc && unit != \"millisecond\") {\r\n            timeZoneOffset = date.getTimezoneOffset();\r\n            date.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\r\n        }\r\n        switch (unit) {\r\n            case \"day\":\r\n                let day = date.getUTCDate();\r\n                if (count > 1) {\r\n                    //\tday = Math.floor(day / count) * count;\r\n                    if (firstDate) {\r\n                        firstDate = round(firstDate, \"day\", 1);\r\n                        let difference = date.getTime() - firstDate.getTime();\r\n                        let unitCount = Math.floor(difference / getDuration(\"day\") / count);\r\n                        let duration = getDuration(\"day\", unitCount * count);\r\n                        date.setTime(firstDate.getTime() + duration - timeZoneOffset * getDuration(\"minute\"));\r\n                    }\r\n                }\r\n                else {\r\n                    date.setUTCDate(day);\r\n                }\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"second\":\r\n                let seconds = date.getUTCSeconds();\r\n                if (count > 1) {\r\n                    seconds = Math.floor(seconds / count) * count;\r\n                }\r\n                date.setUTCSeconds(seconds, 0);\r\n                break;\r\n            case \"millisecond\":\r\n                if (count == 1) {\r\n                    return date; // much better for perf!\r\n                }\r\n                let milliseconds = date.getUTCMilliseconds();\r\n                milliseconds = Math.floor(milliseconds / count) * count;\r\n                date.setUTCMilliseconds(milliseconds);\r\n                break;\r\n            case \"hour\":\r\n                let hours = date.getUTCHours();\r\n                if (count > 1) {\r\n                    hours = Math.floor(hours / count) * count;\r\n                }\r\n                date.setUTCHours(hours, 0, 0, 0);\r\n                break;\r\n            case \"minute\":\r\n                let minutes = date.getUTCMinutes();\r\n                if (count > 1) {\r\n                    minutes = Math.floor(minutes / count) * count;\r\n                }\r\n                date.setUTCMinutes(minutes, 0, 0);\r\n                break;\r\n            case \"month\":\r\n                let month = date.getUTCMonth();\r\n                if (count > 1) {\r\n                    month = Math.floor(month / count) * count;\r\n                }\r\n                date.setUTCMonth(month, 1);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"year\":\r\n                let year = date.getUTCFullYear();\r\n                if (count > 1) {\r\n                    year = Math.floor(year / count) * count;\r\n                }\r\n                date.setUTCFullYear(year, 0, 1);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n            case \"week\":\r\n                let wday = date.getUTCDate();\r\n                let weekDay = date.getUTCDay();\r\n                if (!$type.isNumber(firstDateOfWeek)) {\r\n                    firstDateOfWeek = 1;\r\n                }\r\n                if (weekDay >= firstDateOfWeek) {\r\n                    wday = wday - weekDay + firstDateOfWeek;\r\n                }\r\n                else {\r\n                    wday = wday - (7 + weekDay) + firstDateOfWeek;\r\n                }\r\n                date.setUTCDate(wday);\r\n                date.setUTCHours(0, 0, 0, 0);\r\n                break;\r\n        }\r\n        if (!utc && unit != \"millisecond\") {\r\n            date.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\r\n            if (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\r\n                let newTimeZoneOffset = date.getTimezoneOffset();\r\n                if (newTimeZoneOffset != timeZoneOffset) {\r\n                    let diff = newTimeZoneOffset - timeZoneOffset;\r\n                    date.setUTCMinutes(date.getUTCMinutes() + diff);\r\n                }\r\n            }\r\n        }\r\n        return date;\r\n    }\r\n    else {\r\n        if (isNaN(date.getTime())) {\r\n            return date;\r\n        }\r\n        let tzoffset = timezone.offsetUTC(date);\r\n        let timeZoneOffset = date.getTimezoneOffset();\r\n        let parsedDate = timezone.parseDate(date);\r\n        //console.log(parsedDate)\r\n        let year = parsedDate.year;\r\n        let month = parsedDate.month;\r\n        let day = parsedDate.day;\r\n        let hour = parsedDate.hour;\r\n        let minute = parsedDate.minute;\r\n        let second = parsedDate.second;\r\n        let millisecond = parsedDate.millisecond;\r\n        let weekday = parsedDate.weekday;\r\n        switch (unit) {\r\n            case \"day\":\r\n                if (count > 1 && firstDate) {\r\n                    firstDate = round(firstDate, \"day\", 1, firstDateOfWeek, utc, undefined, timezone);\r\n                    let difference = date.getTime() - firstDate.getTime();\r\n                    let unitCount = Math.floor(difference / getDuration(\"day\") / count);\r\n                    let duration = getDuration(\"day\", unitCount * count);\r\n                    date.setTime(firstDate.getTime() + duration);\r\n                    parsedDate = timezone.parseDate(date);\r\n                    year = parsedDate.year;\r\n                    month = parsedDate.month;\r\n                    day = parsedDate.day;\r\n                }\r\n                hour = 0;\r\n                minute = tzoffset - timeZoneOffset;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"second\":\r\n                minute += tzoffset - timeZoneOffset;\r\n                if (count > 1) {\r\n                    second = Math.floor(second / count) * count;\r\n                }\r\n                millisecond = 0;\r\n                break;\r\n            case \"millisecond\":\r\n                minute += tzoffset - timeZoneOffset;\r\n                if (count > 1) {\r\n                    millisecond = Math.floor(millisecond / count) * count;\r\n                }\r\n                break;\r\n            case \"hour\":\r\n                if (count > 1) {\r\n                    hour = Math.floor(hour / count) * count;\r\n                }\r\n                minute = tzoffset - timeZoneOffset;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"minute\":\r\n                if (count > 1) {\r\n                    minute = Math.floor(minute / count) * count;\r\n                }\r\n                minute += tzoffset - timeZoneOffset;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"month\":\r\n                if (count > 1) {\r\n                    month = Math.floor(month / count) * count;\r\n                }\r\n                day = 1;\r\n                hour = 0;\r\n                minute = tzoffset - timeZoneOffset;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"year\":\r\n                if (count > 1) {\r\n                    year = Math.floor(year / count) * count;\r\n                }\r\n                month = 0;\r\n                day = 1;\r\n                hour = 0;\r\n                minute = tzoffset - timeZoneOffset;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n            case \"week\":\r\n                if (!$type.isNumber(firstDateOfWeek)) {\r\n                    firstDateOfWeek = 1;\r\n                }\r\n                if (weekday >= firstDateOfWeek) {\r\n                    day = day - weekday + firstDateOfWeek;\r\n                }\r\n                else {\r\n                    day = day - (7 + weekday) + firstDateOfWeek;\r\n                }\r\n                hour = 0;\r\n                minute = tzoffset - timeZoneOffset;\r\n                second = 0;\r\n                millisecond = 0;\r\n                break;\r\n        }\r\n        date = new Date(year, month, day, hour, minute, second, millisecond);\r\n        let newOffset = date.getTimezoneOffset();\r\n        if (newOffset != timeZoneOffset) {\r\n            date.setTime(date.getTime() + (timeZoneOffset - newOffset) * 60000);\r\n        }\r\n        return date;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function chooseInterval(index, duration, gridCount, intervals) {\r\n    let gridInterval = intervals[index];\r\n    let intervalDuration = getIntervalDuration(gridInterval);\r\n    let lastIndex = intervals.length - 1;\r\n    if (index >= lastIndex) {\r\n        return Object.assign({}, intervals[lastIndex]);\r\n    }\r\n    let count = Math.ceil(duration / intervalDuration);\r\n    if (duration < intervalDuration && index > 0) {\r\n        return Object.assign({}, intervals[index - 1]);\r\n    }\r\n    if (count <= gridCount) {\r\n        return Object.assign({}, intervals[index]);\r\n    }\r\n    else {\r\n        if (index + 1 < intervals.length) {\r\n            return chooseInterval(index + 1, duration, gridCount, intervals);\r\n        }\r\n        else {\r\n            return Object.assign({}, intervals[index]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function getUnitValue(date, unit) {\r\n    switch (unit) {\r\n        case \"day\":\r\n            return date.getDate();\r\n        case \"second\":\r\n            return date.getSeconds();\r\n        case \"millisecond\":\r\n            return date.getMilliseconds();\r\n        case \"hour\":\r\n            return date.getHours();\r\n        case \"minute\":\r\n            return date.getMinutes();\r\n        case \"month\":\r\n            return date.getMonth();\r\n        case \"year\":\r\n            return date.getFullYear();\r\n        case \"week\":\r\n            return $utils.getWeek(date);\r\n    }\r\n}\r\n//# sourceMappingURL=Time.js.map","import { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const ic = this._root.interfaceColors;\r\n        const language = this._root.language;\r\n        const r = this.rule.bind(this);\r\n        /**\r\n         * ========================================================================\r\n         * charts/xy\r\n         * ========================================================================\r\n         */\r\n        r(\"XYChart\").setAll({\r\n            colors: ColorSet.new(this._root, {}),\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            paddingTop: 16,\r\n            paddingBottom: 16,\r\n            panX: false,\r\n            panY: false,\r\n            wheelStep: 0.25,\r\n            arrangeTooltips: true,\r\n            pinchZoomX: false,\r\n            pinchZoomY: false\r\n        });\r\n        r(\"XYSeries\").setAll({\r\n            legendLabelText: \"{name}\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: XYChartScrollbar\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n            paddingBottom: 0,\r\n            paddingLeft: 0,\r\n            paddingTop: 0,\r\n            paddingRight: 0,\r\n            colors: ColorSet.new(this._root, {\r\n                saturation: 0\r\n            })\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0.5\r\n            });\r\n            setColor(rule, \"fill\", ic, \"background\");\r\n        }\r\n        // Class: RoundedRectangle\r\n        r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n            cornerRadiusTR: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusBL: 0,\r\n            fillOpacity: 0,\r\n            focusable: true\r\n        });\r\n        r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n        r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusTR: 0,\r\n            cornerRadiusBR: 0\r\n        });\r\n        r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n            cornerRadiusBL: 40,\r\n            cornerRadiusBR: 40,\r\n            cornerRadiusTL: 40,\r\n            cornerRadiusTR: 40\r\n        });\r\n        r(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n            strokeOpacity: 0,\r\n            inside: true\r\n        });\r\n        r(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n            strokeOpacity: 0,\r\n            inside: true,\r\n            minGridDistance: 5\r\n        });\r\n        r(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n            opacity: 0.5,\r\n            centerY: p100,\r\n            minPosition: 0.01,\r\n            maxPosition: 0.99,\r\n            fontSize: \"0.8em\"\r\n        });\r\n        r(\"AxisLabel\", [\"category\"]).setAll({\r\n            text: \"{category}\",\r\n            populateText: true\r\n        });\r\n        r(\"AxisLabel\", [\"x\"]).setAll({\r\n            centerY: 0\r\n        });\r\n        r(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n            centerY: p100\r\n        });\r\n        r(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n            centerY: 0\r\n        });\r\n        r(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n            centerY: p100\r\n        });\r\n        r(\"AxisLabel\", [\"y\"]).setAll({\r\n            centerX: p100\r\n        });\r\n        r(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n            centerX: 0\r\n        });\r\n        r(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n            centerX: p100\r\n        });\r\n        r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n            centerX: 0\r\n        });\r\n        r(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n            visible: false\r\n        });\r\n        // Class: Grid\r\n        r(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n            visible: false\r\n        });\r\n        // Class: Grid\r\n        r(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n            opacity: 0.5\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: Cursor\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"XYCursor\").setAll({\r\n            behavior: \"none\",\r\n            layer: 30,\r\n            exportable: false,\r\n            snapToSeriesBy: \"xy\",\r\n            moveThreshold: 1\r\n        });\r\n        {\r\n            const rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.8,\r\n                strokeDasharray: [2, 2],\r\n                ariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        {\r\n            const rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n            rule.setAll({\r\n                strokeOpacity: 0.8,\r\n                strokeDasharray: [2, 2],\r\n                ariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0.15,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: Axes\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"Axis\").setAll({\r\n            start: 0,\r\n            end: 1,\r\n            minZoomCount: 1,\r\n            maxZoomCount: Infinity,\r\n            maxZoomFactor: 1000,\r\n            maxDeviation: 0.1,\r\n            snapTooltip: true,\r\n            tooltipLocation: 0.5,\r\n            panX: true,\r\n            panY: true,\r\n            zoomX: true,\r\n            zoomY: true,\r\n            fixAxisSize: true\r\n        });\r\n        r(\"AxisLabel\").setAll({\r\n            location: 0.5,\r\n            multiLocation: 0,\r\n            centerX: p50,\r\n            centerY: p50,\r\n            paddingTop: 3,\r\n            paddingBottom: 3,\r\n            paddingLeft: 5,\r\n            paddingRight: 5\r\n        });\r\n        // The following is deprecated following text measuring updates in 5.0.5\r\n        // r(\"AxisLabel\", [\"y\"]).setAll({\r\n        // \ttextAlign: \"right\"\r\n        // });\r\n        // r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n        // \ttextAlign: \"left\"\r\n        // });\r\n        r(\"Container\", [\"axis\", \"header\"]).setAll({\r\n            layer: 30\r\n        });\r\n        r(\"Rectangle\", [\"axis\", \"header\", \"background\"]).setAll({\r\n            crisp: true\r\n        });\r\n        {\r\n            const rule = r(\"AxisRenderer\");\r\n            rule.setAll({\r\n                crisp: true,\r\n                strokeOpacity: 0\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"AxisRendererX\").setAll({\r\n            minGridDistance: 120,\r\n            opposite: false,\r\n            inversed: false,\r\n            cellStartLocation: 0,\r\n            cellEndLocation: 1,\r\n            width: p100\r\n        });\r\n        r(\"AxisRendererY\").setAll({\r\n            minGridDistance: 40,\r\n            opposite: false,\r\n            inversed: false,\r\n            cellStartLocation: 0,\r\n            cellEndLocation: 1,\r\n            height: p100\r\n        });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n            rule.states.create(\"hover\", { fillOpacity: 0.1 });\r\n        }\r\n        r(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n            cursorOverStyle: \"ew-resize\"\r\n        });\r\n        r(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n            cursorOverStyle: \"ns-resize\"\r\n        });\r\n        {\r\n            const rule = r(\"Grid\");\r\n            rule.setAll({\r\n                location: 0,\r\n                strokeOpacity: 0.15,\r\n                crisp: true\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"Grid\", [\"base\"]).setAll({\r\n            strokeOpacity: 0.3\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n            rule.setAll({\r\n                visible: false,\r\n                isMeasured: false,\r\n                position: \"absolute\",\r\n                fillOpacity: 0.05,\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        r(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n            isMeasured: true\r\n        });\r\n        // hides all elements of series axis range\r\n        r(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n            visible: false,\r\n            isMeasured: true\r\n        });\r\n        r(\"Grid\", [\"series\", \"range\"]).setAll({\r\n            visible: false\r\n        });\r\n        r(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n            visible: false,\r\n            crisp: true\r\n        });\r\n        r(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n            visible: false\r\n        });\r\n        {\r\n            const rule = r(\"AxisTick\");\r\n            rule.setAll({\r\n                location: 0.5,\r\n                multiLocation: 0,\r\n                strokeOpacity: 1,\r\n                isMeasured: false,\r\n                position: \"absolute\",\r\n                visible: false\r\n            });\r\n            setColor(rule, \"stroke\", ic, \"grid\");\r\n        }\r\n        r(\"CategoryAxis\").setAll({\r\n            startLocation: 0,\r\n            endLocation: 1,\r\n            fillRule: (dataItem, index) => {\r\n                const axisFill = dataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    if (!$type.isNumber(index) || index % 2 == 0) {\r\n                        axisFill.setPrivate(\"visible\", true);\r\n                    }\r\n                    else {\r\n                        axisFill.setPrivate(\"visible\", false);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        const gridIntervals = [\r\n            { timeUnit: \"millisecond\", count: 1 },\r\n            { timeUnit: \"millisecond\", count: 5 },\r\n            { timeUnit: \"millisecond\", count: 10 },\r\n            { timeUnit: \"millisecond\", count: 50 },\r\n            { timeUnit: \"millisecond\", count: 100 },\r\n            { timeUnit: \"millisecond\", count: 500 },\r\n            { timeUnit: \"second\", count: 1 },\r\n            { timeUnit: \"second\", count: 5 },\r\n            { timeUnit: \"second\", count: 10 },\r\n            { timeUnit: \"second\", count: 30 },\r\n            { timeUnit: \"minute\", count: 1 },\r\n            { timeUnit: \"minute\", count: 5 },\r\n            { timeUnit: \"minute\", count: 10 },\r\n            { timeUnit: \"minute\", count: 15 },\r\n            { timeUnit: \"minute\", count: 30 },\r\n            { timeUnit: \"hour\", count: 1 },\r\n            { timeUnit: \"hour\", count: 3 },\r\n            { timeUnit: \"hour\", count: 6 },\r\n            { timeUnit: \"hour\", count: 12 },\r\n            { timeUnit: \"day\", count: 1 },\r\n            { timeUnit: \"day\", count: 2 },\r\n            { timeUnit: \"day\", count: 3 },\r\n            { timeUnit: \"day\", count: 4 },\r\n            { timeUnit: \"day\", count: 5 },\r\n            { timeUnit: \"week\", count: 1 },\r\n            { timeUnit: \"month\", count: 1 },\r\n            { timeUnit: \"month\", count: 2 },\r\n            { timeUnit: \"month\", count: 3 },\r\n            { timeUnit: \"month\", count: 6 },\r\n            { timeUnit: \"year\", count: 1 },\r\n            { timeUnit: \"year\", count: 2 },\r\n            { timeUnit: \"year\", count: 5 },\r\n            { timeUnit: \"year\", count: 10 },\r\n            { timeUnit: \"year\", count: 50 },\r\n            { timeUnit: \"year\", count: 100 },\r\n            { timeUnit: \"year\", count: 200 },\r\n            { timeUnit: \"year\", count: 500 },\r\n            { timeUnit: \"year\", count: 1000 },\r\n            { timeUnit: \"year\", count: 2000 },\r\n            { timeUnit: \"year\", count: 5000 },\r\n            { timeUnit: \"year\", count: 10000 },\r\n            { timeUnit: \"year\", count: 100000 }\r\n        ];\r\n        const dateFormats = {\r\n            \"millisecond\": language.translate(\"_date_millisecond\"),\r\n            \"second\": language.translate(\"_date_second\"),\r\n            \"minute\": language.translate(\"_date_minute\"),\r\n            \"hour\": language.translate(\"_date_hour\"),\r\n            \"day\": language.translate(\"_date_day\"),\r\n            \"week\": language.translate(\"_date_day\"),\r\n            \"month\": language.translate(\"_date_month\"),\r\n            \"year\": language.translate(\"_date_year\")\r\n        };\r\n        const periodChangeDateFormats = {\r\n            \"millisecond\": language.translate(\"_date_millisecond\"),\r\n            \"second\": language.translate(\"_date_second\"),\r\n            \"minute\": language.translate(\"_date_minute\"),\r\n            \"hour\": language.translate(\"_date_day\"),\r\n            \"day\": language.translate(\"_date_day\"),\r\n            \"week\": language.translate(\"_date_day\"),\r\n            \"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n            \"year\": language.translate(\"_date_year\")\r\n        };\r\n        const tooltipDateFormats = {\r\n            \"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n            \"second\": language.translate(\"_date_second_full\"),\r\n            \"minute\": language.translate(\"_date_minute_full\"),\r\n            \"hour\": language.translate(\"_date_hour_full\"),\r\n            \"day\": language.translate(\"_date_day_full\"),\r\n            \"week\": language.translate(\"_date_week_full\"),\r\n            \"month\": language.translate(\"_date_month_full\"),\r\n            \"year\": language.translate(\"_date_year\")\r\n        };\r\n        r(\"CategoryDateAxis\").setAll({\r\n            markUnitChange: true,\r\n            gridIntervals: $array.copy(gridIntervals),\r\n            dateFormats: $object.copy(dateFormats),\r\n            periodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n        });\r\n        r(\"DateAxis\").setAll({\r\n            maxZoomFactor: null,\r\n            strictMinMax: true,\r\n            startLocation: 0,\r\n            endLocation: 1,\r\n            markUnitChange: true,\r\n            groupData: false,\r\n            groupCount: 500,\r\n            gridIntervals: $array.copy(gridIntervals),\r\n            dateFormats: $object.copy(dateFormats),\r\n            periodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n            tooltipDateFormats: tooltipDateFormats,\r\n            groupIntervals: [\r\n                { timeUnit: \"millisecond\", count: 1 },\r\n                { timeUnit: \"millisecond\", count: 10 },\r\n                { timeUnit: \"millisecond\", count: 100 },\r\n                { timeUnit: \"second\", count: 1 },\r\n                { timeUnit: \"second\", count: 10 },\r\n                { timeUnit: \"minute\", count: 1 },\r\n                { timeUnit: \"minute\", count: 10 },\r\n                { timeUnit: \"hour\", count: 1 },\r\n                { timeUnit: \"day\", count: 1 },\r\n                { timeUnit: \"week\", count: 1 },\r\n                { timeUnit: \"month\", count: 1 },\r\n                { timeUnit: \"year\", count: 1 }\r\n            ],\r\n            fillRule: (dataItem) => {\r\n                const axisFill = dataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    const axis = dataItem.component;\r\n                    const value = dataItem.get(\"value\");\r\n                    const endValue = dataItem.get(\"endValue\");\r\n                    const intervalDuration = axis.intervalDuration();\r\n                    const baseInterval = axis.getPrivate(\"baseInterval\");\r\n                    const gridInterval = axis.getPrivate(\"gridInterval\", baseInterval);\r\n                    let min = axis.getPrivate(\"min\", 0);\r\n                    min = $time.round(new Date(min), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n                    if (value != null && endValue != null) {\r\n                        const val = Math.round(Math.round((value - min) / intervalDuration)) / 2;\r\n                        if (val == Math.round(val)) {\r\n                            axisFill.setPrivate(\"visible\", true);\r\n                        }\r\n                        else {\r\n                            axisFill.setPrivate(\"visible\", false);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        r(\"GaplessDateAxis\").setAll({\r\n            fillRule: (dataItem) => {\r\n                const axisFill = dataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    const index = dataItem.get(\"index\");\r\n                    let visible = false;\r\n                    if (!$type.isNumber(index) || index % 2 == 0) {\r\n                        visible = true;\r\n                    }\r\n                    axisFill.setPrivate(\"visible\", visible);\r\n                }\r\n            }\r\n        });\r\n        r(\"ValueAxis\").setAll({\r\n            baseValue: 0,\r\n            logarithmic: false,\r\n            strictMinMax: false,\r\n            autoZoom: true,\r\n            fillRule: (dataItem) => {\r\n                const axisFill = dataItem.get(\"axisFill\");\r\n                if (axisFill) {\r\n                    const axis = dataItem.component;\r\n                    const value = dataItem.get(\"value\");\r\n                    const step = axis.getPrivate(\"step\");\r\n                    if ($type.isNumber(value) && $type.isNumber(step)) {\r\n                        if ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n                            axisFill.setPrivate(\"visible\", false);\r\n                        }\r\n                        else {\r\n                            axisFill.setPrivate(\"visible\", true);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        r(\"DurationAxis\").setAll({\r\n            baseUnit: \"second\"\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/xy: Series\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"XYSeries\").setAll({\r\n            maskBullets: true,\r\n            stackToNegative: true,\r\n            locationX: 0.5,\r\n            locationY: 0.5,\r\n            snapTooltip: false,\r\n            openValueXGrouped: \"open\",\r\n            openValueYGrouped: \"open\",\r\n            valueXGrouped: \"close\",\r\n            valueYGrouped: \"close\",\r\n            seriesTooltipTarget: \"series\"\r\n        });\r\n        r(\"BaseColumnSeries\").setAll({\r\n            adjustBulletPosition: true\r\n        });\r\n        r(\"ColumnSeries\").setAll({\r\n            clustered: true\r\n        });\r\n        r(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n            position: \"absolute\",\r\n            isMeasured: false,\r\n            width: percent(70),\r\n            height: percent(70),\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTR: 0,\r\n            fillOpacity: 1,\r\n            role: \"figure\"\r\n        });\r\n        r(\"LineSeries\").setAll({\r\n            connect: true,\r\n            autoGapCount: 1.1,\r\n            stackToNegative: false\r\n        });\r\n        r(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n            position: \"absolute\",\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            isMeasured: false\r\n        });\r\n        r(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n            visible: false,\r\n            fillOpacity: 0,\r\n            position: \"absolute\",\r\n            strokeWidth: 0,\r\n            strokeOpacity: 0,\r\n            isMeasured: false\r\n        });\r\n        r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n            draw: (display, sprite) => {\r\n                const parent = sprite.parent;\r\n                if (parent) {\r\n                    const h = parent.height();\r\n                    const w = parent.width();\r\n                    display.moveTo(0, h / 2);\r\n                    display.lineTo(w, h / 2);\r\n                }\r\n            }\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"stroke\", ic, \"disabled\");\r\n        }\r\n        r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n            draw: (display, sprite) => {\r\n                const parent = sprite.parent;\r\n                if (parent) {\r\n                    const h = parent.height();\r\n                    const w = parent.width();\r\n                    display.moveTo(0, 0);\r\n                    display.lineTo(w, 0);\r\n                    display.lineTo(w, h);\r\n                    display.lineTo(0, h);\r\n                    display.lineTo(0, 0);\r\n                }\r\n            }\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n            setColor(rule, \"stroke\", ic, \"disabled\");\r\n        }\r\n        r(\"SmoothedXYLineSeries\").setAll({\r\n            tension: 0.5\r\n        });\r\n        r(\"SmoothedXLineSeries\").setAll({\r\n            tension: 0.5\r\n        });\r\n        r(\"SmoothedYLineSeries\").setAll({\r\n            tension: 0.5\r\n        });\r\n        r(\"Candlestick\").setAll({\r\n            position: \"absolute\",\r\n            isMeasured: false,\r\n            width: percent(50),\r\n            height: percent(50),\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            cornerRadiusBL: 0,\r\n            cornerRadiusTL: 0,\r\n            cornerRadiusBR: 0,\r\n            cornerRadiusTR: 0,\r\n            fillOpacity: 1,\r\n            role: \"figure\"\r\n        });\r\n        r(\"OHLC\").setAll({\r\n            width: percent(80),\r\n            height: percent(80)\r\n        });\r\n        r(\"CandlestickSeries\").setAll({\r\n            lowValueXGrouped: \"low\",\r\n            lowValueYGrouped: \"low\",\r\n            highValueXGrouped: \"high\",\r\n            highValueYGrouped: \"high\",\r\n            openValueXGrouped: \"open\",\r\n            openValueYGrouped: \"open\",\r\n            valueXGrouped: \"close\",\r\n            valueYGrouped: \"close\"\r\n        });\r\n        // These rules can be used for regular columns, too\r\n        {\r\n            const rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n            setColor(rule, \"fill\", ic, \"positive\");\r\n            setColor(rule, \"stroke\", ic, \"positive\");\r\n        }\r\n        {\r\n            const rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n            setColor(rule, \"fill\", ic, \"negative\");\r\n            setColor(rule, \"stroke\", ic, \"negative\");\r\n        }\r\n        // Hollow\r\n        r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromOpen\", { fillOpacity: 0 });\r\n        r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromOpen\", { fillOpacity: 1 });\r\n        {\r\n            const rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", {});\r\n            setColor(rule, \"fill\", ic, \"positive\");\r\n            setColor(rule, \"stroke\", ic, \"positive\");\r\n        }\r\n        {\r\n            const rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", {});\r\n            setColor(rule, \"fill\", ic, \"negative\");\r\n            setColor(rule, \"stroke\", ic, \"negative\");\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=XYChartDefaultTheme.js.map","import { Container } from \"../../core/render/Container\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\n/**\r\n * A base class for all charts.\r\n */\r\nexport class Chart extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Container]] chart places its elements in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"chartContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { width: p100, height: p100, interactiveChildren: false }))\r\n        });\r\n        /**\r\n         * A [[Container]] chart places its bullets in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { interactiveChildren: false, isMeasured: false, position: \"absolute\", width: p100, height: p100 })\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(Chart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Chart\"\r\n});\r\nObject.defineProperty(Chart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Chart.className])\r\n});\r\n//# sourceMappingURL=Chart.js.map","import { Chart } from \"./Chart\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { ListAutoDispose } from \"../../core/util/List\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\n/**\r\n * A base class for all series-based charts.\r\n */\r\nexport class SerialChart extends Chart {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Container]] where chart will store all series.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"seriesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100, isMeasured: false })\r\n        });\r\n        /**\r\n         * A list of chart's series.\r\n         */\r\n        Object.defineProperty(this, \"series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListAutoDispose()\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._disposers.push(this.series);\r\n        const children = this.seriesContainer.children;\r\n        this._disposers.push(this.series.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (series) => {\r\n                    this._removeSeries(series);\r\n                });\r\n                const colors = this.get(\"colors\");\r\n                if (colors) {\r\n                    colors.reset();\r\n                }\r\n            }\r\n            else if (change.type === \"push\") {\r\n                children.moveValue(change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                children.setIndex(change.index, change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                children.insertIndex(change.index, change.newValue);\r\n                this._processSeries(change.newValue);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._removeSeries(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                children.moveValue(change.value, change.newIndex);\r\n                this._processSeries(change.value);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        }));\r\n    }\r\n    _processSeries(series) {\r\n        series.chart = this;\r\n        series._placeBulletsContainer(this);\r\n    }\r\n    _removeSeries(series) {\r\n        if (!series.isDisposed()) {\r\n            this.seriesContainer.children.removeValue(series);\r\n            series._removeBulletsContainer();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(SerialChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"SerialChart\"\r\n});\r\nObject.defineProperty(SerialChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Chart.classNames.concat([SerialChart.className])\r\n});\r\n//# sourceMappingURL=SerialChart.js.map","import * as $type from \"../util/Type\";\r\nimport * as $math from \"../util/Math\";\r\nimport * as $utils from \"../util/Utils\";\r\nimport { Rectangle } from \"./Rectangle\";\r\n/**\r\n * Draws a rectangle with rounded corners.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class RoundedRectangle extends Rectangle {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"cornerRadiusTL\") || this.isDirty(\"cornerRadiusTR\") || this.isDirty(\"cornerRadiusBR\") || this.isDirty(\"cornerRadiusBL\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _draw() {\r\n        let width = this.width();\r\n        let height = this.height();\r\n        let w = width;\r\n        let h = height;\r\n        let wSign = w / Math.abs(width);\r\n        let hSign = h / Math.abs(height);\r\n        if ($type.isNumber(w) && $type.isNumber(h)) {\r\n            let minSide = Math.min(w, h) / 2;\r\n            let crtl = $utils.relativeToValue(this.get(\"cornerRadiusTL\", 8), minSide);\r\n            let crtr = $utils.relativeToValue(this.get(\"cornerRadiusTR\", 8), minSide);\r\n            let crbr = $utils.relativeToValue(this.get(\"cornerRadiusBR\", 8), minSide);\r\n            let crbl = $utils.relativeToValue(this.get(\"cornerRadiusBL\", 8), minSide);\r\n            let maxcr = Math.min(Math.abs(w / 2), Math.abs(h / 2));\r\n            crtl = $math.fitToRange(crtl, 0, maxcr);\r\n            crtr = $math.fitToRange(crtr, 0, maxcr);\r\n            crbr = $math.fitToRange(crbr, 0, maxcr);\r\n            crbl = $math.fitToRange(crbl, 0, maxcr);\r\n            const display = this._display;\r\n            display.moveTo(crtl * wSign, 0);\r\n            display.lineTo(w - crtr * wSign, 0);\r\n            if (crtr > 0) {\r\n                display.arcTo(w, 0, w, crtr * hSign, crtr);\r\n            }\r\n            display.lineTo(w, h - crbr * hSign);\r\n            if (crbr > 0) {\r\n                display.arcTo(w, h, w - crbr * wSign, h, crbr);\r\n            }\r\n            display.lineTo(crbl * wSign, h);\r\n            if (crbl > 0) {\r\n                display.arcTo(0, h, 0, h - crbl * hSign, crbl);\r\n            }\r\n            display.lineTo(0, crtl * hSign);\r\n            if (crtl > 0) {\r\n                display.arcTo(0, 0, crtl * wSign, 0, crtl);\r\n            }\r\n            display.closePath();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(RoundedRectangle, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"RoundedRectangle\"\r\n});\r\nObject.defineProperty(RoundedRectangle, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Rectangle.classNames.concat([RoundedRectangle.className])\r\n});\r\n//# sourceMappingURL=RoundedRectangle.js.map","import { RoundedRectangle } from \"../render/RoundedRectangle\";\r\nimport { Container } from \"./Container\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * Draws an interactive button.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/buttons/} for more info\r\n * @important\r\n */\r\nexport class Button extends Container {\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"button\"]);\r\n        super._afterNew();\r\n        if (!this._settings.background) {\r\n            this.set(\"background\", RoundedRectangle.new(this._root, {\r\n                themeTags: $utils.mergeTags(this._settings.themeTags, [\"background\"])\r\n            }));\r\n        }\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"icon\")) {\r\n            const previous = this._prevSettings.icon;\r\n            const icon = this.get(\"icon\");\r\n            if (icon !== previous) {\r\n                this._disposeProperty(\"icon\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (icon) {\r\n                    this.children.push(icon);\r\n                }\r\n                this._prevSettings.icon = icon;\r\n            }\r\n        }\r\n        if (this.isDirty(\"label\")) {\r\n            const previous = this._prevSettings.label;\r\n            const label = this.get(\"label\");\r\n            if (label !== previous) {\r\n                this._disposeProperty(\"label\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (label) {\r\n                    this.children.push(label);\r\n                }\r\n                this._prevSettings.label = label;\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Button, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Button\"\r\n});\r\nObject.defineProperty(Button, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Button.className])\r\n});\r\n//# sourceMappingURL=Button.js.map","import { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Rectangle } from \"../../core/render/Rectangle\";\r\nimport { SerialChart } from \"../../core/render/SerialChart\";\r\nimport { ListAutoDispose } from \"../../core/util/List\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport { Button } from \"../../core/render/Button\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport { Percent } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $order from \"../../core/util/Order\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * Creates an XY chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\r\n * @important\r\n */\r\nexport class XYChart extends SerialChart {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A list of horizontal axes.\r\n         */\r\n        Object.defineProperty(this, \"xAxes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListAutoDispose()\r\n        });\r\n        /**\r\n         * A list of vertical axes.\r\n         */\r\n        Object.defineProperty(this, \"yAxes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListAutoDispose()\r\n        });\r\n        /**\r\n         * A [[Container]] located on top of the chart, used to store top horizontal\r\n         * axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located in the middle the chart, used to store vertical axes\r\n         * and plot area container.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"yAxesAndPlotContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located on bottom of the chart, used to store bottom\r\n         * horizontal axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bottomAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located on left of the chart, used to store left-hand\r\n         * vertical axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"leftAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] located in the middle of the chart, used to store plotContainer and topPlotContainer\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"plotsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }))\r\n        });\r\n        /**\r\n         * A [[Container]] located in the middle of the chart, used to store actual\r\n         * plots (series).\r\n         *\r\n         * NOTE: `plotContainer` will automatically have its `background` preset. If\r\n         * you need to modify background or outline for chart's plot area, you can\r\n         * use `plotContainer.get(\"background\")` for that.*\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"plotContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }))\r\n        });\r\n        /**\r\n         * A [[Container]] used for any elements that need to be displayed over\r\n         * regular `plotContainer`.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topPlotContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }))\r\n        });\r\n        /**\r\n         * A [[Container]] axis grid elements are stored in.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"gridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }))\r\n        });\r\n        /**\r\n         * A [[Container]] axis background grid elements are stored in.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topGridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100, isMeasured: false })\r\n        });\r\n        /**\r\n         * A [[Container]] located on right of the chart, used to store right-hand\r\n         * vertical axes.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"rightAxesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }))\r\n        });\r\n        /**\r\n         * A [[Container]] axis headers are stored in.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"axisHeadersContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotContainer.children.push(Container.new(this._root, {}))\r\n        });\r\n        /**\r\n         * A button that is shown when chart is not fully zoomed out.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\r\n         * @default Button.new()\r\n         */\r\n        Object.defineProperty(this, \"zoomOutButton\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.topPlotContainer.children.push(Button.new(this._root, {\r\n                themeTags: [\"zoom\"],\r\n                icon: Graphics.new(this._root, {\r\n                    themeTags: [\"button\", \"icon\"]\r\n                })\r\n            }))\r\n        });\r\n        Object.defineProperty(this, \"_movePoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { x: 0, y: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_wheelDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_otherCharts\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_movePoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_downStartX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downEndX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downStartY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downEndY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._defaultThemes.push(XYChartDefaultTheme.new(this._root));\r\n        super._afterNew();\r\n        this._disposers.push(this.xAxes);\r\n        this._disposers.push(this.yAxes);\r\n        const root = this._root;\r\n        let verticalLayout = this._root.verticalLayout;\r\n        const zoomOutButton = this.zoomOutButton;\r\n        zoomOutButton.events.on(\"click\", () => {\r\n            this.zoomOut();\r\n        });\r\n        zoomOutButton.set(\"opacity\", 0);\r\n        zoomOutButton.states.lookup(\"default\").set(\"opacity\", 1);\r\n        this.chartContainer.set(\"layout\", verticalLayout);\r\n        const plotContainer = this.plotContainer;\r\n        plotContainer.children.push(this.seriesContainer);\r\n        this._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\r\n        this._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\r\n        plotContainer.children.push(this.topGridContainer);\r\n        plotContainer.children.push(this.bulletsContainer);\r\n        // Setting trasnparent background so that full body of the plot container\r\n        // is interactive\r\n        plotContainer.set(\"interactive\", true);\r\n        plotContainer.set(\"interactiveChildren\", false);\r\n        plotContainer.set(\"background\", Rectangle.new(root, {\r\n            themeTags: [\"xy\", \"background\"],\r\n            fill: Color.fromHex(0x000000),\r\n            fillOpacity: 0\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\r\n            this._handlePlotDown(event.originalEvent);\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\r\n            this._handlePlotUp(event.originalEvent);\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\r\n            this._handlePlotMove(event.originalEvent);\r\n        }));\r\n        this._maskGrid();\r\n        this._setUpTouch();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"pinchZoomX\") || this.isDirty(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) {\r\n            this._setUpTouch();\r\n        }\r\n    }\r\n    _setUpTouch() {\r\n        if (!this.plotContainer._display.cancelTouch) {\r\n            this.plotContainer._display.cancelTouch = (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\r\n        }\r\n    }\r\n    _maskGrid() {\r\n        this.gridContainer.set(\"maskContent\", true);\r\n        this.topGridContainer.set(\"maskContent\", true);\r\n    }\r\n    _removeSeries(series) {\r\n        const xAxis = series.get(\"xAxis\");\r\n        if (xAxis) {\r\n            $array.remove(xAxis.series, series);\r\n            xAxis.markDirtyExtremes();\r\n        }\r\n        const yAxis = series.get(\"yAxis\");\r\n        if (yAxis) {\r\n            $array.remove(yAxis.series, series);\r\n            yAxis.markDirtyExtremes();\r\n        }\r\n        const cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            const snapToSeries = cursor.get(\"snapToSeries\");\r\n            if (snapToSeries) {\r\n                $array.remove(snapToSeries, series);\r\n            }\r\n        }\r\n        super._removeSeries(series);\r\n    }\r\n    /**\r\n     * This method is invoked when mouse wheel is used over chart's plot\r\n     * container, and handles zooming/pan.\r\n     *\r\n     * You can invoke this method manually, if you need to mimic chart's wheel\r\n     * behavior over other elements of the chart.\r\n     */\r\n    handleWheel(event) {\r\n        const wheelX = this.get(\"wheelX\");\r\n        const wheelY = this.get(\"wheelY\");\r\n        const plotContainer = this.plotContainer;\r\n        const wheelEvent = event.originalEvent;\r\n        // Ignore wheel event if it is happening on a non-chart element, e.g. if\r\n        // some page element is over the chart.\r\n        if ($utils.isLocalEvent(wheelEvent, this)) {\r\n            wheelEvent.preventDefault();\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n        const plotPoint = plotContainer.toLocal(this._root.documentPointToRoot({ x: wheelEvent.clientX, y: wheelEvent.clientY }));\r\n        const wheelStep = this.get(\"wheelStep\", 0.2);\r\n        const shiftY = wheelEvent.deltaY / 100;\r\n        const shiftX = wheelEvent.deltaX / 100;\r\n        const wheelZoomPositionX = this.get(\"wheelZoomPositionX\");\r\n        const wheelZoomPositionY = this.get(\"wheelZoomPositionY\");\r\n        if ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"zoomX\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let position = axis.fixPosition(plotPoint.x / plotContainer.width());\r\n                    if (wheelZoomPositionX != null) {\r\n                        position = wheelZoomPositionX;\r\n                    }\r\n                    let newStart = start - wheelStep * (end - start) * shiftX * position;\r\n                    let newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\r\n                    if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                        this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"zoomX\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let position = axis.fixPosition(plotPoint.x / plotContainer.width());\r\n                    if (wheelZoomPositionX != null) {\r\n                        position = wheelZoomPositionX;\r\n                    }\r\n                    let newStart = start - wheelStep * (end - start) * shiftY * position;\r\n                    let newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\r\n                    if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                        this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"zoomY\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let position = axis.fixPosition(plotPoint.y / plotContainer.height());\r\n                    if (wheelZoomPositionY != null) {\r\n                        position = wheelZoomPositionY;\r\n                    }\r\n                    let newStart = start - wheelStep * (end - start) * shiftX * position;\r\n                    let newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\r\n                    if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                        this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"zoomY\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let position = axis.fixPosition(plotPoint.y / plotContainer.height());\r\n                    if (wheelZoomPositionY != null) {\r\n                        position = wheelZoomPositionY;\r\n                    }\r\n                    let newStart = start - wheelStep * (end - start) * shiftY * position;\r\n                    let newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\r\n                    if (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\r\n                        this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"panX\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\r\n                    let newStart = start + delta;\r\n                    let newEnd = end + delta;\r\n                    let se = this._fixWheel(newStart, newEnd);\r\n                    newStart = se[0];\r\n                    newEnd = se[1];\r\n                    this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                }\r\n            });\r\n        }\r\n        if ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"panX\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\r\n                    let newStart = start + delta;\r\n                    let newEnd = end + delta;\r\n                    let se = this._fixWheel(newStart, newEnd);\r\n                    newStart = se[0];\r\n                    newEnd = se[1];\r\n                    this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                }\r\n            });\r\n        }\r\n        if ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"panY\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\r\n                    let newStart = start + delta;\r\n                    let newEnd = end + delta;\r\n                    let se = this._fixWheel(newStart, newEnd);\r\n                    newStart = se[0];\r\n                    newEnd = se[1];\r\n                    this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                }\r\n            });\r\n        }\r\n        if ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"panY\")) {\r\n                    let start = axis.get(\"start\");\r\n                    let end = axis.get(\"end\");\r\n                    let delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\r\n                    let newStart = start - delta;\r\n                    let newEnd = end - delta;\r\n                    let se = this._fixWheel(newStart, newEnd);\r\n                    newStart = se[0];\r\n                    newEnd = se[1];\r\n                    this._handleWheelAnimation(axis.zoom(newStart, newEnd));\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _handleSetWheel() {\r\n        const wheelX = this.get(\"wheelX\");\r\n        const wheelY = this.get(\"wheelY\");\r\n        const plotContainer = this.plotContainer;\r\n        if (wheelX !== \"none\" || wheelY !== \"none\") {\r\n            this._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\r\n                this.handleWheel(event);\r\n            });\r\n            this._disposers.push(this._wheelDp);\r\n        }\r\n        else {\r\n            if (this._wheelDp) {\r\n                this._wheelDp.dispose();\r\n            }\r\n        }\r\n    }\r\n    _getWheelSign(axis) {\r\n        let sign = 1;\r\n        if (axis.get(\"renderer\").get(\"inversed\")) {\r\n            sign = -1;\r\n        }\r\n        return sign;\r\n    }\r\n    _fixWheel(start, end) {\r\n        const diff = end - start;\r\n        if (start < 0) {\r\n            start = 0;\r\n            end = start + diff;\r\n        }\r\n        if (end > 1) {\r\n            end = 1;\r\n            start = end - diff;\r\n        }\r\n        return [start, end];\r\n    }\r\n    _handlePlotDown(event) {\r\n        const plotContainer = this.plotContainer;\r\n        let local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\r\n        if (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\r\n            const touchEvent = event;\r\n            const pointerId = touchEvent.pointerId;\r\n            if (pointerId) {\r\n                if ($object.keys(plotContainer._downPoints).length > 0) {\r\n                    const xAxis = this.xAxes.getIndex(0);\r\n                    const yAxis = this.yAxes.getIndex(0);\r\n                    if (xAxis) {\r\n                        this._downStartX = xAxis.get(\"start\", 0);\r\n                        this._downEndX = xAxis.get(\"end\", 1);\r\n                    }\r\n                    if (yAxis) {\r\n                        this._downStartY = yAxis.get(\"start\", 0);\r\n                        this._downEndY = yAxis.get(\"end\", 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.get(\"panX\") || this.get(\"panY\")) {\r\n            if (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\r\n                //this._downPoint = local;\r\n                this._downPoint = { x: event.clientX, y: event.clientY };\r\n                const panX = this.get(\"panX\");\r\n                const panY = this.get(\"panY\");\r\n                if (panX) {\r\n                    this.xAxes.each((axis) => {\r\n                        axis._panStart = axis.get(\"start\");\r\n                        axis._panEnd = axis.get(\"end\");\r\n                    });\r\n                }\r\n                if (panY) {\r\n                    this.yAxes.each((axis) => {\r\n                        axis._panStart = axis.get(\"start\");\r\n                        axis._panEnd = axis.get(\"end\");\r\n                    });\r\n                }\r\n                const eventType = \"panstarted\";\r\n                if (this.events.isEnabled(eventType)) {\r\n                    this.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleWheelAnimation(animation) {\r\n        if (animation) {\r\n            animation.events.on(\"stopped\", () => {\r\n                this._dispatchWheelAnimation();\r\n            });\r\n        }\r\n        else {\r\n            this._dispatchWheelAnimation();\r\n        }\r\n    }\r\n    _dispatchWheelAnimation() {\r\n        const eventType = \"wheelended\";\r\n        if (this.events.isEnabled(eventType)) {\r\n            this.events.dispatch(eventType, { type: eventType, target: this });\r\n        }\r\n    }\r\n    _handlePlotUp(event) {\r\n        const downPoint = this._downPoint;\r\n        if (downPoint) {\r\n            if (this.get(\"panX\") || this.get(\"panY\")) {\r\n                let local = this.plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\r\n                if (local.x == downPoint.x && local.y == downPoint.y) {\r\n                    const eventType = \"pancancelled\";\r\n                    if (this.events.isEnabled(eventType)) {\r\n                        this.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event });\r\n                    }\r\n                }\r\n                const eventType = \"panended\";\r\n                if (this.events.isEnabled(eventType)) {\r\n                    this.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event });\r\n                }\r\n            }\r\n        }\r\n        // TODO: handle multitouch\r\n        this._downPoint = undefined;\r\n        this.xAxes.each((xAxis) => {\r\n            xAxis._isPanning = false;\r\n        });\r\n        this.yAxes.each((yAxis) => {\r\n            yAxis._isPanning = false;\r\n        });\r\n    }\r\n    _handlePlotMove(event) {\r\n        const plotContainer = this.plotContainer;\r\n        if (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\r\n            const touchEvent = event;\r\n            const pointerId = touchEvent.pointerId;\r\n            if (pointerId) {\r\n                this._movePoints[pointerId] = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\r\n                if ($object.keys(plotContainer._downPoints).length > 1) {\r\n                    this._handlePinch();\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        let downPoint = this._downPoint;\r\n        if (downPoint) {\r\n            downPoint = plotContainer.toLocal(this._root.documentPointToRoot(downPoint));\r\n            let local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\r\n            const panX = this.get(\"panX\");\r\n            const panY = this.get(\"panY\");\r\n            if (panX) {\r\n                let scrollbarX = this.get(\"scrollbarX\");\r\n                if (scrollbarX) {\r\n                    scrollbarX.events.disableType(\"rangechanged\");\r\n                }\r\n                this.xAxes.each((axis) => {\r\n                    if (axis.get(\"panX\")) {\r\n                        axis._isPanning = true;\r\n                        //const maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                        let panStart = axis._panStart;\r\n                        let panEnd = axis._panEnd;\r\n                        let difference = (panEnd - panStart);\r\n                        let deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\r\n                        if (axis.get(\"renderer\").get(\"inversed\")) {\r\n                            deltaX *= -1;\r\n                        }\r\n                        let start = panStart + deltaX;\r\n                        let end = panEnd + deltaX;\r\n                        if (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\r\n                            axis.set(\"start\", start);\r\n                            axis.set(\"end\", end);\r\n                        }\r\n                    }\r\n                });\r\n                if (scrollbarX) {\r\n                    scrollbarX.events.enableType(\"rangechanged\");\r\n                }\r\n            }\r\n            if (panY) {\r\n                let scrollbarY = this.get(\"scrollbarY\");\r\n                if (scrollbarY) {\r\n                    scrollbarY.events.disableType(\"rangechanged\");\r\n                }\r\n                this.yAxes.each((axis) => {\r\n                    if (axis.get(\"panY\")) {\r\n                        axis._isPanning = true;\r\n                        //const maxDeviation = axis.get(\"maxDeviation\", 0);\r\n                        let panStart = axis._panStart;\r\n                        let panEnd = axis._panEnd;\r\n                        let difference = (panEnd - panStart);\r\n                        let deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\r\n                        if (axis.get(\"renderer\").get(\"inversed\")) {\r\n                            deltaY *= -1;\r\n                        }\r\n                        let start = panStart - deltaY;\r\n                        let end = panEnd - deltaY;\r\n                        if (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\r\n                            axis.set(\"start\", start);\r\n                            axis.set(\"end\", end);\r\n                        }\r\n                    }\r\n                });\r\n                if (scrollbarY) {\r\n                    scrollbarY.events.enableType(\"rangechanged\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handlePinch() {\r\n        const plotContainer = this.plotContainer;\r\n        let i = 0;\r\n        let downPoints = [];\r\n        let movePoints = [];\r\n        $object.each(plotContainer._downPoints, (k, point) => {\r\n            downPoints[i] = point;\r\n            let movePoint = this._movePoints[k];\r\n            if (movePoint) {\r\n                movePoints[i] = movePoint;\r\n            }\r\n            i++;\r\n        });\r\n        if (downPoints.length > 1 && movePoints.length > 1) {\r\n            const w = plotContainer.width();\r\n            const h = plotContainer.height();\r\n            let downPoint0 = downPoints[0];\r\n            let downPoint1 = downPoints[1];\r\n            let movePoint0 = movePoints[0];\r\n            let movePoint1 = movePoints[1];\r\n            if (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\r\n                movePoint0 = plotContainer.toLocal(movePoint0);\r\n                movePoint1 = plotContainer.toLocal(movePoint1);\r\n                downPoint0 = plotContainer.toLocal(downPoint0);\r\n                downPoint1 = plotContainer.toLocal(downPoint1);\r\n                if (this.get(\"pinchZoomX\")) {\r\n                    const downStartX = this._downStartX;\r\n                    const downEndX = this._downEndX;\r\n                    if (downStartX != null && downEndX != null) {\r\n                        if (downPoint0.x > downPoint1.x) {\r\n                            [downPoint0, downPoint1] = [downPoint1, downPoint0];\r\n                            [movePoint0, movePoint1] = [movePoint1, movePoint0];\r\n                        }\r\n                        let downPos0 = downStartX + (downPoint0.x / w) * (downEndX - downStartX);\r\n                        let downPos1 = downStartX + (downPoint1.x / w) * (downEndX - downStartX);\r\n                        let movePos0 = downStartX + (movePoint0.x / w) * (downEndX - downStartX);\r\n                        let movePos1 = downStartX + (movePoint1.x / w) * (downEndX - downStartX);\r\n                        let initialDistance = Math.max(0.001, downPos1 - downPos0);\r\n                        let currentDistance = Math.max(0.001, movePos1 - movePos0);\r\n                        let d = initialDistance / currentDistance;\r\n                        let s = downStartX * d + downPos0 - movePos0 * d;\r\n                        let e = downEndX * d + downPos1 - movePos1 * d;\r\n                        this.xAxes.each((xAxis) => {\r\n                            let sa = xAxis.fixPosition(s);\r\n                            let ea = xAxis.fixPosition(e);\r\n                            xAxis.zoom(sa, ea, 0);\r\n                        });\r\n                    }\r\n                }\r\n                if (this.get(\"pinchZoomY\")) {\r\n                    const downStartY = this._downStartY;\r\n                    const downEndY = this._downEndY;\r\n                    if (downStartY != null && downEndY != null) {\r\n                        if (downPoint0.y < downPoint1.y) {\r\n                            [downPoint0, downPoint1] = [downPoint1, downPoint0];\r\n                            [movePoint0, movePoint1] = [movePoint1, movePoint0];\r\n                        }\r\n                        let downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\r\n                        let downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\r\n                        let movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\r\n                        let movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\r\n                        let initialDistance = Math.max(0.001, downPos1 - downPos0);\r\n                        let currentDistance = Math.max(0.001, movePos1 - movePos0);\r\n                        let d = initialDistance / currentDistance;\r\n                        let s = downStartY * d + downPos0 - movePos0 * d;\r\n                        let e = downEndY * d + downPos1 - movePos1 * d;\r\n                        this.yAxes.each((yAxis) => {\r\n                            let sa = yAxis.fixPosition(s);\r\n                            let ea = yAxis.fixPosition(e);\r\n                            yAxis.zoom(sa, ea, 0);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleCursorPosition() {\r\n        const cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            const cursorPoint = cursor.getPrivate(\"point\");\r\n            let snapToSeries = cursor.get(\"snapToSeries\");\r\n            if (cursor._downPoint) {\r\n                snapToSeries = undefined;\r\n            }\r\n            if (snapToSeries && cursorPoint) {\r\n                const snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\r\n                const dataItems = [];\r\n                $array.each(snapToSeries, (series) => {\r\n                    if (!series.isHidden() && !series.isHiding()) {\r\n                        if (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\r\n                            const startIndex = series.startIndex();\r\n                            const endIndex = series.endIndex();\r\n                            for (let i = startIndex; i < endIndex; i++) {\r\n                                const dataItem = series.dataItems[i];\r\n                                if (dataItem && !dataItem.isHidden()) {\r\n                                    dataItems.push(dataItem);\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            const tooltipDataItem = series.get(\"tooltipDataItem\");\r\n                            if (tooltipDataItem) {\r\n                                dataItems.push(tooltipDataItem);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                let minDistance = Infinity;\r\n                let closestItem;\r\n                $array.each(dataItems, (dataItem) => {\r\n                    const point = dataItem.get(\"point\");\r\n                    if (point) {\r\n                        let distance = 0;\r\n                        if (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\r\n                            distance = Math.abs(cursorPoint.x - point.x);\r\n                        }\r\n                        else if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\r\n                            distance = Math.abs(cursorPoint.y - point.y);\r\n                        }\r\n                        else {\r\n                            distance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\r\n                        }\r\n                        if (distance < minDistance) {\r\n                            minDistance = distance;\r\n                            closestItem = dataItem;\r\n                        }\r\n                    }\r\n                });\r\n                $array.each(snapToSeries, (series) => {\r\n                    const tooltip = series.get(\"tooltip\");\r\n                    if (tooltip) {\r\n                        tooltip._setDataItem(undefined);\r\n                    }\r\n                });\r\n                if (closestItem) {\r\n                    let series = closestItem.component;\r\n                    series.showDataItemTooltip(closestItem);\r\n                    const point = closestItem.get(\"point\");\r\n                    if (point) {\r\n                        // removing x and y to solve #72225\r\n                        cursor.handleMove(series.toGlobal({ x: point.x - series.x(), y: point.y - series.y() }), true);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateCursor() {\r\n        let cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            cursor.handleMove();\r\n        }\r\n    }\r\n    _addCursor(cursor) {\r\n        this.plotContainer.children.push(cursor);\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        this.series.each((series) => {\r\n            this._colorize(series);\r\n        });\r\n        if (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\r\n            this._handleSetWheel();\r\n        }\r\n        if (this.isDirty(\"cursor\")) {\r\n            const previous = this._prevSettings.cursor;\r\n            const cursor = this.get(\"cursor\");\r\n            if (cursor !== previous) {\r\n                this._disposeProperty(\"cursor\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (cursor) {\r\n                    cursor._setChart(this);\r\n                    this._addCursor(cursor);\r\n                    this._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\r\n                        this._handleCursorSelectEnd();\r\n                    }));\r\n                }\r\n                //this.setRaw(\"cursor\", cursor) // to reset previous value\r\n                this._prevSettings.cursor = cursor;\r\n            }\r\n        }\r\n        if (this.isDirty(\"scrollbarX\")) {\r\n            const previous = this._prevSettings.scrollbarX;\r\n            const scrollbarX = this.get(\"scrollbarX\");\r\n            if (scrollbarX !== previous) {\r\n                this._disposeProperty(\"scrollbarX\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (scrollbarX) {\r\n                    if (!scrollbarX.parent) {\r\n                        this.topAxesContainer.children.push(scrollbarX);\r\n                    }\r\n                    this._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\r\n                        this._handleScrollbar(this.xAxes, e.start, e.end, e.grip);\r\n                    }));\r\n                    // Used to populate `ariaLabel` with meaningful values\r\n                    scrollbarX.setPrivate(\"positionTextFunction\", (position) => {\r\n                        const axis = this.xAxes.getIndex(0);\r\n                        return axis ? axis.getTooltipText(position) || \"\" : \"\";\r\n                    });\r\n                }\r\n                this._prevSettings.scrollbarX = scrollbarX;\r\n            }\r\n        }\r\n        if (this.isDirty(\"scrollbarY\")) {\r\n            const previous = this._prevSettings.scrollbarY;\r\n            const scrollbarY = this.get(\"scrollbarY\");\r\n            if (scrollbarY !== previous) {\r\n                this._disposeProperty(\"scrollbarY\");\r\n                if (previous) {\r\n                    previous.dispose();\r\n                }\r\n                if (scrollbarY) {\r\n                    if (!scrollbarY.parent) {\r\n                        this.rightAxesContainer.children.push(scrollbarY);\r\n                    }\r\n                    this._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\r\n                        this._handleScrollbar(this.yAxes, e.start, e.end, e.grip);\r\n                    }));\r\n                    // Used to populate `ariaLabel` with meaningful values\r\n                    scrollbarY.setPrivate(\"positionTextFunction\", (position) => {\r\n                        const axis = this.yAxes.getIndex(0);\r\n                        return axis ? axis.getTooltipText(position) || \"\" : \"\";\r\n                    });\r\n                }\r\n                this._prevSettings.scrollbarY = scrollbarY;\r\n            }\r\n        }\r\n        this._handleZoomOut();\r\n    }\r\n    _processSeries(series) {\r\n        super._processSeries(series);\r\n        this._colorize(series);\r\n    }\r\n    _colorize(series) {\r\n        const colorSet = this.get(\"colors\");\r\n        if (colorSet) {\r\n            if (series.get(\"fill\") == null) {\r\n                const color = colorSet.next();\r\n                series._setSoft(\"stroke\", color);\r\n                series._setSoft(\"fill\", color);\r\n            }\r\n        }\r\n    }\r\n    _handleCursorSelectEnd() {\r\n        const cursor = this.get(\"cursor\");\r\n        const behavior = cursor.get(\"behavior\");\r\n        const downPositionX = cursor.getPrivate(\"downPositionX\", 0);\r\n        const downPositionY = cursor.getPrivate(\"downPositionY\", 0);\r\n        const positionX = cursor.getPrivate(\"positionX\", 0.5);\r\n        const positionY = cursor.getPrivate(\"positionY\", 0.5);\r\n        this.xAxes.each((axis) => {\r\n            if (behavior === \"zoomX\" || behavior === \"zoomXY\") {\r\n                let position0 = axis.toAxisPosition(downPositionX);\r\n                let position1 = axis.toAxisPosition(positionX);\r\n                axis.zoom(position0, position1);\r\n            }\r\n            axis.setPrivate(\"updateScrollbar\", true);\r\n        });\r\n        this.yAxes.each((axis) => {\r\n            if (behavior === \"zoomY\" || behavior === \"zoomXY\") {\r\n                let position0 = axis.toAxisPosition(downPositionY);\r\n                let position1 = axis.toAxisPosition(positionY);\r\n                axis.zoom(position0, position1);\r\n            }\r\n            axis.setPrivate(\"updateScrollbar\", true);\r\n        });\r\n    }\r\n    _handleScrollbar(axes, start, end, priority) {\r\n        axes.each((axis) => {\r\n            let axisStart = axis.fixPosition(start);\r\n            let axisEnd = axis.fixPosition(end);\r\n            let zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\r\n            const updateScrollbar = \"updateScrollbar\";\r\n            axis.setPrivateRaw(updateScrollbar, false);\r\n            if (zoomAnimation) {\r\n                zoomAnimation.events.on(\"stopped\", () => {\r\n                    axis.setPrivateRaw(updateScrollbar, true);\r\n                });\r\n            }\r\n            else {\r\n                axis.setPrivateRaw(updateScrollbar, true);\r\n            }\r\n        });\r\n    }\r\n    _processAxis(axes, container) {\r\n        return axes.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (axis) => {\r\n                    this._removeAxis(axis);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                container.children.push(change.newValue);\r\n                change.newValue.processChart(this);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                container.children.setIndex(change.index, change.newValue);\r\n                change.newValue.processChart(this);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                container.children.insertIndex(change.index, change.newValue);\r\n                change.newValue.processChart(this);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._removeAxis(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                container.children.moveValue(change.value, change.newIndex);\r\n                change.value.processChart(this);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        });\r\n    }\r\n    _removeAxis(axis) {\r\n        if (!axis.isDisposed()) {\r\n            const axisParent = axis.parent;\r\n            if (axisParent) {\r\n                axisParent.children.removeValue(axis);\r\n            }\r\n            const gridContainer = axis.gridContainer;\r\n            const gridParent = gridContainer.parent;\r\n            if (gridParent) {\r\n                gridParent.children.removeValue(gridContainer);\r\n            }\r\n            const topGridContainer = axis.topGridContainer;\r\n            const topGridParent = topGridContainer.parent;\r\n            if (topGridParent) {\r\n                topGridParent.children.removeValue(topGridContainer);\r\n            }\r\n        }\r\n    }\r\n    _updateChartLayout() {\r\n        const left = this.leftAxesContainer.width();\r\n        const right = this.rightAxesContainer.width();\r\n        const bottomAxesContainer = this.bottomAxesContainer;\r\n        bottomAxesContainer.set(\"paddingLeft\", left);\r\n        bottomAxesContainer.set(\"paddingRight\", right);\r\n        const topAxesContainer = this.topAxesContainer;\r\n        topAxesContainer.set(\"paddingLeft\", left);\r\n        topAxesContainer.set(\"paddingRight\", right);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processAxis(_axis) { }\r\n    ;\r\n    _handleAxisSelection(axis, force) {\r\n        let start = axis.fixPosition(axis.get(\"start\", 0));\r\n        let end = axis.fixPosition(axis.get(\"end\", 1));\r\n        if (start > end) {\r\n            [start, end] = [end, start];\r\n        }\r\n        if (this.xAxes.indexOf(axis) != -1) {\r\n            if (force || axis.getPrivate(\"updateScrollbar\")) {\r\n                let scrollbarX = this.get(\"scrollbarX\");\r\n                if (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\r\n                    scrollbarX.setRaw(\"start\", start);\r\n                    scrollbarX.setRaw(\"end\", end);\r\n                    scrollbarX.updateGrips();\r\n                }\r\n            }\r\n        }\r\n        else if (this.yAxes.indexOf(axis) != -1) {\r\n            if (force || axis.getPrivate(\"updateScrollbar\")) {\r\n                let scrollbarY = this.get(\"scrollbarY\");\r\n                if (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\r\n                    scrollbarY.setRaw(\"start\", start);\r\n                    scrollbarY.setRaw(\"end\", end);\r\n                    scrollbarY.updateGrips();\r\n                }\r\n            }\r\n        }\r\n        this._handleZoomOut();\r\n    }\r\n    _handleZoomOut() {\r\n        let zoomOutButton = this.zoomOutButton;\r\n        if (zoomOutButton && zoomOutButton.parent) {\r\n            let visible = false;\r\n            this.xAxes.each((axis) => {\r\n                if (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\r\n                    visible = true;\r\n                }\r\n            });\r\n            this.yAxes.each((axis) => {\r\n                if (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\r\n                    visible = true;\r\n                }\r\n            });\r\n            if (visible) {\r\n                if (zoomOutButton.isHidden()) {\r\n                    zoomOutButton.show();\r\n                }\r\n            }\r\n            else {\r\n                zoomOutButton.hide();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Checks if point is within plot area.\r\n     *\r\n     * @param   point  Reference point\r\n     * @return         Is within plot area?\r\n     */\r\n    inPlot(point) {\r\n        const plotContainer = this.plotContainer;\r\n        const otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\r\n        const global = plotContainer.toGlobal(point);\r\n        if (point.x >= -0.5 && point.y >= -0.5 && point.x <= plotContainer.width() + 0.5 && point.y <= plotContainer.height() + 0.5) {\r\n            return true;\r\n        }\r\n        if (otherCharts) {\r\n            for (let i = otherCharts.length - 1; i >= 0; i--) {\r\n                const chart = otherCharts[i];\r\n                if (chart != this) {\r\n                    const chartPlotContainer = chart.plotContainer;\r\n                    const documentPoint = this._root.rootPointToDocument(global);\r\n                    const chartRoot = chart._root.documentPointToRoot(documentPoint);\r\n                    const local = chartPlotContainer.toLocal(chartRoot);\r\n                    if (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    arrangeTooltips() {\r\n        const plotContainer = this.plotContainer;\r\n        const w = plotContainer.width();\r\n        const h = plotContainer.height();\r\n        const hh = this.height();\r\n        let plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\r\n        let plotB = plotContainer._display.toGlobal({ x: w, y: h });\r\n        const tooltips = [];\r\n        let sum = 0;\r\n        let minDistance = Infinity;\r\n        let movePoint = this._movePoint;\r\n        let maxTooltipDistance = this.get(\"maxTooltipDistance\");\r\n        let maxTooltipDistanceBy = this.get(\"maxTooltipDistanceBy\", \"xy\");\r\n        let closest;\r\n        let closestPoint;\r\n        if ($type.isNumber(maxTooltipDistance)) {\r\n            this.series.each((series) => {\r\n                const tooltip = series.get(\"tooltip\");\r\n                if (tooltip) {\r\n                    let point = tooltip.get(\"pointTo\");\r\n                    if (point) {\r\n                        let distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\r\n                        if (maxTooltipDistanceBy == \"x\") {\r\n                            distance = Math.abs(movePoint.x - point.x);\r\n                        }\r\n                        else if (maxTooltipDistanceBy == \"y\") {\r\n                            distance = Math.abs(movePoint.y - point.y);\r\n                        }\r\n                        if (distance < minDistance) {\r\n                            minDistance = distance;\r\n                            closest = series;\r\n                            closestPoint = point;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        const tooltipSeries = [];\r\n        this.series.each((series) => {\r\n            const tooltip = series.get(\"tooltip\");\r\n            if (tooltip) {\r\n                let hidden = false;\r\n                let point = tooltip.get(\"pointTo\");\r\n                if (point) {\r\n                    if (maxTooltipDistance >= 0) {\r\n                        let point = tooltip.get(\"pointTo\");\r\n                        if (point) {\r\n                            if (series != closest) {\r\n                                let distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\r\n                                if (maxTooltipDistanceBy == \"x\") {\r\n                                    distance = Math.abs(closestPoint.x - point.x);\r\n                                }\r\n                                else if (maxTooltipDistanceBy == \"y\") {\r\n                                    distance = Math.abs(closestPoint.y - point.y);\r\n                                }\r\n                                if (distance > maxTooltipDistance) {\r\n                                    hidden = true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (maxTooltipDistance == -1) {\r\n                        if (series != closest) {\r\n                            hidden = true;\r\n                        }\r\n                    }\r\n                    if (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\r\n                        hidden = true;\r\n                    }\r\n                    else {\r\n                        if (!hidden) {\r\n                            sum += point.y;\r\n                        }\r\n                    }\r\n                    if (hidden || series.isHidden() || series.isHiding()) {\r\n                        tooltip.hide(0);\r\n                    }\r\n                    else {\r\n                        tooltip.show();\r\n                        tooltips.push(tooltip);\r\n                        tooltipSeries.push(series);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.setPrivate(\"tooltipSeries\", tooltipSeries);\r\n        if (this.get(\"arrangeTooltips\")) {\r\n            const tooltipContainer = this._root.tooltipContainer;\r\n            const count = tooltips.length;\r\n            const average = sum / count;\r\n            if (average > h / 2 + plotT.y) {\r\n                tooltips.sort((a, b) => $order.compareNumber(b.get(\"pointTo\").y, a.get(\"pointTo\").y));\r\n                let prevY = plotB.y;\r\n                $array.each(tooltips, (tooltip) => {\r\n                    let height = tooltip.height();\r\n                    let centerY = tooltip.get(\"centerY\");\r\n                    if (centerY instanceof Percent) {\r\n                        height *= centerY.value;\r\n                    }\r\n                    height += tooltip.get(\"marginBottom\", 0);\r\n                    tooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY });\r\n                    tooltip.setPrivate(\"customData\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY });\r\n                    prevY = Math.min(prevY - height, tooltip._fy - height);\r\n                    if (tooltip.parent == tooltipContainer) {\r\n                        tooltipContainer.children.moveValue(tooltip, 0);\r\n                    }\r\n                });\r\n                if (prevY < 0) {\r\n                    tooltips.reverse();\r\n                    let prevBottom = prevY;\r\n                    $array.each(tooltips, (tooltip) => {\r\n                        let bounds = tooltip.get(\"bounds\");\r\n                        if (bounds) {\r\n                            let top = bounds.top - prevY;\r\n                            let bottom = bounds.bottom - prevY;\r\n                            if (top < prevBottom) {\r\n                                top = prevBottom;\r\n                                bottom = top + tooltip.height();\r\n                            }\r\n                            tooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom });\r\n                            prevBottom = bounds.bottom - prevY + tooltip.get(\"marginBottom\", 0);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                tooltips.reverse();\r\n                tooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\").y, b.get(\"pointTo\").y));\r\n                let prevY = 0;\r\n                $array.each(tooltips, (tooltip) => {\r\n                    let height = tooltip.height();\r\n                    let centerY = tooltip.get(\"centerY\");\r\n                    if (centerY instanceof Percent) {\r\n                        height *= centerY.value;\r\n                    }\r\n                    height += tooltip.get(\"marginBottom\", 0);\r\n                    tooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + hh, prevY + height) });\r\n                    if (tooltip.parent == tooltipContainer) {\r\n                        tooltipContainer.children.moveValue(tooltip, 0);\r\n                    }\r\n                    prevY = Math.max(prevY + height, tooltip._fy + height);\r\n                });\r\n                if (prevY > hh) {\r\n                    tooltips.reverse();\r\n                    let prevBottom = hh;\r\n                    $array.each(tooltips, (tooltip) => {\r\n                        let bounds = tooltip.get(\"bounds\");\r\n                        if (bounds) {\r\n                            let top = bounds.top - (hh - prevY);\r\n                            let bottom = bounds.bottom - (hh - prevY);\r\n                            if (bottom > prevBottom) {\r\n                                bottom = prevBottom;\r\n                                top = bottom - tooltip.height();\r\n                            }\r\n                            tooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom });\r\n                            prevBottom = bottom - tooltip.height() - tooltip.get(\"marginBottom\", 0);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _tooltipToLocal(point) {\r\n        return this.plotContainer.toLocal(point);\r\n    }\r\n    /**\r\n     * Fully zooms out the chart.\r\n     */\r\n    zoomOut() {\r\n        this.xAxes.each((axis) => {\r\n            axis.setPrivate(\"updateScrollbar\", true);\r\n            axis.zoom(0, 1);\r\n        });\r\n        this.yAxes.each((axis) => {\r\n            axis.setPrivate(\"updateScrollbar\", true);\r\n            axis.zoom(0, 1);\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(XYChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"XYChart\"\r\n});\r\nObject.defineProperty(XYChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: SerialChart.classNames.concat([XYChart.className])\r\n});\r\n//# sourceMappingURL=XYChart.js.map","import { List } from \"./List\";\r\n/**\r\n * A [[List]] that holds components data.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\r\n */\r\nexport class ListData extends List {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * An optional processor for data.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\r\n         */\r\n        Object.defineProperty(this, \"processor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    incrementRef() { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    decrementRef() { }\r\n    _onPush(newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n            //console.log(newValue)\r\n        }\r\n        super._onPush(newValue);\r\n    }\r\n    _onInsertIndex(index, newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n        }\r\n        super._onInsertIndex(index, newValue);\r\n    }\r\n    _onSetIndex(index, oldValue, newValue) {\r\n        if (this.processor) {\r\n            this.processor.processRow(newValue);\r\n        }\r\n        super._onSetIndex(index, oldValue, newValue);\r\n    }\r\n}\r\n/**\r\n * @deprecated\r\n * @todo remove\r\n */\r\nexport class JsonData {\r\n    constructor(value) {\r\n        Object.defineProperty(this, \"processor\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_value\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this._value = value;\r\n    }\r\n    incrementRef() { }\r\n    decrementRef() { }\r\n}\r\n//# sourceMappingURL=Data.js.map","import { __awaiter } from \"tslib\";\r\nimport { Settings } from \"../util/Entity\";\r\nimport { Container } from \"./Container\";\r\nimport { ListData } from \"../util/Data\";\r\nimport * as $array from \"../util/Array\";\r\nimport * as $object from \"../util/Object\";\r\n/**\r\n * A base element that holds data bit (data item) for any [[Component]].\r\n */\r\nexport class DataItem extends Settings {\r\n    constructor(component, dataContext, settings) {\r\n        super(settings);\r\n        /**\r\n         * A data item's owener [[Component]].\r\n         */\r\n        Object.defineProperty(this, \"component\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A reference to actual item in source data this item is based on.\r\n         */\r\n        Object.defineProperty(this, \"dataContext\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * @todo requires description\r\n         */\r\n        Object.defineProperty(this, \"bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A set of \"open\" values.\r\n         */\r\n        Object.defineProperty(this, \"open\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A set of \"close\" values.\r\n         */\r\n        Object.defineProperty(this, \"close\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        this.dataContext = dataContext;\r\n        this.component = component;\r\n        this._settings.visible = true;\r\n        this._checkDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirty() {\r\n        this.component.markDirtyValues(this);\r\n    }\r\n    _startAnimation() {\r\n        this.component._root._addAnimation(this);\r\n    }\r\n    _animationTime() {\r\n        return this.component._root.animationTime;\r\n    }\r\n    _dispose() {\r\n        if (this.component) {\r\n            this.component.disposeDataItem(this);\r\n        }\r\n        super._dispose();\r\n    }\r\n    /**\r\n     * Shows a data item that's currently hidden.\r\n     */\r\n    show(duration) {\r\n        this.setRaw(\"visible\", true);\r\n        if (this.component) {\r\n            this.component.showDataItem(this, duration);\r\n        }\r\n    }\r\n    /**\r\n     * Hides a data item that's currently visible.\r\n     */\r\n    hide(duration) {\r\n        this.setRaw(\"visible\", false);\r\n        if (this.component) {\r\n            this.component.hideDataItem(this, duration);\r\n        }\r\n    }\r\n    isHidden() {\r\n        return !this.get(\"visible\");\r\n    }\r\n}\r\n/**\r\n * A base class for elements that make use of data.\r\n */\r\nexport class Component extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_data\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListData()\r\n        });\r\n        Object.defineProperty(this, \"_dataItems\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_mainDataItems\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._dataItems\r\n        });\r\n        Object.defineProperty(this, \"valueFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"fields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\"id\"]\r\n        });\r\n        Object.defineProperty(this, \"_valueFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valueFieldsF\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_fieldsF\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valuesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataChanged\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataGrouped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * Indicates if the component has already been initialized.\r\n         */\r\n        Object.defineProperty(this, \"inited\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    /**\r\n     * Component's data.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\r\n     */\r\n    set data(data) {\r\n        data.incrementRef();\r\n        this._data.decrementRef();\r\n        this._data = data;\r\n    }\r\n    /**\r\n     * @return  Data\r\n     */\r\n    get data() {\r\n        return this._data;\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this._data.decrementRef();\r\n    }\r\n    _onDataClear() {\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this._data.incrementRef();\r\n        this._updateFields();\r\n        this._disposers.push(this.data.events.onAll((change) => {\r\n            const dataItems = this._mainDataItems;\r\n            this.markDirtyValues();\r\n            this._markDirtyGroup();\r\n            this._dataChanged = true;\r\n            if (change.type === \"clear\") {\r\n                $array.each(dataItems, (dataItem) => {\r\n                    dataItem.dispose();\r\n                });\r\n                dataItems.length = 0;\r\n                this._onDataClear();\r\n            }\r\n            else if (change.type === \"push\") {\r\n                const dataItem = new DataItem(this, change.newValue, this._makeDataItem(change.newValue));\r\n                dataItems.push(dataItem);\r\n                this.processDataItem(dataItem);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                const dataItem = dataItems[change.index];\r\n                const properties = this._makeDataItem(change.newValue);\r\n                $object.keys(properties).forEach((key) => {\r\n                    dataItem.animate({\r\n                        key: key,\r\n                        to: properties[key],\r\n                        duration: this.get(\"interpolationDuration\", 0),\r\n                        easing: this.get(\"interpolationEasing\"),\r\n                    });\r\n                });\r\n                dataItem.dataContext = change.newValue;\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                const dataItem = new DataItem(this, change.newValue, this._makeDataItem(change.newValue));\r\n                dataItems.splice(change.index, 0, dataItem);\r\n                this.processDataItem(dataItem);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                const dataItem = dataItems[change.index];\r\n                dataItem.dispose();\r\n                dataItems.splice(change.index, 1);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                const dataItem = dataItems[change.oldIndex];\r\n                dataItems.splice(change.oldIndex, 1);\r\n                dataItems.splice(change.newIndex, 0, dataItem);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IStreamEvent type\");\r\n            }\r\n            this._afterDataChange();\r\n        }));\r\n    }\r\n    _updateFields() {\r\n        if (this.valueFields) {\r\n            this._valueFields = [];\r\n            this._valueFieldsF = {};\r\n            $array.each(this.valueFields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._valueFields.push(key);\r\n                    this._valueFieldsF[key] = { fieldKey: key + \"Field\", workingKey: key + \"Working\" };\r\n                }\r\n            });\r\n        }\r\n        if (this.fields) {\r\n            this._fields = [];\r\n            this._fieldsF = {};\r\n            $array.each(this.fields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._fields.push(key);\r\n                    this._fieldsF[key] = key + \"Field\";\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * A list of component's data items.\r\n     *\r\n     * @return  Data items\r\n     */\r\n    get dataItems() {\r\n        return this._dataItems;\r\n    }\r\n    processDataItem(_dataItem) { }\r\n    _makeDataItem(data) {\r\n        //const output: this[\"_dataItemSettings\"] = {};\r\n        const output = {}; // temporary to solve error\r\n        if (this._valueFields) {\r\n            $array.each(this._valueFields, (key) => {\r\n                const field = this.get((this._valueFieldsF[key].fieldKey));\r\n                output[key] = data[field];\r\n                output[this._valueFieldsF[key].workingKey] = output[key];\r\n            });\r\n        }\r\n        if (this._fields) {\r\n            $array.each(this._fields, (key) => {\r\n                const field = this.get((this._fieldsF[key]));\r\n                output[key] = data[field];\r\n            });\r\n        }\r\n        return output;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeDataItem(data) {\r\n        let dataItem = new DataItem(this, undefined, data);\r\n        this.processDataItem(dataItem);\r\n        return dataItem;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    pushDataItem(data) {\r\n        const dataItem = this.makeDataItem(data);\r\n        this._mainDataItems.push(dataItem);\r\n        return dataItem;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(_dataItem) {\r\n    }\r\n    /**\r\n     * Shows component's data item.\r\n     *\r\n     * @param   dataItem   Data item\r\n     * @param   _duration  Animation duration in milliseconds\r\n     * @return             Promise\r\n     */\r\n    showDataItem(dataItem, _duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            dataItem.set(\"visible\", true);\r\n        });\r\n    }\r\n    /**\r\n     * Hides component's data item.\r\n     *\r\n     * @param   dataItem   Data item\r\n     * @param   _duration  Animation duration in milliseconds\r\n     * @return             Promise\r\n     */\r\n    hideDataItem(dataItem, _duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            dataItem.set(\"visible\", false);\r\n        });\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._valuesDirty = false;\r\n    }\r\n    _afterDataChange() {\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        if (this._dataChanged) {\r\n            const type = \"datavalidated\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this });\r\n            }\r\n            this._dataChanged = false;\r\n        }\r\n        this.inited = true;\r\n    }\r\n    /**\r\n     * Forces a repaint of the element which relies on data.\r\n     *\r\n     * @since 5.0.21\r\n     */\r\n    markDirtyValues(_dataItem) {\r\n        this.markDirty();\r\n        this._valuesDirty = true;\r\n    }\r\n    _markDirtyGroup() {\r\n        this._dataGrouped = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySize() {\r\n        this._sizeDirty = true;\r\n        this.markDirty();\r\n    }\r\n}\r\nObject.defineProperty(Component, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Component\"\r\n});\r\nObject.defineProperty(Component, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([Component.className])\r\n});\r\n//# sourceMappingURL=Component.js.map","import { DataItem } from \"../../../core/render/Component\";\r\nimport { Component } from \"../../../core/render/Component\";\r\nimport { Container } from \"../../../core/render/Container\";\r\nimport { p100 } from \"../../../core/util/Percent\";\r\nimport { List } from \"../../../core/util/List\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * A base class for all axes.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\r\n */\r\nexport class Axis extends Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_series\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_isPanning\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A [[Container]] that holds all the axis label elements.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"labelsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {}))\r\n        });\r\n        /**\r\n         * A [[Container]] that holds all the axis grid and fill elements.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"gridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100 })\r\n        });\r\n        /**\r\n         * A [[Container]] that holds axis grid elements which goes above the series.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"topGridContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100 })\r\n        });\r\n        /**\r\n         * A [[Container]] that holds all the axis bullet elements.\r\n         *\r\n         * @default new Container\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }))\r\n        });\r\n        /**\r\n         * A referenece to the the chart the axis belongs to.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_rangesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_panStart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_panEnd\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_sAnimation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_eAnimation\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_skipSync\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A list of axis ranges.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n         * @default new List()\r\n         */\r\n        Object.defineProperty(this, \"axisRanges\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new List()\r\n        });\r\n        Object.defineProperty(this, \"_seriesAxisRanges\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * A control label that is invisible but is used to keep width the width of\r\n         * the axis constant.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\r\n         */\r\n        Object.defineProperty(this, \"ghostLabel\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_cursorPosition\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: -1\r\n        });\r\n        Object.defineProperty(this, \"_snapToSeries\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_seriesValuesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A container above the axis that can be used to add additional stuff into\r\n         * it. For example a legend, label, or an icon.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\r\n         * @default new Container\r\n         */\r\n        Object.defineProperty(this, \"axisHeader\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {\r\n                themeTags: [\"axis\", \"header\"],\r\n                position: \"absolute\",\r\n                background: Rectangle.new(this._root, {\r\n                    themeTags: [\"header\", \"background\"],\r\n                    fill: this._root.interfaceColors.get(\"background\")\r\n                })\r\n            }))\r\n        });\r\n        Object.defineProperty(this, \"_bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n    }\r\n    _dispose() {\r\n        // these could be in other parents, so disposing just in case\r\n        this.gridContainer.dispose();\r\n        this.topGridContainer.dispose();\r\n        this.bulletsContainer.dispose();\r\n        this.labelsContainer.dispose();\r\n        this.axisHeader.dispose();\r\n        super._dispose();\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.setPrivate(\"updateScrollbar\", true);\r\n        this._disposers.push(this.axisRanges.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (dataItem) => {\r\n                    this.disposeDataItem(dataItem);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._processAxisRange(change.newValue, [\"range\"]);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._processAxisRange(change.newValue, [\"range\"]);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._processAxisRange(change.newValue, [\"range\"]);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this.disposeDataItem(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._processAxisRange(change.value, [\"range\"]);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IStreamEvent type\");\r\n            }\r\n        }));\r\n        const renderer = this.get(\"renderer\");\r\n        if (renderer) {\r\n            renderer.axis = this;\r\n            renderer.processAxis();\r\n        }\r\n        this.children.push(renderer);\r\n        this.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\r\n        this.ghostLabel.adapters.disable(\"text\");\r\n        this.ghostLabel.set(\"opacity\", 0);\r\n    }\r\n    /**\r\n     * Zooms the axis to relative locations.\r\n     *\r\n     * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\r\n     *\r\n     * @param   start     Relative start\r\n     * @param   end       Relative end\r\n     * @param   duration  Duration of the zoom animation in milliseconds\r\n     * @return            Zoom animation\r\n     */\r\n    zoom(start, end, duration, priority) {\r\n        if (this.get(\"start\") !== start || this.get(\"end\") != end) {\r\n            let sAnimation = this._sAnimation;\r\n            let eAnimation = this._eAnimation;\r\n            let maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\r\n            if (start < -maxDeviation) {\r\n                start = -maxDeviation;\r\n            }\r\n            if (end > 1 + maxDeviation) {\r\n                end = 1 + maxDeviation;\r\n            }\r\n            if (start > end) {\r\n                [start, end] = [end, start];\r\n            }\r\n            if (!$type.isNumber(duration)) {\r\n                duration = this.get(\"interpolationDuration\", 0);\r\n            }\r\n            if (!priority) {\r\n                priority = \"end\";\r\n            }\r\n            let maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\r\n            let maxZoomFactorReal = maxZoomFactor;\r\n            if (end === 1 && start !== 0) {\r\n                if (start < this.get(\"start\")) {\r\n                    priority = \"start\";\r\n                }\r\n                else {\r\n                    priority = \"end\";\r\n                }\r\n            }\r\n            if (start === 0 && end !== 1) {\r\n                if (end > this.get(\"end\")) {\r\n                    priority = \"end\";\r\n                }\r\n                else {\r\n                    priority = \"start\";\r\n                }\r\n            }\r\n            let minZoomCount = this.get(\"minZoomCount\");\r\n            let maxZoomCount = this.get(\"maxZoomCount\");\r\n            if ($type.isNumber(minZoomCount)) {\r\n                maxZoomFactor = maxZoomFactorReal / minZoomCount;\r\n            }\r\n            let minZoomFactor = 1;\r\n            if ($type.isNumber(maxZoomCount)) {\r\n                minZoomFactor = maxZoomFactorReal / maxZoomCount;\r\n            }\r\n            // most likely we are dragging left scrollbar grip here, so we tend to modify end\r\n            if (priority === \"start\") {\r\n                if (maxZoomCount > 0) {\r\n                    // add to the end\r\n                    if (1 / (end - start) < minZoomFactor) {\r\n                        end = start + 1 / minZoomFactor;\r\n                    }\r\n                }\r\n                // add to the end\r\n                if (1 / (end - start) > maxZoomFactor) {\r\n                    end = start + 1 / maxZoomFactor;\r\n                }\r\n                //unless end is > 0\r\n                if (end > 1 && end - start < 1 / maxZoomFactor) {\r\n                    //end = 1;\r\n                    start = end - 1 / maxZoomFactor;\r\n                }\r\n            }\r\n            // most likely we are dragging right, so we modify left\r\n            else {\r\n                if (maxZoomCount > 0) {\r\n                    // add to the end\r\n                    if (1 / (end - start) < minZoomFactor) {\r\n                        start = end - 1 / minZoomFactor;\r\n                    }\r\n                }\r\n                // remove from start\r\n                if (1 / (end - start) > maxZoomFactor) {\r\n                    start = end - 1 / maxZoomFactor;\r\n                }\r\n                if (start < 0 && end - start < 1 / maxZoomFactor) {\r\n                    //start = 0;\r\n                    end = start + 1 / maxZoomFactor;\r\n                }\r\n            }\r\n            if (1 / (end - start) > maxZoomFactor) {\r\n                end = start + 1 / maxZoomFactor;\r\n            }\r\n            if (1 / (end - start) > maxZoomFactor) {\r\n                start = end - 1 / maxZoomFactor;\r\n            }\r\n            if (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\r\n                const chart = this.chart;\r\n                if (chart) {\r\n                    chart._handleAxisSelection(this, true);\r\n                }\r\n            }\r\n            if (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\r\n                return;\r\n            }\r\n            if (duration > 0) {\r\n                let easing = this.get(\"interpolationEasing\");\r\n                let sAnimation, eAnimation;\r\n                if (this.get(\"start\") != start) {\r\n                    sAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\r\n                }\r\n                if (this.get(\"end\") != end) {\r\n                    eAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\r\n                }\r\n                this._sAnimation = sAnimation;\r\n                this._eAnimation = eAnimation;\r\n                if (sAnimation) {\r\n                    return sAnimation;\r\n                }\r\n                else if (eAnimation) {\r\n                    return eAnimation;\r\n                }\r\n            }\r\n            else {\r\n                this.set(\"start\", start);\r\n                this.set(\"end\", end);\r\n                // otherwise bullets and line out of sync, as series is not redrawn\r\n                this._root.events.once(\"frameended\", () => {\r\n                    this._markDirtyKey(\"start\");\r\n                    this._root._markDirty();\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            if (this._sAnimation) {\r\n                this._sAnimation.stop();\r\n            }\r\n            if (this._eAnimation) {\r\n                this._eAnimation.stop();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * A list of series using this axis.\r\n     *\r\n     * @return Series\r\n     */\r\n    get series() {\r\n        return this._series;\r\n    }\r\n    _processAxisRange(dataItem, themeTags) {\r\n        dataItem.setRaw(\"isRange\", true);\r\n        this._createAssets(dataItem, themeTags);\r\n        this._rangesDirty = true;\r\n        this._prepareDataItem(dataItem);\r\n        const above = dataItem.get(\"above\");\r\n        const container = this.topGridContainer;\r\n        const grid = dataItem.get(\"grid\");\r\n        if (above && grid) {\r\n            container.children.moveValue(grid);\r\n        }\r\n        const fill = dataItem.get(\"axisFill\");\r\n        if (above && fill) {\r\n            container.children.moveValue(fill);\r\n        }\r\n    }\r\n    _prepareDataItem(_dataItem, _index) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyExtremes() {\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySelectionExtremes() {\r\n    }\r\n    _calculateTotals() {\r\n    }\r\n    _updateAxisRanges() {\r\n        this._bullets = {};\r\n        this.axisRanges.each((axisRange) => {\r\n            this._prepareDataItem(axisRange);\r\n        });\r\n        $array.each(this._seriesAxisRanges, (axisRange) => {\r\n            this._prepareDataItem(axisRange);\r\n        });\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.get(\"fixAxisSize\")) {\r\n            this.ghostLabel.set(\"visible\", true);\r\n        }\r\n        else {\r\n            this.ghostLabel.set(\"visible\", false);\r\n        }\r\n        if (this.isDirty(\"start\") || this.isDirty(\"end\")) {\r\n            this.chart._updateCursor();\r\n            let start = this.get(\"start\", 0);\r\n            let end = this.get(\"end\", 1);\r\n            let maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\r\n            if (start < -maxDeviation) {\r\n                let delta = start + maxDeviation;\r\n                start = -maxDeviation;\r\n                this.setRaw(\"start\", start);\r\n                if (this.isDirty(\"end\")) {\r\n                    this.setRaw(\"end\", end - delta);\r\n                }\r\n            }\r\n            if (end > 1 + maxDeviation) {\r\n                let delta = end - 1 - maxDeviation;\r\n                end = 1 + maxDeviation;\r\n                this.setRaw(\"end\", end);\r\n                if (this.isDirty(\"start\")) {\r\n                    this.setRaw(\"start\", start - delta);\r\n                }\r\n            }\r\n        }\r\n        const renderer = this.get(\"renderer\");\r\n        renderer._start = this.get(\"start\");\r\n        renderer._end = this.get(\"end\");\r\n        renderer._inversed = renderer.get(\"inversed\", false);\r\n        renderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\r\n        renderer._updateLC();\r\n        if (this.isDirty(\"tooltip\")) {\r\n            const tooltip = this.get(\"tooltip\");\r\n            if (tooltip) {\r\n                const rendererTags = renderer.get(\"themeTags\");\r\n                tooltip.addTag(\"axis\");\r\n                tooltip.addTag(this.className.toLowerCase());\r\n                tooltip._applyThemes();\r\n                if (rendererTags) {\r\n                    tooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\r\n                    tooltip.label._applyThemes();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateTooltipBounds() {\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            this.get(\"renderer\").updateTooltipBounds(tooltip);\r\n        }\r\n    }\r\n    _updateBounds() {\r\n        super._updateBounds();\r\n        this._updateTooltipBounds();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processChart(chart) {\r\n        this.chart = chart;\r\n        const renderer = this.get(\"renderer\");\r\n        renderer.chart = chart;\r\n        chart.gridContainer.children.push(this.gridContainer);\r\n        chart.topGridContainer.children.push(this.topGridContainer);\r\n        chart.axisHeadersContainer.children.push(this.axisHeader);\r\n        this.on(\"start\", () => {\r\n            chart._handleAxisSelection(this);\r\n        });\r\n        this.on(\"end\", () => {\r\n            chart._handleAxisSelection(this);\r\n        });\r\n        chart.plotContainer.onPrivate(\"width\", () => {\r\n            this.markDirtySize();\r\n        });\r\n        chart.plotContainer.onPrivate(\"height\", () => {\r\n            this.markDirtySize();\r\n        });\r\n        chart.processAxis(this);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    hideDataItem(dataItem) {\r\n        this._toggleDataItem(dataItem, false);\r\n        return super.hideDataItem(dataItem);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    showDataItem(dataItem) {\r\n        this._toggleDataItem(dataItem, true);\r\n        return super.showDataItem(dataItem);\r\n    }\r\n    _toggleDataItem(dataItem, visible) {\r\n        const label = dataItem.get(\"label\");\r\n        if (label) {\r\n            label.setPrivate(\"visible\", visible);\r\n        }\r\n        const grid = dataItem.get(\"grid\");\r\n        if (grid) {\r\n            grid.setPrivate(\"visible\", visible);\r\n        }\r\n        const tick = dataItem.get(\"tick\");\r\n        if (tick) {\r\n            tick.setPrivate(\"visible\", visible);\r\n        }\r\n        const axisFill = dataItem.get(\"axisFill\");\r\n        if (axisFill) {\r\n            axisFill.setPrivate(\"visible\", visible);\r\n        }\r\n        const bullet = dataItem.get(\"bullet\");\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite.setPrivate(\"visible\", visible);\r\n            }\r\n        }\r\n    }\r\n    _createAssets(dataItem, tags) {\r\n        const renderer = this.get(\"renderer\");\r\n        if (!dataItem.get(\"label\")) {\r\n            renderer.makeLabel(dataItem, tags);\r\n        }\r\n        if (!dataItem.get(\"grid\")) {\r\n            renderer.makeGrid(dataItem, tags);\r\n        }\r\n        if (!dataItem.get(\"tick\")) {\r\n            renderer.makeTick(dataItem, tags);\r\n        }\r\n        if (!dataItem.get(\"axisFill\")) {\r\n            renderer.makeAxisFill(dataItem, tags);\r\n        }\r\n        this._processBullet(dataItem);\r\n    }\r\n    _processBullet(dataItem) {\r\n        let bullet = dataItem.get(\"bullet\");\r\n        let axisBullet = this.get(\"bullet\");\r\n        if (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\r\n            bullet = axisBullet(this._root, this, dataItem);\r\n        }\r\n        if (bullet) {\r\n            bullet.axis = this;\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite._setDataItem(dataItem);\r\n                dataItem.setRaw(\"bullet\", bullet);\r\n                if (!sprite.parent) {\r\n                    this.bulletsContainer.children.push(sprite);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart._updateChartLayout();\r\n            chart.axisHeadersContainer.markDirtySize();\r\n        }\r\n        this.get(\"renderer\")._updatePositions();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        const renderer = this.get(\"renderer\");\r\n        const label = dataItem.get(\"label\");\r\n        if (label) {\r\n            renderer.labels.removeValue(label);\r\n            label.dispose();\r\n        }\r\n        const tick = dataItem.get(\"tick\");\r\n        if (tick) {\r\n            renderer.ticks.removeValue(tick);\r\n            tick.dispose();\r\n        }\r\n        const grid = dataItem.get(\"grid\");\r\n        if (grid) {\r\n            renderer.grid.removeValue(grid);\r\n            grid.dispose();\r\n        }\r\n        const axisFill = dataItem.get(\"axisFill\");\r\n        if (axisFill) {\r\n            renderer.axisFills.removeValue(axisFill);\r\n            axisFill.dispose();\r\n        }\r\n        const bullet = dataItem.get(\"bullet\");\r\n        if (bullet) {\r\n            bullet.dispose();\r\n        }\r\n    }\r\n    _updateGhost() {\r\n        const ghostLabel = this.ghostLabel;\r\n        if (!ghostLabel.isHidden()) {\r\n            const bounds = ghostLabel.localBounds();\r\n            const gWidth = bounds.right - bounds.left;\r\n            let text = ghostLabel.get(\"text\");\r\n            $array.each(this.dataItems, (dataItem) => {\r\n                const label = dataItem.get(\"label\");\r\n                if (label && !label.isHidden()) {\r\n                    const bounds = label.localBounds();\r\n                    const w = bounds.right - bounds.left;\r\n                    if (w > gWidth) {\r\n                        text = label.text._getText();\r\n                    }\r\n                }\r\n            });\r\n            ghostLabel.set(\"text\", text);\r\n        }\r\n        let start = this.get(\"start\", 0);\r\n        let end = this.get(\"end\", 1);\r\n        this.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\r\n    }\r\n    _handleCursorPosition(position, snapToSeries) {\r\n        const renderer = this.get(\"renderer\");\r\n        position = renderer.toAxisPosition(position);\r\n        this._cursorPosition = position;\r\n        this._snapToSeries = snapToSeries;\r\n        this.updateTooltip();\r\n    }\r\n    /**\r\n     * Can be called when axis zoom changes and you need to update tooltip\r\n     * position.\r\n     */\r\n    updateTooltip() {\r\n        const snapToSeries = this._snapToSeries;\r\n        let position = this._cursorPosition;\r\n        const tooltip = this.get(\"tooltip\");\r\n        const renderer = this.get(\"renderer\");\r\n        if ($type.isNumber(position)) {\r\n            $array.each(this.series, (series) => {\r\n                if (series.get(\"baseAxis\") === this) {\r\n                    const dataItem = this.getSeriesItem(series, position, this.get(\"tooltipLocation\"));\r\n                    series.setRaw(\"tooltipDataItem\", dataItem);\r\n                    if (snapToSeries && snapToSeries.indexOf(series) != -1) {\r\n                        series.updateLegendMarker(dataItem);\r\n                        series.updateLegendValue(dataItem);\r\n                    }\r\n                    else {\r\n                        series.showDataItemTooltip(dataItem);\r\n                    }\r\n                }\r\n            });\r\n            if (tooltip) {\r\n                renderer.updateTooltipBounds(tooltip);\r\n                if (this.get(\"snapTooltip\")) {\r\n                    position = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\r\n                }\r\n                if (!$type.isNaN(position)) {\r\n                    this.setPrivateRaw(\"tooltipPosition\", position);\r\n                    this._updateTooltipText(tooltip, position);\r\n                    renderer.positionTooltip(tooltip, position);\r\n                    if (position < this.get(\"start\") || position > this.get(\"end\")) {\r\n                        tooltip.hide(0);\r\n                    }\r\n                    else {\r\n                        tooltip.show(0);\r\n                    }\r\n                }\r\n                else {\r\n                    tooltip.hide(0);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _updateTooltipText(tooltip, position) {\r\n        tooltip.label.set(\"text\", this.getTooltipText(position));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    roundAxisPosition(position, _location) {\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    handleCursorShow() {\r\n        let tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.show();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    handleCursorHide() {\r\n        let tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.hide();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processSeriesDataItem(_dataItem, _fields) {\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._sizeDirty = false;\r\n        this._rangesDirty = false;\r\n    }\r\n    /**\r\n     * Converts pixel coordinate to a relative position on axis.\r\n     *\r\n     * @param   coordinate  Coordinate\r\n     * @return              Relative position\r\n     */\r\n    coordinateToPosition(coordinate) {\r\n        const renderer = this.get(\"renderer\");\r\n        return renderer.toAxisPosition(coordinate / renderer.axisLength());\r\n    }\r\n    /**\r\n     * Converts relative position of the plot area to relative position of the\r\n     * axis with zoom taken into account.\r\n     *\r\n     * @param position Position\r\n     * @return Relative position\r\n     */\r\n    toAxisPosition(position) {\r\n        return this.get(\"renderer\").toAxisPosition(position);\r\n    }\r\n    /**\r\n     * Adjusts position with inversed taken into account.\r\n     *\r\n     * @ignore\r\n     */\r\n    fixPosition(position) {\r\n        return this.get(\"renderer\").fixPosition(position);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    shouldGap(_dataItem, _nextItem, _autoGapCount, _fieldName) {\r\n        return false;\r\n    }\r\n    /**\r\n     * Creates and returns an axis range object.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n     * @param   axisDataItem  Axis data item\r\n     * @return                Axis range\r\n     */\r\n    createAxisRange(axisDataItem) {\r\n        return this.axisRanges.push(axisDataItem);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _groupSeriesData(_series) { }\r\n    /**\r\n     * Returns position span between start and end of a single cell in axis.\r\n     *\r\n     * @since 5.2.30\r\n     * @return Position\r\n     * @ignore\r\n     */\r\n    getCellWidthPosition() {\r\n        return 0.05;\r\n    }\r\n}\r\nObject.defineProperty(Axis, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Axis\"\r\n});\r\nObject.defineProperty(Axis, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Component.classNames.concat([Axis.className])\r\n});\r\n//# sourceMappingURL=Axis.js.map","import { DataItem } from \"../../../core/render/Component\";\r\nimport { Axis } from \"./Axis\";\r\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $math from \"../../../core/util/Math\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * Creates a value axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\r\n * @important\r\n */\r\nexport class ValueAxis extends Axis {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_dirtyExtremes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dirtySelectionExtremes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_deltaMinMax\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_minReal\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_maxReal\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_baseValue\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_syncDp\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_minLogAdjusted\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtyExtremes() {\r\n        this._dirtyExtremes = true;\r\n        this.markDirty();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    markDirtySelectionExtremes() {\r\n        this._dirtySelectionExtremes = true;\r\n        this.markDirty();\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\r\n        this.setPrivateRaw(\"name\", \"value\");\r\n        this.addTag(\"value\");\r\n        super._afterNew();\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"syncWithAxis\")) {\r\n            let previousValue = this._prevSettings.syncWithAxis;\r\n            if (previousValue) {\r\n                if (this._syncDp) {\r\n                    this._syncDp.dispose();\r\n                }\r\n            }\r\n            let syncWithAxis = this.get(\"syncWithAxis\");\r\n            if (syncWithAxis) {\r\n                this._syncDp = new MultiDisposer([\r\n                    syncWithAxis.onPrivate(\"selectionMinFinal\", () => {\r\n                        this._dirtySelectionExtremes = true;\r\n                    }),\r\n                    syncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\r\n                        this._dirtySelectionExtremes = true;\r\n                    })\r\n                ]);\r\n            }\r\n        }\r\n        //if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\r\n        if (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"strictMinMaxSelection\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\r\n            this._getMinMax();\r\n            this.ghostLabel.set(\"text\", \"\");\r\n            this._dirtyExtremes = false;\r\n        }\r\n        if (this._dirtySelectionExtremes && !this._isPanning && this.get(\"autoZoom\", true)) {\r\n            this._getSelectionMinMax();\r\n            this._dirtySelectionExtremes = false;\r\n        }\r\n        this._groupData();\r\n        if (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\r\n            this._handleRangeChange();\r\n            this._prepareAxisItems();\r\n            this._updateAxisRanges();\r\n        }\r\n        this._baseValue = this.baseValue();\r\n    }\r\n    _groupData() {\r\n    }\r\n    _formatText(value) {\r\n        const numberFormat = this.get(\"numberFormat\");\r\n        const formatter = this.getNumberFormatter();\r\n        let text = \"\";\r\n        if (numberFormat) {\r\n            text = formatter.format(value, numberFormat);\r\n        }\r\n        else {\r\n            text = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\r\n        }\r\n        return text;\r\n    }\r\n    _prepareAxisItems() {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            const logarithmic = this.get(\"logarithmic\");\r\n            const step = this.getPrivate(\"step\");\r\n            const selectionMin = this.getPrivate(\"selectionMin\");\r\n            const selectionMax = this.getPrivate(\"selectionMax\") + step;\r\n            let value = selectionMin - step;\r\n            let i = 0;\r\n            let differencePower = 1;\r\n            let minLog = min;\r\n            if (logarithmic) {\r\n                value = this._minLogAdjusted;\r\n                if (value < selectionMin) {\r\n                    while (value < selectionMin) {\r\n                        value += step;\r\n                    }\r\n                }\r\n                minLog = value;\r\n                if (minLog <= 0) {\r\n                    minLog = 1;\r\n                    if (step < 1) {\r\n                        minLog = step;\r\n                    }\r\n                }\r\n                differencePower = Math.log(selectionMax - step) * Math.LOG10E - Math.log(minLog) * Math.LOG10E;\r\n                if (differencePower > 2) {\r\n                    value = Math.pow(10, Math.log(minLog) * Math.LOG10E - 5);\r\n                }\r\n            }\r\n            let previous = -Infinity;\r\n            while (value < selectionMax) {\r\n                let dataItem;\r\n                if (this.dataItems.length < i + 1) {\r\n                    dataItem = new DataItem(this, undefined, {});\r\n                    this._dataItems.push(dataItem);\r\n                    this.processDataItem(dataItem);\r\n                }\r\n                else {\r\n                    dataItem = this.dataItems[i];\r\n                }\r\n                this._createAssets(dataItem, []);\r\n                if (dataItem.isHidden()) {\r\n                    dataItem.show();\r\n                }\r\n                dataItem.setRaw(\"value\", value);\r\n                const label = dataItem.get(\"label\");\r\n                if (label) {\r\n                    label.set(\"text\", this._formatText(value));\r\n                }\r\n                this._prepareDataItem(dataItem);\r\n                if (!logarithmic) {\r\n                    value += step;\r\n                }\r\n                else {\r\n                    if (differencePower > 2) {\r\n                        value = Math.pow(10, Math.log(minLog) * Math.LOG10E + i - 5);\r\n                    }\r\n                    else {\r\n                        value += step;\r\n                    }\r\n                }\r\n                if (previous == value) {\r\n                    break;\r\n                }\r\n                let stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\r\n                if (stepPower < 1) {\r\n                    // exponent is less then 1 too. Count decimals of exponent\r\n                    let decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\r\n                    // round value to avoid floating point issues\r\n                    value = $math.round(value, decCount);\r\n                }\r\n                i++;\r\n                previous = value;\r\n            }\r\n            for (let j = i; j < this.dataItems.length; j++) {\r\n                this.dataItems[j].hide();\r\n            }\r\n            $array.each(this.series, (series) => {\r\n                if (series.inited) {\r\n                    series._markDirtyAxes();\r\n                }\r\n            });\r\n            this._updateGhost();\r\n        }\r\n    }\r\n    _prepareDataItem(dataItem, count) {\r\n        let renderer = this.get(\"renderer\");\r\n        let value = dataItem.get(\"value\");\r\n        let endValue = dataItem.get(\"endValue\");\r\n        let position = this.valueToPosition(value);\r\n        let endPosition = position;\r\n        let fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\"));\r\n        if ($type.isNumber(endValue)) {\r\n            endPosition = this.valueToPosition(endValue);\r\n            fillEndPosition = endPosition;\r\n        }\r\n        if (dataItem.get(\"isRange\")) {\r\n            if (endValue == null) {\r\n                fillEndPosition = position;\r\n            }\r\n        }\r\n        renderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\r\n        const grid = dataItem.get(\"grid\");\r\n        renderer.updateGrid(grid, position, endPosition);\r\n        if (grid) {\r\n            if (value == this.get(\"baseValue\", 0)) {\r\n                grid.addTag(\"base\");\r\n                grid._applyThemes();\r\n            }\r\n            else if (grid.hasTag(\"base\")) {\r\n                grid.removeTag(\"base\");\r\n                grid._applyThemes();\r\n            }\r\n        }\r\n        renderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\r\n        renderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\r\n        this._processBullet(dataItem);\r\n        renderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\r\n        if (!dataItem.get(\"isRange\")) {\r\n            const fillRule = this.get(\"fillRule\");\r\n            if (fillRule) {\r\n                fillRule(dataItem);\r\n            }\r\n        }\r\n    }\r\n    _handleRangeChange() {\r\n        let selectionMin = this.positionToValue(this.get(\"start\", 0));\r\n        let selectionMax = this.positionToValue(this.get(\"end\", 1));\r\n        const gridCount = this.get(\"renderer\").gridCount();\r\n        let minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\r\n        let stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\r\n        this.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\r\n        selectionMin = $math.round(selectionMin, stepDecimalPlaces);\r\n        selectionMax = $math.round(selectionMax, stepDecimalPlaces);\r\n        minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\r\n        let step = minMaxStep.step;\r\n        selectionMin = minMaxStep.min;\r\n        selectionMax = minMaxStep.max;\r\n        if (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\r\n            // do not change to setPrivate, will cause SO\r\n            this.setPrivateRaw(\"selectionMin\", selectionMin);\r\n            this.setPrivateRaw(\"selectionMax\", selectionMax);\r\n            this.setPrivateRaw(\"step\", step);\r\n        }\r\n    }\r\n    /**\r\n     * Converts a relative position to a corresponding numeric value from axis\r\n     * scale.\r\n     *\r\n     * @param   position  Relative position\r\n     * @return            Value\r\n     */\r\n    positionToValue(position) {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if (!this.get(\"logarithmic\")) {\r\n            return position * (max - min) + min;\r\n        }\r\n        else {\r\n            return Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\r\n        }\r\n    }\r\n    /**\r\n     * Convers value to a relative position on axis.\r\n     *\r\n     * @param   value  Value\r\n     * @return         Relative position\r\n     */\r\n    valueToPosition(value) {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if (!this.get(\"logarithmic\")) {\r\n            return (value - min) / (max - min);\r\n        }\r\n        else {\r\n            if (value <= 0) {\r\n                let treatZeroAs = this.get(\"treatZeroAs\");\r\n                if ($type.isNumber(treatZeroAs)) {\r\n                    value = treatZeroAs;\r\n                }\r\n            }\r\n            return (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    valueToFinalPosition(value) {\r\n        const min = this.getPrivate(\"minFinal\");\r\n        const max = this.getPrivate(\"maxFinal\");\r\n        if (!this.get(\"logarithmic\")) {\r\n            return (value - min) / (max - min);\r\n        }\r\n        else {\r\n            if (value <= 0) {\r\n                let treatZeroAs = this.get(\"treatZeroAs\");\r\n                if ($type.isNumber(treatZeroAs)) {\r\n                    value = treatZeroAs;\r\n                }\r\n            }\r\n            return (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\r\n        }\r\n    }\r\n    /**\r\n     * Returns X coordinate in pixels corresponding to specific value.\r\n     *\r\n     * @param   value     Numeric value\r\n     * @param   location  Location\r\n     * @param   baseValue Base value\r\n     * @return            X coordinate\r\n     */\r\n    getX(value, location, baseValue) {\r\n        value = baseValue + (value - baseValue) * location;\r\n        const position = this.valueToPosition(value);\r\n        return this._settings.renderer.positionToCoordinate(position);\r\n    }\r\n    /**\r\n     * Returns X coordinate in pixels corresponding to specific value.\r\n     *\r\n     * @param   value     Numeric value\r\n     * @param   location  Location\r\n     * @param   baseValue Base value\r\n     * @return            X coordinate\r\n     */\r\n    getY(value, location, baseValue) {\r\n        value = baseValue + (value - baseValue) * location;\r\n        const position = this.valueToPosition(value);\r\n        return this._settings.renderer.positionToCoordinate(position);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateX(dataItem, field, _cellLocation, axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionX(dataItem, field, _cellLocation, axisLocation) {\r\n        let value = dataItem.get(field);\r\n        const stackToItem = dataItem.get(\"stackToItemX\");\r\n        if (stackToItem) {\r\n            const series = dataItem.component;\r\n            value = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\r\n        }\r\n        else {\r\n            value = this._baseValue + (value - this._baseValue) * axisLocation;\r\n        }\r\n        return this.valueToPosition(value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateY(dataItem, field, _cellLocation, axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionY(dataItem, field, _cellLocation, axisLocation) {\r\n        let value = dataItem.get(field);\r\n        const stackToItem = dataItem.get(\"stackToItemY\");\r\n        if (stackToItem) {\r\n            const series = dataItem.component;\r\n            value = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\r\n        }\r\n        else {\r\n            value = this._baseValue + (value - this._baseValue) * axisLocation;\r\n        }\r\n        return this.valueToPosition(value);\r\n    }\r\n    /**\r\n     * Returns relative position of axis' `baseValue`.\r\n     *\r\n     * @return  Base value position\r\n     */\r\n    basePosition() {\r\n        return this.valueToPosition(this.baseValue());\r\n    }\r\n    /**\r\n     * Base value of the [[ValueAxis]], which determines positive and negative\r\n     * values.\r\n     *\r\n     * @return Base value\r\n     */\r\n    baseValue() {\r\n        const min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\r\n        const max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\r\n        let baseValue = this.get(\"baseValue\", 0);\r\n        if (baseValue < min) {\r\n            baseValue = min;\r\n        }\r\n        if (baseValue > max) {\r\n            baseValue = max;\r\n        }\r\n        return baseValue;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    cellEndValue(value) {\r\n        return value;\r\n    }\r\n    fixSmallStep(step) {\r\n        // happens because of floating point error\r\n        if (1 + step === 1) {\r\n            step *= 2;\r\n            return this.fixSmallStep(step);\r\n        }\r\n        return step;\r\n    }\r\n    _fixMin(min) {\r\n        return min;\r\n    }\r\n    _fixMax(max) {\r\n        return max;\r\n    }\r\n    _calculateTotals() {\r\n        if (this.get(\"calculateTotals\")) {\r\n            let series = this.series[0];\r\n            if (series) {\r\n                let startIndex = series.startIndex();\r\n                if (series.dataItems.length > 0) {\r\n                    if (startIndex > 0) {\r\n                        startIndex--;\r\n                    }\r\n                    let endIndex = series.endIndex();\r\n                    if (endIndex < series.dataItems.length) {\r\n                        endIndex++;\r\n                    }\r\n                    let field;\r\n                    let vc;\r\n                    if (series.get(\"yAxis\") == this) {\r\n                        field = \"valueY\";\r\n                        vc = \"vcy\";\r\n                    }\r\n                    else if (series.get(\"xAxis\") == this) {\r\n                        field = \"valueX\";\r\n                        vc = \"vcx\";\r\n                    }\r\n                    let fieldWorking = field + \"Working\";\r\n                    if (field) {\r\n                        for (let i = startIndex; i < endIndex; i++) {\r\n                            let sum = 0;\r\n                            let total = 0;\r\n                            $array.each(this.series, (series) => {\r\n                                if (!series.get(\"excludeFromTotal\")) {\r\n                                    let dataItem = series.dataItems[i];\r\n                                    if (dataItem) {\r\n                                        let value = dataItem.get(fieldWorking) * series.get(vc);\r\n                                        if (!$type.isNaN(value)) {\r\n                                            sum += value;\r\n                                            total += Math.abs(value);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                            $array.each(this.series, (series) => {\r\n                                if (!series.get(\"excludeFromTotal\")) {\r\n                                    let dataItem = series.dataItems[i];\r\n                                    if (dataItem) {\r\n                                        let value = dataItem.get(fieldWorking) * series.get(vc);\r\n                                        if (!$type.isNaN(value)) {\r\n                                            dataItem.set((field + \"Total\"), total);\r\n                                            dataItem.set((field + \"Sum\"), sum);\r\n                                            dataItem.set((field + \"TotalPercent\"), value / total * 100);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _getSelectionMinMax() {\r\n        const min = this.getPrivate(\"minFinal\");\r\n        const max = this.getPrivate(\"maxFinal\");\r\n        const minDefined = this.get(\"min\");\r\n        const maxDefined = this.get(\"max\");\r\n        let extraMin = this.get(\"extraMin\", 0);\r\n        let extraMax = this.get(\"extraMax\", 0);\r\n        if (this.get(\"logarithmic\")) {\r\n            if (this.get(\"extraMin\") == null) {\r\n                extraMin = 0.1;\r\n            }\r\n            if (this.get(\"extraMax\") == null) {\r\n                extraMax = 0.2;\r\n            }\r\n        }\r\n        const gridCount = this.get(\"renderer\").gridCount();\r\n        const selectionStrictMinMax = this.get(\"strictMinMaxSelection\");\r\n        const strictMinMax = this.get(\"strictMinMax\");\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            let selectionMin = max;\r\n            let selectionMax = min;\r\n            $array.each(this.series, (series) => {\r\n                if (!series.get(\"ignoreMinMax\")) {\r\n                    let seriesMin;\r\n                    let seriesMax;\r\n                    const outOfSelection = series.getPrivate(\"outOfSelection\");\r\n                    if (series.get(\"xAxis\") === this) {\r\n                        if (!outOfSelection) {\r\n                            seriesMin = series.getPrivate(\"selectionMinX\", series.getPrivate(\"minX\"));\r\n                            seriesMax = series.getPrivate(\"selectionMaxX\", series.getPrivate(\"maxX\"));\r\n                        }\r\n                    }\r\n                    else if (series.get(\"yAxis\") === this) {\r\n                        if (!outOfSelection) {\r\n                            seriesMin = series.getPrivate(\"selectionMinY\", series.getPrivate(\"minY\"));\r\n                            seriesMax = series.getPrivate(\"selectionMaxY\", series.getPrivate(\"maxY\"));\r\n                        }\r\n                    }\r\n                    if (!series.isHidden() && !series.isShowing()) {\r\n                        if ($type.isNumber(seriesMin)) {\r\n                            selectionMin = Math.min(selectionMin, seriesMin);\r\n                        }\r\n                        if ($type.isNumber(seriesMax)) {\r\n                            selectionMax = Math.max(selectionMax, seriesMax);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this.axisRanges.each((range) => {\r\n                if (range.get(\"affectsMinMax\")) {\r\n                    let value = range.get(\"value\");\r\n                    if (value != null) {\r\n                        selectionMin = Math.min(selectionMin, value);\r\n                        selectionMax = Math.max(selectionMax, value);\r\n                    }\r\n                    value = range.get(\"endValue\");\r\n                    if (value != null) {\r\n                        selectionMin = Math.min(selectionMin, value);\r\n                        selectionMax = Math.max(selectionMax, value);\r\n                    }\r\n                }\r\n            });\r\n            if (selectionMin > selectionMax) {\r\n                [selectionMin, selectionMax] = [selectionMax, selectionMin];\r\n            }\r\n            if ($type.isNumber(minDefined)) {\r\n                if (strictMinMax) {\r\n                    selectionMin = minDefined;\r\n                }\r\n                else {\r\n                    selectionMin = min;\r\n                }\r\n            }\r\n            else if (strictMinMax) {\r\n                if ($type.isNumber(this._minReal)) {\r\n                    selectionMin = this._minReal;\r\n                }\r\n            }\r\n            if ($type.isNumber(maxDefined)) {\r\n                if (strictMinMax) {\r\n                    selectionMax = maxDefined;\r\n                }\r\n                else {\r\n                    selectionMax = max;\r\n                }\r\n            }\r\n            else if (strictMinMax) {\r\n                if ($type.isNumber(this._maxReal)) {\r\n                    selectionMax = this._maxReal;\r\n                }\r\n            }\r\n            if (selectionMin === selectionMax) {\r\n                selectionMin -= this._deltaMinMax;\r\n                selectionMax += this._deltaMinMax;\r\n                let minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\r\n                selectionMin = minMaxStep2.min;\r\n                selectionMax = minMaxStep2.max;\r\n            }\r\n            let selectionMinReal = selectionMin;\r\n            let selectionMaxReal = selectionMax;\r\n            selectionMin -= (selectionMax - selectionMin) * extraMin;\r\n            selectionMax += (selectionMax - selectionMin) * extraMax;\r\n            let minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\r\n            selectionMin = minMaxStep.min;\r\n            selectionMax = minMaxStep.max;\r\n            selectionMin = $math.fitToRange(selectionMin, min, max);\r\n            selectionMax = $math.fitToRange(selectionMax, min, max);\r\n            // do it for the second time !important\t\t\t\r\n            minMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\r\n            if (!strictMinMax) {\r\n                selectionMin = minMaxStep.min;\r\n                selectionMax = minMaxStep.max;\r\n            }\r\n            const syncWithAxis = this.get(\"syncWithAxis\");\r\n            if (syncWithAxis) {\r\n                minMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\r\n                selectionMin = minMaxStep.min;\r\n                selectionMax = minMaxStep.max;\r\n            }\r\n            if (strictMinMax) {\r\n                if ($type.isNumber(minDefined)) {\r\n                    selectionMin = Math.max(selectionMin, minDefined);\r\n                }\r\n                if ($type.isNumber(maxDefined)) {\r\n                    selectionMax = Math.min(selectionMax, maxDefined);\r\n                }\r\n            }\r\n            if (selectionStrictMinMax) {\r\n                selectionMin = selectionMinReal - (selectionMax - selectionMin) * extraMin;\r\n                selectionMax = selectionMaxReal + (selectionMax - selectionMin) * extraMax;\r\n            }\r\n            if (this.get(\"logarithmic\")) {\r\n                if (selectionMin <= 0) {\r\n                    selectionMin = selectionMinReal * (1 - Math.min(extraMin, 0.99));\r\n                }\r\n                if (selectionMin < min) {\r\n                    selectionMin = min;\r\n                }\r\n                if (selectionMax > max) {\r\n                    selectionMax = max;\r\n                }\r\n            }\r\n            let len = Math.min(20, Math.ceil(Math.log(this.getPrivate(\"maxZoomFactor\", 100) + 1) / Math.LN10) + 2);\r\n            let start = $math.round(this.valueToFinalPosition(selectionMin), len);\r\n            let end = $math.round(this.valueToFinalPosition(selectionMax), len);\r\n            this.setPrivateRaw(\"selectionMinFinal\", selectionMin);\r\n            this.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\r\n            this.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\r\n            this.zoom(start, end);\r\n        }\r\n    }\r\n    _getMinMax() {\r\n        let minDefined = this.get(\"min\");\r\n        let maxDefined = this.get(\"max\");\r\n        let min = Infinity;\r\n        let max = -Infinity;\r\n        let extraMin = this.get(\"extraMin\", 0);\r\n        let extraMax = this.get(\"extraMax\", 0);\r\n        if (this.get(\"logarithmic\")) {\r\n            if (this.get(\"extraMin\") == null) {\r\n                extraMin = 0.1;\r\n            }\r\n            if (this.get(\"extraMax\") == null) {\r\n                extraMax = 0.2;\r\n            }\r\n        }\r\n        let minDiff = Infinity;\r\n        $array.each(this.series, (series) => {\r\n            if (!series.get(\"ignoreMinMax\")) {\r\n                let seriesMin;\r\n                let seriesMax;\r\n                if (series.get(\"xAxis\") === this) {\r\n                    seriesMin = series.getPrivate(\"minX\");\r\n                    seriesMax = series.getPrivate(\"maxX\");\r\n                }\r\n                else if (series.get(\"yAxis\") === this) {\r\n                    seriesMin = series.getPrivate(\"minY\");\r\n                    seriesMax = series.getPrivate(\"maxY\");\r\n                }\r\n                if ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\r\n                    min = Math.min(min, seriesMin);\r\n                    max = Math.max(max, seriesMax);\r\n                    let diff = seriesMax - seriesMin;\r\n                    if (diff <= 0) {\r\n                        diff = Math.abs(seriesMax / 100);\r\n                    }\r\n                    if (diff < minDiff) {\r\n                        minDiff = diff;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.axisRanges.each((range) => {\r\n            if (range.get(\"affectsMinMax\")) {\r\n                let value = range.get(\"value\");\r\n                if (value != null) {\r\n                    min = Math.min(min, value);\r\n                    max = Math.max(max, value);\r\n                }\r\n                value = range.get(\"endValue\");\r\n                if (value != null) {\r\n                    min = Math.min(min, value);\r\n                    max = Math.max(max, value);\r\n                }\r\n            }\r\n        });\r\n        if (this.get(\"logarithmic\")) {\r\n            let treatZeroAs = this.get(\"treatZeroAs\");\r\n            if ($type.isNumber(treatZeroAs)) {\r\n                if (min <= 0) {\r\n                    min = treatZeroAs;\r\n                }\r\n            }\r\n            if (min <= 0) {\r\n                new Error(\"Logarithmic value axis can not have values <= 0.\");\r\n            }\r\n        }\r\n        if (min === 0 && max === 0) {\r\n            max = 0.9;\r\n            min = -0.9;\r\n        }\r\n        if ($type.isNumber(minDefined)) {\r\n            min = minDefined;\r\n        }\r\n        if ($type.isNumber(maxDefined)) {\r\n            max = maxDefined;\r\n        }\r\n        // meaning no min/max found on series/ranges and no min/max was defined\r\n        if (min === Infinity || max === -Infinity) {\r\n            return;\r\n        }\r\n        const initialMin = min;\r\n        const initialMax = max;\r\n        // adapter\r\n        let minAdapted = this.adapters.fold(\"min\", min);\r\n        let maxAdapted = this.adapters.fold(\"max\", max);\r\n        if ($type.isNumber(minAdapted)) {\r\n            min = minAdapted;\r\n        }\r\n        if ($type.isNumber(maxAdapted)) {\r\n            max = maxAdapted;\r\n        }\r\n        // DateAxis does some magic here\r\n        min = this._fixMin(min);\r\n        max = this._fixMax(max);\r\n        // this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\t\t\r\n        if (max - min <= 1 / Math.pow(10, 15)) {\r\n            if (max - min !== 0) {\r\n                this._deltaMinMax = (max - min) / 2;\r\n            }\r\n            else {\r\n                this._getDelta(max);\r\n            }\r\n            min -= this._deltaMinMax;\r\n            max += this._deltaMinMax;\r\n        }\r\n        // add extras\r\n        min -= (max - min) * extraMin;\r\n        max += (max - min) * extraMax;\r\n        if (this.get(\"logarithmic\")) {\r\n            // don't let min go below 0 if real min is >= 0\r\n            if (min < 0 && initialMin >= 0) {\r\n                min = 0;\r\n            }\r\n            // don't let max go above 0 if real max is <= 0\r\n            if (max > 0 && initialMax <= 0) {\r\n                max = 0;\r\n            }\r\n        }\r\n        this._minReal = min;\r\n        this._maxReal = max;\r\n        let strictMinMax = this.get(\"strictMinMax\");\r\n        let strictMinMaxSelection = this.get(\"strictMinMaxSelection\", false);\r\n        if (strictMinMaxSelection) {\r\n            strictMinMax = strictMinMaxSelection;\r\n        }\r\n        let strict = strictMinMax;\r\n        if ($type.isNumber(maxDefined)) {\r\n            strict = true;\r\n        }\r\n        let gridCount = this.get(\"renderer\").gridCount();\r\n        let minMaxStep = this._adjustMinMax(min, max, gridCount, strict);\r\n        min = minMaxStep.min;\r\n        max = minMaxStep.max;\r\n        // do it for the second time with strict true (importat!)\r\n        minMaxStep = this._adjustMinMax(min, max, gridCount, true);\r\n        min = minMaxStep.min;\r\n        max = minMaxStep.max;\r\n        // return min max if strict\r\n        if (strictMinMax) {\r\n            if ($type.isNumber(minDefined)) {\r\n                min = minDefined;\r\n            }\r\n            else {\r\n                min = this._minReal;\r\n            }\r\n            if ($type.isNumber(maxDefined)) {\r\n                max = maxDefined;\r\n            }\r\n            else {\r\n                max = this._maxReal;\r\n            }\r\n            if (max - min <= 0.00000001) {\r\n                min -= this._deltaMinMax;\r\n                max += this._deltaMinMax;\r\n            }\r\n            min -= (max - min) * extraMin;\r\n            max += (max - min) * extraMax;\r\n        }\r\n        minAdapted = this.adapters.fold(\"min\", min);\r\n        maxAdapted = this.adapters.fold(\"max\", max);\r\n        if ($type.isNumber(minAdapted)) {\r\n            min = minAdapted;\r\n        }\r\n        if ($type.isNumber(maxAdapted)) {\r\n            max = maxAdapted;\r\n        }\r\n        if (minDiff == Infinity) {\r\n            minDiff = (max - min);\r\n        }\r\n        // this is to avoid floating point number error\r\n        let decCount = Math.round(Math.abs(Math.log(Math.abs(max - min)) * Math.LOG10E)) + 5;\r\n        min = $math.round(min, decCount);\r\n        max = $math.round(max, decCount);\r\n        const syncWithAxis = this.get(\"syncWithAxis\");\r\n        if (syncWithAxis) {\r\n            minMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\r\n            min = minMaxStep.min;\r\n            max = minMaxStep.max;\r\n        }\r\n        this.setPrivateRaw(\"maxZoomFactor\", Math.max(1, Math.ceil((max - min) / minDiff * this.get(\"maxZoomFactor\", 100))));\r\n        this._fixZoomFactor();\r\n        if (this.get(\"logarithmic\")) {\r\n            this._minLogAdjusted = min;\r\n            min = this._minReal;\r\n            max = this._maxReal;\r\n            if (min <= 0) {\r\n                min = initialMin * (1 - Math.min(extraMin, 0.99));\r\n            }\r\n        }\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            if (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\r\n                this.setPrivate(\"minFinal\", min);\r\n                this.setPrivate(\"maxFinal\", max);\r\n                this._saveMinMax(min, max);\r\n                const duration = this.get(\"interpolationDuration\", 0);\r\n                const easing = this.get(\"interpolationEasing\");\r\n                this.animatePrivate({ key: \"min\", to: min, duration, easing });\r\n                this.animatePrivate({ key: \"max\", to: max, duration, easing });\r\n            }\r\n        }\r\n    }\r\n    _fixZoomFactor() {\r\n    }\r\n    _getDelta(max) {\r\n        // the number by which we need to raise 10 to get difference\r\n        let exponent = Math.log(Math.abs(max)) * Math.LOG10E;\r\n        // here we find a number which is power of 10 and has the same count of numbers as difference has\r\n        let power = Math.pow(10, Math.floor(exponent));\r\n        // reduce this number by 10 times\r\n        power = power / 10;\r\n        this._deltaMinMax = power;\r\n    }\r\n    _saveMinMax(_min, _max) {\r\n    }\r\n    _adjustMinMax(min, max, gridCount, strictMode) {\r\n        // will fail if 0\r\n        if (gridCount <= 1) {\r\n            gridCount = 1;\r\n        }\r\n        gridCount = Math.round(gridCount);\r\n        let initialMin = min;\r\n        let initialMax = max;\r\n        let difference = max - min;\r\n        // in case min and max is the same, use max\r\n        if (difference === 0) {\r\n            difference = Math.abs(max);\r\n        }\r\n        // the number by which we need to raise 10 to get difference\r\n        let exponent = Math.log(Math.abs(difference)) * Math.LOG10E;\r\n        // here we find a number which is power of 10 and has the same count of numbers as difference has\r\n        let power = Math.pow(10, Math.floor(exponent));\r\n        // reduce this number by 10 times\r\n        power = power / 10;\r\n        let extra = power;\r\n        if (strictMode) {\r\n            extra = 0;\r\n        }\r\n        // round down min\r\n        if (strictMode) {\r\n            min = Math.floor(min / power) * power;\r\n            // round up max\r\n            max = Math.ceil(max / power) * power;\r\n        }\r\n        else {\r\n            min = Math.ceil(min / power) * power - extra;\r\n            // round up max\r\n            max = Math.floor(max / power) * power + extra;\r\n        }\r\n        // don't let min go below 0 if real min is >= 0\r\n        if (min < 0 && initialMin >= 0) {\r\n            min = 0;\r\n        }\r\n        // don't let max go above 0 if real max is <= 0\r\n        if (max > 0 && initialMax <= 0) {\r\n            max = 0;\r\n        }\r\n        exponent = Math.log(Math.abs(difference)) * Math.LOG10E;\r\n        power = Math.pow(10, Math.floor(exponent));\r\n        power = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\r\n        // approximate difference between two grid lines\r\n        let step = Math.ceil((difference / gridCount) / power) * power;\r\n        let stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\r\n        // the step should divide by  2, 5, and 10.\r\n        let stepDivisor = Math.ceil(step / stepPower); // number 0 - 10\r\n        if (stepDivisor > 5) {\r\n            stepDivisor = 10;\r\n        }\r\n        else if (stepDivisor <= 5 && stepDivisor > 2) {\r\n            stepDivisor = 5;\r\n        }\r\n        // now get real step\r\n        step = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\r\n        let maxPrecision = this.get(\"maxPrecision\");\r\n        if ($type.isNumber(maxPrecision)) {\r\n            let ceiledStep = $math.ceil(step, maxPrecision);\r\n            if (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\r\n                step = ceiledStep;\r\n            }\r\n        }\r\n        let decCount = 0;\r\n        // in case numbers are smaller than 1\r\n        if (stepPower < 1) {\r\n            // exponent is less then 1 too. Count decimals of exponent\r\n            decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\r\n            // round step\r\n            step = $math.round(step, decCount);\r\n        }\r\n        // final min and max\r\n        let minCount = Math.floor(min / step);\r\n        min = $math.round(step * minCount, decCount);\r\n        let maxCount;\r\n        if (!strictMode) {\r\n            maxCount = Math.ceil(max / step);\r\n        }\r\n        else {\r\n            maxCount = Math.floor(max / step);\r\n        }\r\n        if (maxCount === minCount) {\r\n            maxCount++;\r\n        }\r\n        max = $math.round(step * maxCount, decCount);\r\n        if (max < initialMax) {\r\n            max = max + step;\r\n        }\r\n        if (min > initialMin) {\r\n            min = min - step;\r\n        }\r\n        step = this.fixSmallStep(step);\r\n        return { min: min, max: max, step: step };\r\n    }\r\n    /**\r\n     * Returns text to be used in an axis tooltip for specific relative position.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Tooltip text\r\n     */\r\n    getTooltipText(position) {\r\n        const numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\r\n        const formatter = this.getNumberFormatter();\r\n        const extraDecimals = this.get(\"extraTooltipPrecision\", 0);\r\n        const decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\r\n        const value = $math.round(this.positionToValue(position), decimals);\r\n        if (numberFormat) {\r\n            return formatter.format(value, numberFormat);\r\n        }\r\n        else {\r\n            return formatter.format(value, undefined, decimals);\r\n            //label.set(\"text\", this.getNumberFormatter().format(value, undefined, this.getPrivate(\"stepDecimalPlaces\")));\r\n        }\r\n        // //@todo number formatter + tag\r\n        // return $math.round(this.positionToValue(position), this.getPrivate(\"stepDecimalPlaces\")).toString();\r\n    }\r\n    /**\r\n     * Returns a data item from series that is closest to the `position`.\r\n     *\r\n     * @param   series    Series\r\n     * @param   position  Relative position\r\n     * @return            Data item\r\n     */\r\n    getSeriesItem(series, position) {\r\n        let fieldName = (this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\"));\r\n        let value = this.positionToValue(position);\r\n        let index = undefined;\r\n        let oldDiff;\r\n        $array.each(series.dataItems, (dataItem, i) => {\r\n            const diff = Math.abs(dataItem.get(fieldName) - value);\r\n            if (index === undefined || diff < oldDiff) {\r\n                index = i;\r\n                oldDiff = diff;\r\n            }\r\n        });\r\n        if (index != null) {\r\n            return series.dataItems[index];\r\n        }\r\n    }\r\n    /**\r\n     * Zooms the axis to specific `start` and `end` values.\r\n     *\r\n     * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n     *\r\n     * @param  start     Start value\r\n     * @param  end       End value\r\n     * @param  duration  Duration in milliseconds\r\n     */\r\n    zoomToValues(start, end, duration) {\r\n        const min = this.getPrivate(\"minFinal\", 0);\r\n        const max = this.getPrivate(\"maxFinal\", 0);\r\n        if (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\r\n            this.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\r\n        }\r\n    }\r\n    /**\r\n     * Syncs with a target axis.\r\n     *\r\n     * @param  min  Min\r\n     * @param  max  Max\r\n     * @param  step Step\r\n     */\r\n    _syncAxes(min, max, step, syncMin, syncMax, syncStep) {\r\n        let axis = this.get(\"syncWithAxis\");\r\n        if (axis) {\r\n            let count = Math.round(syncMax - syncMin) / syncStep;\r\n            let currentCount = Math.round((max - min) / step);\r\n            let gridCount = this.get(\"renderer\").gridCount();\r\n            if ($type.isNumber(count) && $type.isNumber(currentCount)) {\r\n                let synced = false;\r\n                let c = 0;\r\n                let diff = (max - min) * 0.01;\r\n                let omin = min;\r\n                let omax = max;\r\n                let ostep = step;\r\n                while (synced != true) {\r\n                    synced = this._checkSync(omin, omax, ostep, count);\r\n                    c++;\r\n                    if (c > 500) {\r\n                        synced = true;\r\n                    }\r\n                    if (!synced) {\r\n                        if (c / 3 == Math.round(c / 3)) {\r\n                            omin = min - diff * c;\r\n                            if (min >= 0 && omin < 0) {\r\n                                omin = 0;\r\n                            }\r\n                        }\r\n                        else {\r\n                            omax = max + diff * c;\r\n                            if (omax <= 0 && omax > 0) {\r\n                                omax = 0;\r\n                            }\r\n                        }\r\n                        let minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\r\n                        omin = minMaxStep.min;\r\n                        omax = minMaxStep.max;\r\n                        ostep = minMaxStep.step;\r\n                    }\r\n                    else {\r\n                        min = omin;\r\n                        max = omax;\r\n                        step = ostep;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return { min: min, max: max, step: step };\r\n    }\r\n    /**\r\n     * Returns `true` if axis needs to be resunced with some other axis.\r\n     */\r\n    _checkSync(min, max, step, count) {\r\n        let currentCount = (max - min) / step;\r\n        for (let i = 1; i < count; i++) {\r\n            if ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\nObject.defineProperty(ValueAxis, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ValueAxis\"\r\n});\r\nObject.defineProperty(ValueAxis, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Axis.classNames.concat([ValueAxis.className])\r\n});\r\n//# sourceMappingURL=ValueAxis.js.map","/** @ignore */ /** */\r\nimport * as $math from \"./Math\";\r\n/**\r\n * @ignore\r\n */\r\nexport function segmentedLine(display, segments) {\r\n    for (let s = 0, len = segments.length; s < len; s++) {\r\n        const groups = segments[s];\r\n        if (groups.length > 0) {\r\n            let firstGroup = groups[0];\r\n            if (firstGroup.length > 0) {\r\n                let firstPoint = firstGroup[0];\r\n                display.moveTo(firstPoint.x, firstPoint.y);\r\n                for (let g = 0, len = groups.length; g < len; g++) {\r\n                    line(display, groups[g]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function line(display, points) {\r\n    for (let p = 0, len = points.length; p < len; p++) {\r\n        const point = points[p];\r\n        display.lineTo(point.x, point.y);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function moveTo(display, point) {\r\n    display.moveTo(point.x, point.y);\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function clear(display) {\r\n    display.clear();\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function smoothedSegmentedline(display, segments, tensionX, tensionY) {\r\n    for (let s = 0, len = segments.length; s < len; s++) {\r\n        const groups = segments[s];\r\n        if (groups.length > 0) {\r\n            let firstGroup = groups[0];\r\n            if (firstGroup.length > 0) {\r\n                let firstPoint = firstGroup[0];\r\n                display.moveTo(firstPoint.x, firstPoint.y);\r\n                for (let g = 0, len = groups.length; g < len; g++) {\r\n                    const points = groups[g];\r\n                    if (points.length > 0) {\r\n                        display.lineTo(points[0].x, points[0].y);\r\n                    }\r\n                    smoothedLine(display, points, tensionX, tensionY);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function smoothedLine(display, points, tensionX, tensionY) {\r\n    for (let i = points.length - 1; i > 0; i--) {\r\n        let p0 = points[i];\r\n        let p1 = points[i - 1];\r\n        if (Math.abs(p0.x - p1.x) < 0.1 && Math.abs(p0.y - p1.y) < 0.1) {\r\n            points.splice(i - 1, 1);\r\n        }\r\n    }\r\n    if (points.length < 3 || (tensionX >= 1 && tensionY >= 1)) {\r\n        line(display, points);\r\n        return;\r\n    }\r\n    tensionX = 1 - tensionX + 0.00001;\r\n    tensionY = 1 - tensionY + 0.00001;\r\n    let first = points[0];\r\n    let last = points[points.length - 1];\r\n    let closed = false;\r\n    if ($math.round(first.x, 3) == $math.round(last.x) && $math.round(first.y) == $math.round(last.y)) {\r\n        closed = true;\r\n    }\r\n    // Can't moveTo here, as it wont be possible to have fill then.\r\n    let path = \"\";\r\n    for (let i = 0, len = points.length - 1; i < len; i++) {\r\n        let p0 = points[i - 1];\r\n        let p1 = points[i];\r\n        let p2 = points[i + 1];\r\n        let p3 = points[i + 2];\r\n        if (i === 0) {\r\n            if (closed) {\r\n                p0 = points[len - 2];\r\n            }\r\n            else {\r\n                p0 = points[0];\r\n            }\r\n        }\r\n        else if (i == len - 1) {\r\n            if (closed) {\r\n                p3 = points[1];\r\n            }\r\n            else {\r\n                p3 = p2;\r\n            }\r\n        }\r\n        let controlPointA = $math.getCubicControlPointA(p0, p1, p2, tensionX, tensionY);\r\n        let controlPointB = $math.getCubicControlPointB(p1, p2, p3, tensionX, tensionY);\r\n        display.bezierCurveTo(controlPointA.x, controlPointA.y, controlPointB.x, controlPointB.y, p2.x, p2.y);\r\n    }\r\n    return path;\r\n}\r\n//# sourceMappingURL=Draw.js.map","import { Graphics } from \"./Graphics\";\r\nimport * as $draw from \"../util/Draw\";\r\n/**\r\n * Draws a line.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Line extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"points\") || this.isDirty(\"segments\") || this._sizeDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            const points = this.get(\"points\");\r\n            const segments = this.get(\"segments\");\r\n            if (points && points.length > 0) {\r\n                let point = points[0];\r\n                this._display.moveTo(point.x, point.y);\r\n                $draw.segmentedLine(this._display, [[points]]);\r\n            }\r\n            else if (segments) {\r\n                $draw.segmentedLine(this._display, segments);\r\n            }\r\n            else if (!this.get(\"draw\")) {\r\n                let w = this.width();\r\n                let h = this.height();\r\n                this._display.moveTo(0, 0);\r\n                this._display.lineTo(w, h);\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Line, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Line\"\r\n});\r\nObject.defineProperty(Line, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Line.className])\r\n});\r\n//# sourceMappingURL=Line.js.map","import { Line } from \"./Line\";\r\n/**\r\n * Draws a tick element (mostly used on axes).\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n */\r\nexport class Tick extends Line {\r\n}\r\nObject.defineProperty(Tick, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Tick\"\r\n});\r\nObject.defineProperty(Tick, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Line.classNames.concat([Tick.className])\r\n});\r\n//# sourceMappingURL=Tick.js.map","import { Tick } from \"../../../core/render/Tick\";\r\n/**\r\n * Draws an axis tick.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\r\n * @important\r\n */\r\nexport class AxisTick extends Tick {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_tickPoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(AxisTick, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisTick\"\r\n});\r\nObject.defineProperty(AxisTick, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Tick.classNames.concat([AxisTick.className])\r\n});\r\n//# sourceMappingURL=AxisTick.js.map","import { Graphics } from \"../../../core/render/Graphics\";\r\n/**\r\n * Creates an axis grid line.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\r\n * @important\r\n */\r\nexport class Grid extends Graphics {\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Grid, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Grid\"\r\n});\r\nObject.defineProperty(Grid, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Grid.className])\r\n});\r\n//# sourceMappingURL=Grid.js.map","import { Label } from \"../../../core/render/Label\";\r\n/**\r\n * Draws an axis label.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\r\n * @important\r\n */\r\nexport class AxisLabel extends Label {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_tickPoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(AxisLabel, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisLabel\"\r\n});\r\nObject.defineProperty(AxisLabel, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Label.classNames.concat([AxisLabel.className])\r\n});\r\n//# sourceMappingURL=AxisLabel.js.map","import { Graphics } from \"../../../core/render/Graphics\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { Grid } from \"./Grid\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * Base class for an axis renderer.\r\n *\r\n * Should not be used on its own.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n */\r\nexport class AxisRenderer extends Graphics {\r\n    constructor() {\r\n        super(...arguments);\r\n        // save for quick access\r\n        Object.defineProperty(this, \"_axisLength\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 100\r\n        });\r\n        Object.defineProperty(this, \"_start\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_end\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_inversed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_minSize\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        /**\r\n         * Chart the renderer is used in.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_lc\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_ls\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_thumbDownPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downStart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_downEnd\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A list of ticks in the axis.\r\n         *\r\n         * `ticks.template` can be used to configure ticks.\r\n         *\r\n         * @default new ListTemplate<AxisTick>\r\n         */\r\n        Object.defineProperty(this, \"ticks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => AxisTick._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\r\n            }, [this.ticks.template]))\r\n        });\r\n        /**\r\n         * A list of grid elements in the axis.\r\n         *\r\n         * `grid.template` can be used to configure grid.\r\n         *\r\n         * @default new ListTemplate<Grid>\r\n         */\r\n        Object.defineProperty(this, \"grid\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Grid._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\r\n            }, [this.grid.template]))\r\n        });\r\n        /**\r\n         * A list of fills in the axis.\r\n         *\r\n         * `axisFills.template` can be used to configure axis fills.\r\n         *\r\n         * @default new ListTemplate<Graphics>\r\n         */\r\n        Object.defineProperty(this, \"axisFills\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\r\n            }, [this.axisFills.template]))\r\n        });\r\n        /**\r\n         * A list of labels in the axis.\r\n         *\r\n         * `labels.template` can be used to configure axis labels.\r\n         *\r\n         * @default new ListTemplate<AxisLabel>\r\n         */\r\n        Object.defineProperty(this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => AxisLabel._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\r\n            }, [this.labels.template]))\r\n        });\r\n        /**\r\n         * An [[Axis]] renderer is for.\r\n         */\r\n        Object.defineProperty(this, \"axis\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"thumb\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeTick(dataItem, themeTags) {\r\n        const tick = this.ticks.make();\r\n        tick._setDataItem(dataItem);\r\n        dataItem.setRaw(\"tick\", tick);\r\n        tick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\r\n        this.axis.labelsContainer.children.push(tick);\r\n        this.ticks.push(tick);\r\n        return tick;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeGrid(dataItem, themeTags) {\r\n        const grid = this.grid.make();\r\n        grid._setDataItem(dataItem);\r\n        dataItem.setRaw(\"grid\", grid);\r\n        grid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\r\n        this.axis.gridContainer.children.push(grid);\r\n        this.grid.push(grid);\r\n        return grid;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeAxisFill(dataItem, themeTags) {\r\n        const axisFill = this.axisFills.make();\r\n        axisFill._setDataItem(dataItem);\r\n        axisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\r\n        this.axis.gridContainer.children.push(axisFill);\r\n        dataItem.setRaw(\"axisFill\", axisFill);\r\n        this.axisFills.push(axisFill);\r\n        return axisFill;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeLabel(dataItem, themeTags) {\r\n        const label = this.labels.make();\r\n        label.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\r\n        this.axis.labelsContainer.children.moveValue(label, 0);\r\n        label._setDataItem(dataItem);\r\n        dataItem.setRaw(\"label\", label);\r\n        this.labels.push(label);\r\n        return label;\r\n    }\r\n    axisLength() {\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    gridCount() {\r\n        return this.axisLength() / this.get(\"minGridDistance\", 50);\r\n    }\r\n    _updatePositions() {\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.set(\"isMeasured\", false);\r\n        const thumb = this.thumb;\r\n        if (thumb) {\r\n            this._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\r\n                this._handleThumbDown(event.originalEvent);\r\n            }));\r\n            this._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\r\n                this._handleThumbUp(event.originalEvent);\r\n            }));\r\n            this._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\r\n                this._handleThumbMove(event.originalEvent);\r\n            }));\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"pan\")) {\r\n            const thumb = this.thumb;\r\n            if (thumb) {\r\n                const labelsContainer = this.axis.labelsContainer;\r\n                const pan = this.get(\"pan\");\r\n                if (pan == \"zoom\") {\r\n                    labelsContainer.children.push(thumb);\r\n                }\r\n                else if (pan == \"none\") {\r\n                    labelsContainer.children.removeValue(thumb);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleThumbDown(event) {\r\n        this._thumbDownPoint = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\r\n        const axis = this.axis;\r\n        this._downStart = axis.get(\"start\");\r\n        this._downEnd = axis.get(\"end\");\r\n    }\r\n    _handleThumbUp(_event) {\r\n        this._thumbDownPoint = undefined;\r\n    }\r\n    _handleThumbMove(event) {\r\n        const downPoint = this._thumbDownPoint;\r\n        if (downPoint) {\r\n            const point = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\r\n            const downStart = this._downStart;\r\n            const downEnd = this._downEnd;\r\n            const extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2;\r\n            this.axis.setAll({ start: downStart - extra, end: downEnd + extra });\r\n        }\r\n    }\r\n    _getPan(_point1, _point2) {\r\n        return 0;\r\n    }\r\n    /**\r\n     * Converts relative position (0-1) on axis to a pixel coordinate.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Coordinate (px)\r\n     */\r\n    positionToCoordinate(position) {\r\n        if (this._inversed) {\r\n            return (this._end - position) * this._axisLength;\r\n        }\r\n        else {\r\n            return (position - this._start) * this._axisLength;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltipBounds(_tooltip) { }\r\n    _updateSize() {\r\n        this.markDirty();\r\n        this._clear = true;\r\n    }\r\n    toAxisPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        position = position * (end - start);\r\n        if (!this.get(\"inversed\")) {\r\n            position = start + position;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    fixPosition(position) {\r\n        if (this.get(\"inversed\")) {\r\n            return 1 - position;\r\n        }\r\n        return position;\r\n    }\r\n    _updateLC() {\r\n    }\r\n    toggleVisibility(sprite, position, minPosition, maxPosition) {\r\n        let axis = this.axis;\r\n        const start = axis.get(\"start\", 0);\r\n        const end = axis.get(\"end\", 1);\r\n        let updatedStart = start + (end - start) * (minPosition - 0.0001);\r\n        let updatedEnd = start + (end - start) * (maxPosition + 0.0001);\r\n        if (position < updatedStart || position > updatedEnd) {\r\n            sprite.setPrivate(\"visible\", false);\r\n        }\r\n        else {\r\n            sprite.setPrivate(\"visible\", true);\r\n        }\r\n    }\r\n    _positionTooltip(tooltip, point) {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            if (chart.inPlot(point)) {\r\n                tooltip.set(\"pointTo\", this._display.toGlobal(point));\r\n            }\r\n            else {\r\n                tooltip.hide();\r\n            }\r\n        }\r\n    }\r\n    processAxis() { }\r\n}\r\nObject.defineProperty(AxisRenderer, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisRenderer\"\r\n});\r\nObject.defineProperty(AxisRenderer, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([AxisRenderer.className])\r\n});\r\n//# sourceMappingURL=AxisRenderer.js.map","import { AxisRenderer } from \"./AxisRenderer\";\r\nimport { p100 } from \"../../../core/util/Percent\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\n/**\r\n * Used to render vertical axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n * @important\r\n */\r\nexport class AxisRendererY extends AxisRenderer {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_downY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"thumb\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Rectangle.new(this._root, { height: p100, isMeasured: false, themeTags: [\"axis\", \"y\", \"thumb\"] })\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\r\n        if (this._settings.opposite) {\r\n            this._settings.themeTags.push(\"opposite\");\r\n        }\r\n        super._afterNew();\r\n        this.setPrivateRaw(\"letter\", \"Y\");\r\n        const gridTemplate = this.grid.template;\r\n        gridTemplate.set(\"width\", p100);\r\n        gridTemplate.set(\"height\", 0);\r\n        gridTemplate.set(\"draw\", (display, graphics) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(graphics.width(), 0);\r\n        });\r\n        this.set(\"draw\", (display, renderer) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(0, renderer.height());\r\n        });\r\n    }\r\n    _getPan(point1, point2) {\r\n        return (point1.y - point2.y) / this.height();\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        const axis = this.axis;\r\n        axis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\r\n        const thumb = this.thumb;\r\n        const opposite = \"opposite\";\r\n        const inside = \"inside\";\r\n        const chart = this.chart;\r\n        if (this.isDirty(opposite) || this.isDirty(inside)) {\r\n            const axisChildren = axis.children;\r\n            if (this.get(inside)) {\r\n                axis.addTag(inside);\r\n            }\r\n            else {\r\n                axis.removeTag(inside);\r\n            }\r\n            if (chart) {\r\n                if (this.get(opposite)) {\r\n                    const children = chart.rightAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.moveValue(axis, 0);\r\n                    }\r\n                    axis.addTag(opposite);\r\n                    axisChildren.moveValue(this, 0);\r\n                }\r\n                else {\r\n                    const children = chart.leftAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.moveValue(axis);\r\n                    }\r\n                    axis.removeTag(opposite);\r\n                    axisChildren.moveValue(this);\r\n                }\r\n                axis.ghostLabel._applyThemes();\r\n                this.labels.each((label) => {\r\n                    label._applyThemes();\r\n                });\r\n                this.root._markDirtyRedraw();\r\n            }\r\n            axis.markDirtySize();\r\n        }\r\n        var w = axis.labelsContainer.width();\r\n        if (chart) {\r\n            if (this.get(opposite)) {\r\n                thumb.set(\"centerX\", 0);\r\n            }\r\n            else {\r\n                thumb.set(\"centerX\", w);\r\n            }\r\n        }\r\n        thumb.setPrivate(\"width\", w);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processAxis() {\r\n        super.processAxis();\r\n        const axis = this.axis;\r\n        if (axis.get(\"height\") == null) {\r\n            axis.set(\"height\", p100);\r\n        }\r\n        const horizontalLayout = this._root.horizontalLayout;\r\n        axis.set(\"layout\", horizontalLayout);\r\n        axis.labelsContainer.set(\"height\", p100);\r\n        axis.axisHeader.set(\"layout\", horizontalLayout);\r\n    }\r\n    _updatePositions() {\r\n        const axis = this.axis;\r\n        axis.gridContainer.set(\"y\", axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height()));\r\n        axis.bulletsContainer.set(\"x\", this.x());\r\n        const chart = axis.chart;\r\n        if (chart) {\r\n            const plotContainer = chart.plotContainer;\r\n            const axisHeader = axis.axisHeader;\r\n            let height = axis.get(\"marginTop\", 0);\r\n            if (axisHeader.children.length > 0) {\r\n                height = axis.axisHeader.height();\r\n                axis.set(\"marginTop\", height + 1);\r\n            }\r\n            else {\r\n                axisHeader.set(\"height\", height);\r\n            }\r\n            axisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    axisLength() {\r\n        return this.axis.innerHeight();\r\n    }\r\n    /**\r\n     * Converts axis relative position to actual coordinate in pixels.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Point\r\n     */\r\n    positionToPoint(position) {\r\n        return { x: 0, y: this.positionToCoordinate(position) };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLabel(label, position, endPosition, count) {\r\n        if (label) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = label.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = label.get(\"location\", location);\r\n            }\r\n            const opposite = this.get(\"opposite\");\r\n            const inside = label.get(\"inside\", this.get(\"inside\", false));\r\n            if (opposite) {\r\n                label.set(\"x\", 0);\r\n                if (inside) {\r\n                    label.set(\"position\", \"absolute\");\r\n                }\r\n                else {\r\n                    label.set(\"position\", \"relative\");\r\n                }\r\n            }\r\n            else {\r\n                if (inside) {\r\n                    label.set(\"x\", 0);\r\n                    label.set(\"position\", \"absolute\");\r\n                }\r\n                else {\r\n                    label.set(\"x\", undefined);\r\n                    label.set(\"position\", \"relative\");\r\n                }\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            label.set(\"y\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateGrid(grid, position, endPosition) {\r\n        if (grid) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = grid.get(\"location\", 0.5);\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            grid.set(\"y\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(grid, position, 0, 1);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTick(tick, position, endPosition, count) {\r\n        if (tick) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = tick.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = tick.get(\"location\", location);\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            tick.set(\"y\", this.positionToCoordinate(position));\r\n            let length = tick.get(\"length\", 0);\r\n            const inside = tick.get(\"inside\", this.get(\"inside\", false));\r\n            if (this.get(\"opposite\")) {\r\n                tick.set(\"x\", 0);\r\n                if (inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            else {\r\n                if (!inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            tick.set(\"draw\", (display) => {\r\n                display.moveTo(0, 0);\r\n                display.lineTo(length, 0);\r\n            });\r\n            this.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateBullet(bullet, position, endPosition) {\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                if (!$type.isNumber(position)) {\r\n                    position = 0;\r\n                }\r\n                let location = bullet.get(\"location\", 0.5);\r\n                if ($type.isNumber(endPosition) && endPosition != position) {\r\n                    position = position + (endPosition - position) * location;\r\n                }\r\n                let bulletPosition = this.axis.roundAxisPosition(position, location);\r\n                let previousBullet = this.axis._bullets[bulletPosition];\r\n                let d = 1;\r\n                if (this.get(\"opposite\")) {\r\n                    d = -1;\r\n                }\r\n                if (bullet.get(\"stacked\")) {\r\n                    if (previousBullet) {\r\n                        let previousSprite = previousBullet.get(\"sprite\");\r\n                        if (previousSprite) {\r\n                            sprite.set(\"x\", previousSprite.x() + previousSprite.width() * d);\r\n                        }\r\n                    }\r\n                    else {\r\n                        sprite.set(\"x\", 0);\r\n                    }\r\n                }\r\n                this.axis._bullets[bulletPosition] = bullet;\r\n                sprite.set(\"y\", this.positionToCoordinate(position));\r\n                this.toggleVisibility(sprite, position, 0, 1);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateFill(fill, position, endPosition) {\r\n        if (fill) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            if (!$type.isNumber(endPosition)) {\r\n                endPosition = 1;\r\n            }\r\n            let y0 = this.positionToCoordinate(position);\r\n            let y1 = this.positionToCoordinate(endPosition);\r\n            this.fillDrawMethod(fill, y0, y1);\r\n        }\r\n    }\r\n    fillDrawMethod(fill, y0, y1) {\r\n        fill.set(\"draw\", (display) => {\r\n            // using for holes, so can not be rectangle\r\n            const w = this.axis.gridContainer.width();\r\n            const h = this.height();\r\n            if (y1 < y0) {\r\n                [y1, y0] = [y0, y1];\r\n            }\r\n            if (y0 > h || y1 < 0) {\r\n                return;\r\n            }\r\n            //y0 = Math.max(0, y0);\r\n            //y1 = Math.min(h, y1);\r\n            display.moveTo(0, y0);\r\n            display.lineTo(w, y0);\r\n            display.lineTo(w, y1);\r\n            display.lineTo(0, y1);\r\n            display.lineTo(0, y0);\r\n        });\r\n    }\r\n    /**\r\n     * Converts relative position (0-1) on axis to a pixel coordinate.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Coordinate (px)\r\n     */\r\n    positionToCoordinate(position) {\r\n        if (!this._inversed) {\r\n            return (this._end - position) * this._axisLength;\r\n        }\r\n        else {\r\n            return (position - this._start) * this._axisLength;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    positionTooltip(tooltip, position) {\r\n        this._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltipBounds(tooltip) {\r\n        const inside = this.get(\"inside\");\r\n        const num = 100000;\r\n        let global = this._display.toGlobal({ x: 0, y: 0 });\r\n        let y = global.y;\r\n        let x = 0;\r\n        let h = this.axisLength();\r\n        let w = num;\r\n        let pointerOrientation = \"right\";\r\n        if (this.get(\"opposite\")) {\r\n            if (inside) {\r\n                pointerOrientation = \"right\";\r\n                x = global.x - num;\r\n                w = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"left\";\r\n                x = global.x;\r\n                w = num;\r\n            }\r\n        }\r\n        else {\r\n            if (inside) {\r\n                pointerOrientation = \"left\";\r\n                x = global.x;\r\n                w = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"right\";\r\n                x = global.x - num;\r\n                w = num;\r\n            }\r\n        }\r\n        const bounds = { left: x, right: x + w, top: y, bottom: y + h };\r\n        const oldBounds = tooltip.get(\"bounds\");\r\n        if (!$utils.sameBounds(bounds, oldBounds)) {\r\n            tooltip.set(\"bounds\", bounds);\r\n            tooltip.set(\"pointerOrientation\", pointerOrientation);\r\n        }\r\n    }\r\n    _updateLC() {\r\n        const axis = this.axis;\r\n        const parent = axis.parent;\r\n        if (parent) {\r\n            const h = parent.innerHeight();\r\n            this._lc = this.axisLength() / h;\r\n            this._ls = axis.y() / h;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    toAxisPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        position -= this._ls;\r\n        position = position * (end - start) / this._lc;\r\n        if (this.get(\"inversed\")) {\r\n            position = start + position;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    fixPosition(position) {\r\n        if (!this.get(\"inversed\")) {\r\n            return 1 - position;\r\n        }\r\n        return position;\r\n    }\r\n}\r\nObject.defineProperty(AxisRendererY, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisRendererY\"\r\n});\r\nObject.defineProperty(AxisRendererY, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: AxisRenderer.classNames.concat([AxisRendererY.className])\r\n});\r\n//# sourceMappingURL=AxisRendererY.js.map","import { DataItem } from \"../../../core/render/Component\";\r\nimport { ValueAxis } from \"./ValueAxis\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $order from \"../../../core/util/Order\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $object from \"../../../core/util/Object\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport * as $time from \"../../../core/util/Time\";\r\n/**\r\n * Creates a date axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/} for more info\r\n * @important\r\n */\r\nexport class DateAxis extends ValueAxis {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_dataGrouped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_seriesDataGrouped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_groupingCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_intervalDuration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_baseDuration\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_intervalMax\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_intervalMin\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\r\n        super._afterNew();\r\n        this._setBaseInterval(this.get(\"baseInterval\"));\r\n        this.on(\"baseInterval\", () => {\r\n            this._setBaseInterval(this.get(\"baseInterval\"));\r\n        });\r\n    }\r\n    _setBaseInterval(interval) {\r\n        this.setPrivateRaw(\"baseInterval\", interval);\r\n        this._baseDuration = $time.getIntervalDuration(interval);\r\n    }\r\n    _fixZoomFactor() {\r\n        var maxZoomFactor = this.get(\"maxZoomFactor\");\r\n        if (maxZoomFactor != null && maxZoomFactor != Infinity) {\r\n            this.setPrivateRaw(\"maxZoomFactor\", maxZoomFactor);\r\n        }\r\n        else {\r\n            this.setPrivateRaw(\"maxZoomFactor\", Math.round((this.getPrivate(\"max\", 0) - this.getPrivate(\"min\", 0)) / this.baseMainDuration()));\r\n        }\r\n    }\r\n    _groupData() {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if (($type.isNumber(min) && $type.isNumber(max))) {\r\n            this._fixZoomFactor();\r\n            const groupInterval = this.getPrivate(\"groupInterval\");\r\n            if (groupInterval) {\r\n                this._setBaseInterval(groupInterval);\r\n            }\r\n            else {\r\n                this._setBaseInterval(this.get(\"baseInterval\"));\r\n            }\r\n            if (this.isDirty(\"groupInterval\")) {\r\n                let groupInterval = this.get(\"groupInterval\");\r\n                if (groupInterval) {\r\n                    this.setRaw(\"groupIntervals\", [groupInterval]);\r\n                }\r\n            }\r\n            if (this.isDirty(\"groupData\")) {\r\n                if (!this._dataGrouped) {\r\n                    if (this.get(\"groupData\")) {\r\n                        $array.each(this.series, (series) => {\r\n                            this._groupSeriesData(series);\r\n                        });\r\n                        this._handleRangeChange();\r\n                    }\r\n                    else {\r\n                        let baseInterval = this.get(\"baseInterval\");\r\n                        let mainDataSetId = baseInterval.timeUnit + baseInterval.count;\r\n                        $array.each(this.series, (series) => {\r\n                            series.setDataSet(mainDataSetId);\r\n                        });\r\n                        this._setBaseInterval(baseInterval);\r\n                        this.setPrivateRaw(\"groupInterval\", undefined);\r\n                        this.markDirtyExtremes();\r\n                    }\r\n                    this._dataGrouped = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _groupSeriesData(series) {\r\n        if (this.get(\"groupData\") && !series.get(\"groupDataDisabled\")) {\r\n            this._dataGrouped = true; // helps to avoid double grouping\r\n            this._seriesDataGrouped = true;\r\n            // make array of intervals which will be used;\r\n            let intervals = [];\r\n            let baseDuration = this.baseMainDuration();\r\n            let groupIntervals = this.get(\"groupIntervals\");\r\n            if (groupIntervals) { }\r\n            $array.each(groupIntervals, (interval) => {\r\n                let intervalDuration = $time.getIntervalDuration(interval);\r\n                if (intervalDuration > baseDuration) {\r\n                    intervals.push(interval);\r\n                }\r\n            });\r\n            series._dataSets = {};\r\n            const key = this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\");\r\n            let fields;\r\n            const baseAxis = series.get(\"baseAxis\");\r\n            if (series.get(\"xAxis\") === baseAxis) {\r\n                fields = series._valueYFields;\r\n            }\r\n            else if (series.get(\"yAxis\") === baseAxis) {\r\n                fields = series._valueXFields;\r\n            }\r\n            let dataItems = series._mainDataItems;\r\n            let baseInterval = this.get(\"baseInterval\");\r\n            let mainDataSetId = baseInterval.timeUnit + baseInterval.count;\r\n            series._dataSets[mainDataSetId] = dataItems;\r\n            const groupCallback = series.get(\"groupDataCallback\");\r\n            let groupOriginals = series.get(\"groupDataWithOriginals\", false);\r\n            if (groupCallback) {\r\n                groupOriginals = true;\r\n            }\r\n            const firstDay = this._root.locale.firstDayOfWeek;\r\n            const utc = this._root.utc;\r\n            const timezone = this._root.timezone;\r\n            $array.each(intervals, (interval) => {\r\n                let previousTime = -Infinity;\r\n                let dataSetId = interval.timeUnit + interval.count;\r\n                series._dataSets[dataSetId] = [];\r\n                let newDataItem;\r\n                let sum = {};\r\n                let count = {};\r\n                let groupFieldValues = {};\r\n                let workingFields = {};\r\n                $array.each(fields, (field) => {\r\n                    sum[field] = 0;\r\n                    count[field] = 0;\r\n                    groupFieldValues[field] = series.get((field + \"Grouped\"));\r\n                    workingFields[field] = field + \"Working\";\r\n                });\r\n                let intervalDuration = $time.getDuration(interval.timeUnit);\r\n                let firstItem = dataItems[0];\r\n                let firstDate;\r\n                if (firstItem) {\r\n                    firstDate = new Date(dataItems[0].get(key));\r\n                }\r\n                let prevNewDataItem;\r\n                $array.each(dataItems, (dataItem) => {\r\n                    let time = dataItem.get(key);\r\n                    let roundedTime = $time.round(new Date(time), interval.timeUnit, interval.count, firstDay, utc, firstDate, timezone).getTime();\r\n                    let dataContext;\r\n                    if (previousTime < roundedTime - intervalDuration / 24) {\r\n                        dataContext = $object.copy(dataItem.dataContext);\r\n                        newDataItem = new DataItem(series, dataContext, series._makeDataItem(dataContext));\r\n                        newDataItem.setRaw(key, roundedTime);\r\n                        series._dataSets[dataSetId].push(newDataItem);\r\n                        $array.each(fields, (field) => {\r\n                            let value = dataItem.get(field);\r\n                            if ($type.isNumber(value)) {\r\n                                newDataItem.setRaw(field, value);\r\n                                newDataItem.setRaw(workingFields[field], value);\r\n                                count[field] = 1;\r\n                                sum[field] = value;\r\n                            }\r\n                            else {\r\n                                sum[field] = 0;\r\n                                count[field] = 0;\r\n                            }\r\n                        });\r\n                        if (groupOriginals) {\r\n                            newDataItem.set(\"originals\", [dataItem]);\r\n                        }\r\n                        if (groupCallback && prevNewDataItem) {\r\n                            groupCallback(prevNewDataItem, interval);\r\n                        }\r\n                        prevNewDataItem = newDataItem;\r\n                    }\r\n                    else {\r\n                        $array.each(fields, (field) => {\r\n                            let groupKey = groupFieldValues[field];\r\n                            let value = dataItem.get(field);\r\n                            if (value !== undefined) {\r\n                                let currentValue = newDataItem.get(field);\r\n                                switch (groupKey) {\r\n                                    case \"close\":\r\n                                        newDataItem.setRaw(field, value);\r\n                                        break;\r\n                                    case \"sum\":\r\n                                        newDataItem.setRaw(field, currentValue + value);\r\n                                        break;\r\n                                    case \"open\":\r\n                                        break;\r\n                                    case \"low\":\r\n                                        if (value < currentValue) {\r\n                                            newDataItem.setRaw(field, value);\r\n                                        }\r\n                                        break;\r\n                                    case \"high\":\r\n                                        if (value > currentValue) {\r\n                                            newDataItem.setRaw(field, value);\r\n                                        }\r\n                                        break;\r\n                                    case \"average\":\r\n                                        count[field]++;\r\n                                        sum[field] += value;\r\n                                        let average = sum[field] / count[field];\r\n                                        newDataItem.setRaw(field, average);\r\n                                        break;\r\n                                    case \"extreme\":\r\n                                        if (Math.abs(value) > Math.abs(currentValue)) {\r\n                                            newDataItem.setRaw(field, value);\r\n                                        }\r\n                                        break;\r\n                                }\r\n                                newDataItem.setRaw(workingFields[field], newDataItem.get(field));\r\n                                let dataContext = $object.copy(dataItem.dataContext);\r\n                                dataContext[key] = roundedTime;\r\n                                newDataItem.dataContext = dataContext;\r\n                            }\r\n                        });\r\n                        if (groupOriginals) {\r\n                            newDataItem.get(\"originals\").push(dataItem);\r\n                        }\r\n                    }\r\n                    previousTime = roundedTime;\r\n                });\r\n                if (groupCallback && prevNewDataItem) {\r\n                    groupCallback(prevNewDataItem, interval);\r\n                }\r\n            });\r\n            if (series._dataSetId) {\r\n                series.setDataSet(series._dataSetId);\r\n            }\r\n            this.markDirtySize();\r\n        }\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._groupingCalculated = false;\r\n        this._dataGrouped = false;\r\n    }\r\n    /**\r\n     * Returns a time interval axis would group data to for a specified duration.\r\n     *\r\n     * @since 5.2.1\r\n     */\r\n    getGroupInterval(duration) {\r\n        let baseInterval = this.get(\"baseInterval\");\r\n        let groupInterval = $time.chooseInterval(0, duration, this.get(\"groupCount\", Infinity), this.get(\"groupIntervals\"));\r\n        if ($time.getIntervalDuration(groupInterval) < $time.getIntervalDuration(baseInterval)) {\r\n            groupInterval = Object.assign({}, baseInterval);\r\n        }\r\n        return groupInterval;\r\n    }\r\n    /**\r\n     * Return `max` of a specified time interval.\r\n     *\r\n     * Will work only if the axis was grouped to this interval at least once.\r\n     *\r\n     * @since 5.2.1\r\n     * @param   interval  Interval\r\n     * @return            Max\r\n     */\r\n    getIntervalMax(interval) {\r\n        return this._intervalMax[interval.timeUnit + interval.count];\r\n    }\r\n    /**\r\n     * Return `min` of a specified time interval.\r\n     *\r\n     * Will work only if the axis was grouped to this interval at least once.\r\n     *\r\n     * @since 5.2.1\r\n     * @param   interval  Interval\r\n     * @return            Min\r\n     */\r\n    getIntervalMin(interval) {\r\n        return this._intervalMin[interval.timeUnit + interval.count];\r\n    }\r\n    _handleRangeChange() {\r\n        super._handleRangeChange();\r\n        let selectionMin = Math.round(this.getPrivate(\"selectionMin\"));\r\n        let selectionMax = Math.round(this.getPrivate(\"selectionMax\"));\r\n        if ($type.isNumber(selectionMin) && $type.isNumber(selectionMax)) {\r\n            if (this.get(\"endLocation\") == 0) {\r\n                selectionMax += 1;\r\n            }\r\n            if (this.get(\"groupData\") && !this._groupingCalculated) {\r\n                this._groupingCalculated = true;\r\n                let modifiedDifference = (selectionMax - selectionMin) + (this.get(\"startLocation\", 0) + (1 - this.get(\"endLocation\", 1)) * this.baseDuration());\r\n                let groupInterval = this.get(\"groupInterval\");\r\n                if (!groupInterval) {\r\n                    groupInterval = this.getGroupInterval(modifiedDifference);\r\n                }\r\n                let current = this.getPrivate(\"groupInterval\");\r\n                if (groupInterval && (!current || (current.timeUnit !== groupInterval.timeUnit || current.count !== groupInterval.count) || this._seriesDataGrouped)) {\r\n                    this._seriesDataGrouped = false;\r\n                    this.setPrivateRaw(\"groupInterval\", groupInterval);\r\n                    this._setBaseInterval(groupInterval);\r\n                    let newId = groupInterval.timeUnit + groupInterval.count;\r\n                    $array.each(this.series, (series) => {\r\n                        if (series.get(\"baseAxis\") === this) {\r\n                            series.setDataSet(newId);\r\n                        }\r\n                    });\r\n                    this.markDirtyExtremes();\r\n                    this._root.events.once(\"frameended\", () => {\r\n                        this._root.events.once(\"frameended\", () => {\r\n                            const type = \"groupintervalchanged\";\r\n                            if (this.events.isEnabled(type)) {\r\n                                this.events.dispatch(type, { type: type, target: this });\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n            $array.each(this.series, (series) => {\r\n                if (series.get(\"baseAxis\") === this) {\r\n                    let fieldName = (this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\"));\r\n                    const start = $array.getSortedIndex(series.dataItems, (dataItem) => {\r\n                        return $order.compare(dataItem.get(fieldName), selectionMin);\r\n                    });\r\n                    let startIndex = start.index;\r\n                    if (startIndex > 0) {\r\n                        startIndex -= 1;\r\n                    }\r\n                    selectionMax += this.baseDuration() * (1 - this.get(\"endLocation\", 1));\r\n                    const end = $array.getSortedIndex(series.dataItems, (dataItem) => {\r\n                        return $order.compare(dataItem.get(fieldName), selectionMax);\r\n                    });\r\n                    let endIndex = end.index;\r\n                    let endIndex2 = endIndex;\r\n                    if (endIndex2 > 0) {\r\n                        endIndex2--;\r\n                    }\r\n                    const firstDataItem = series.dataItems[startIndex];\r\n                    const lastDataItem = series.dataItems[endIndex2];\r\n                    let lastDate;\r\n                    let firstDate;\r\n                    if (firstDataItem) {\r\n                        firstDate = firstDataItem.get(fieldName);\r\n                    }\r\n                    if (lastDataItem) {\r\n                        lastDate = lastDataItem.get(fieldName);\r\n                    }\r\n                    let outOfSelection = false;\r\n                    if (lastDate != null && firstDate != null) {\r\n                        if (lastDate < selectionMin || firstDate > selectionMax) {\r\n                            outOfSelection = true;\r\n                        }\r\n                    }\r\n                    series.setPrivate(\"outOfSelection\", outOfSelection);\r\n                    series.setPrivate(\"startIndex\", startIndex);\r\n                    series.setPrivate(\"endIndex\", endIndex);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _adjustMinMax(min, max, gridCount, _strictMode) {\r\n        return { min: min, max: max, step: (max - min) / gridCount };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    intervalDuration() {\r\n        return this._intervalDuration;\r\n    }\r\n    _saveMinMax(min, max) {\r\n        let groupInterval = this.getPrivate(\"groupInterval\");\r\n        if (!groupInterval) {\r\n            groupInterval = this.get(\"baseInterval\");\r\n        }\r\n        let id = groupInterval.timeUnit + groupInterval.count;\r\n        this._intervalMin[id] = min;\r\n        this._intervalMax[id] = max;\r\n    }\r\n    _getM(timeUnit) {\r\n        if (timeUnit == \"month\" || timeUnit == \"year\" || timeUnit == \"day\") {\r\n            return 1.05;\r\n        }\r\n        return 1.01;\r\n    }\r\n    _prepareAxisItems() {\r\n        const min = this.getPrivate(\"min\");\r\n        const max = this.getPrivate(\"max\");\r\n        if ($type.isNumber(min) && $type.isNumber(max)) {\r\n            const selectionMin = Math.round(this.getPrivate(\"selectionMin\"));\r\n            const selectionMax = Math.round(this.getPrivate(\"selectionMax\"));\r\n            const renderer = this.get(\"renderer\");\r\n            const baseInterval = this.getPrivate(\"baseInterval\");\r\n            let value = selectionMin;\r\n            let i = 0;\r\n            const intervals = this.get(\"gridIntervals\");\r\n            let gridInterval = $time.chooseInterval(0, selectionMax - selectionMin, renderer.gridCount(), intervals);\r\n            if ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\r\n                gridInterval = Object.assign({}, baseInterval);\r\n            }\r\n            const intervalDuration = $time.getIntervalDuration(gridInterval);\r\n            this._intervalDuration = intervalDuration;\r\n            const nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\r\n            const firstDay = this._root.locale.firstDayOfWeek;\r\n            const utc = this._root.utc;\r\n            const timezone = this._root.timezone;\r\n            value = $time.round(new Date(selectionMin - intervalDuration), gridInterval.timeUnit, gridInterval.count, firstDay, utc, new Date(min), timezone).getTime();\r\n            let previousValue = value - intervalDuration;\r\n            let format;\r\n            const formats = this.get(\"dateFormats\");\r\n            this.setPrivateRaw(\"gridInterval\", gridInterval);\r\n            while (value < selectionMax + intervalDuration) {\r\n                let dataItem;\r\n                if (this.dataItems.length < i + 1) {\r\n                    dataItem = new DataItem(this, undefined, {});\r\n                    this._dataItems.push(dataItem);\r\n                    this.processDataItem(dataItem);\r\n                }\r\n                else {\r\n                    dataItem = this.dataItems[i];\r\n                }\r\n                this._createAssets(dataItem, []);\r\n                if (dataItem.isHidden()) {\r\n                    dataItem.show();\r\n                }\r\n                dataItem.setRaw(\"value\", value);\r\n                let endValue = value + $time.getDuration(gridInterval.timeUnit, gridInterval.count * this._getM(gridInterval.timeUnit));\r\n                endValue = $time.round(new Date(endValue), gridInterval.timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n                dataItem.setRaw(\"endValue\", endValue);\r\n                let date = new Date(value);\r\n                format = formats[gridInterval.timeUnit];\r\n                if (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\r\n                    if (gridInterval.timeUnit != \"year\") {\r\n                        if ($time.checkChange(value, previousValue, nextGridUnit, utc, timezone)) {\r\n                            format = this.get(\"periodChangeDateFormats\")[gridInterval.timeUnit];\r\n                        }\r\n                    }\r\n                }\r\n                const label = dataItem.get(\"label\");\r\n                if (label) {\r\n                    label.set(\"text\", this._root.dateFormatter.format(date, format));\r\n                }\r\n                this._prepareDataItem(dataItem, gridInterval.count);\r\n                previousValue = value;\r\n                value = endValue;\r\n                if (value == previousValue) {\r\n                    break;\r\n                }\r\n                i++;\r\n            }\r\n            for (let j = i; j < this.dataItems.length; j++) {\r\n                this.dataItems[j].hide();\r\n            }\r\n            $array.each(this.series, (series) => {\r\n                if (series.inited) {\r\n                    series._markDirtyAxes();\r\n                }\r\n            });\r\n        }\r\n        this._updateGhost();\r\n    }\r\n    _getDelta() {\r\n        this._deltaMinMax = this.baseDuration() / 2;\r\n    }\r\n    _fixMin(min) {\r\n        const baseInterval = this.getPrivate(\"baseInterval\");\r\n        const firstDay = this._root.locale.firstDayOfWeek;\r\n        const timezone = this._root.timezone;\r\n        const utc = this._root.utc;\r\n        const timeUnit = baseInterval.timeUnit;\r\n        let startTime = $time.round(new Date(min), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\r\n        let endTime = startTime + $time.getDuration(timeUnit, baseInterval.count * this._getM(timeUnit));\r\n        endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n        return startTime + (endTime - startTime) * this.get(\"startLocation\", 0);\r\n    }\r\n    _fixMax(max) {\r\n        const baseInterval = this.getPrivate(\"baseInterval\");\r\n        const firstDay = this._root.locale.firstDayOfWeek;\r\n        const timezone = this._root.timezone;\r\n        const utc = this._root.utc;\r\n        const timeUnit = baseInterval.timeUnit;\r\n        let startTime = $time.round(new Date(max), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\r\n        let endTime = startTime + $time.getDuration(timeUnit, baseInterval.count * this._getM(timeUnit));\r\n        endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n        return startTime + (endTime - startTime) * this.get(\"endLocation\", 1);\r\n    }\r\n    _updateDates(_date) {\r\n    }\r\n    /**\r\n     * Returns a duration of currently active `baseInterval` in milliseconds.\r\n     *\r\n     * @return Duration\r\n     */\r\n    baseDuration() {\r\n        return this._baseDuration;\r\n        //return $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\r\n    }\r\n    /**\r\n     * Returns a duration of user-defined `baseInterval` in milliseconds.\r\n     *\r\n     * @return Duration\r\n     */\r\n    baseMainDuration() {\r\n        return $time.getIntervalDuration(this.get(\"baseInterval\"));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processSeriesDataItem(dataItem, fields) {\r\n        const baseInterval = this.getPrivate(\"baseInterval\");\r\n        if (!dataItem.open) {\r\n            dataItem.open = {};\r\n        }\r\n        if (!dataItem.close) {\r\n            dataItem.close = {};\r\n        }\r\n        $array.each(fields, (field) => {\r\n            let value = dataItem.get(field);\r\n            if ($type.isNumber(value)) {\r\n                let startTime = dataItem.open[field];\r\n                let endTime = dataItem.close[field];\r\n                // this is done to save cpu, as rounding is quite expensive, especially with timezone set. \r\n                // if value is between prev start and end, it means it didn't change, all is fine.\r\n                if (value >= startTime && value <= endTime) {\r\n                }\r\n                else {\r\n                    const firstDay = this._root.locale.firstDayOfWeek;\r\n                    const utc = this._root.utc;\r\n                    const timezone = this._root.timezone;\r\n                    const timeUnit = baseInterval.timeUnit;\r\n                    const count = baseInterval.count;\r\n                    startTime = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\r\n                    endTime = startTime + $time.getDuration(timeUnit, count * this._getM(timeUnit));\r\n                    endTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\r\n                    dataItem.open[field] = startTime;\r\n                    dataItem.close[field] = endTime;\r\n                }\r\n                this._updateDates(startTime);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionX(dataItem, field, cellLocation, axisLocation) {\r\n        let openValue;\r\n        let closeValue;\r\n        if (dataItem.open && dataItem.close) {\r\n            openValue = dataItem.open[field];\r\n            closeValue = dataItem.close[field];\r\n        }\r\n        else {\r\n            openValue = dataItem.get(field);\r\n            closeValue = openValue;\r\n        }\r\n        let value = openValue + (closeValue - openValue) * cellLocation;\r\n        value = this._baseValue + (value - this._baseValue) * axisLocation;\r\n        return this.valueToPosition(value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateX(dataItem, field, cellLocation, axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionY(dataItem, field, cellLocation, axisLocation) {\r\n        let openValue;\r\n        let closeValue;\r\n        if (dataItem.open && dataItem.close) {\r\n            openValue = dataItem.open[field];\r\n            closeValue = dataItem.close[field];\r\n        }\r\n        else {\r\n            openValue = dataItem.get(field);\r\n            closeValue = openValue;\r\n        }\r\n        let value = openValue + (closeValue - openValue) * cellLocation;\r\n        value = this._baseValue + (value - this._baseValue) * axisLocation;\r\n        return this.valueToPosition(value);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateY(dataItem, field, cellLocation, axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    roundAxisPosition(position, location) {\r\n        let value = this.positionToValue(position);\r\n        value = value - (location - 0.5) * this.baseDuration();\r\n        let baseInterval = this.getPrivate(\"baseInterval\");\r\n        if (!$type.isNaN(value)) {\r\n            const firstDay = this._root.locale.firstDayOfWeek;\r\n            const timeUnit = baseInterval.timeUnit;\r\n            const utc = this._root.utc;\r\n            const timezone = this._root.timezone;\r\n            const count = baseInterval.count;\r\n            value = $time.round(new Date(value), timeUnit, count, firstDay, utc, new Date(this.getPrivate(\"min\", 0)), timezone).getTime();\r\n            let duration = $time.getDateIntervalDuration(baseInterval, new Date(value), firstDay, utc, timezone);\r\n            if (timezone) {\r\n                value = $time.round(new Date(value + this.baseDuration() * 0.05), timeUnit, count, firstDay, utc, new Date(this.getPrivate(\"min\", 0)), timezone).getTime();\r\n                duration = $time.getDateIntervalDuration(baseInterval, new Date(value + duration * location), firstDay, utc, timezone);\r\n            }\r\n            return this.valueToPosition(value + duration * location);\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Returns text to be used in an axis tooltip for specific relative position.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Tooltip text\r\n     */\r\n    getTooltipText(position) {\r\n        //@todo number formatter + tag\r\n        if (this.getPrivate(\"min\") != null) {\r\n            let format = this.get(\"tooltipDateFormats\")[this.getPrivate(\"baseInterval\").timeUnit];\r\n            let value = this.positionToValue(position);\r\n            let date = new Date(value);\r\n            let baseInterval = this.getPrivate(\"baseInterval\");\r\n            let duration = $time.getDateIntervalDuration(baseInterval, date, this._root.locale.firstDayOfWeek, this._root.utc, this._root.timezone);\r\n            return this._root.dateFormatter.format(new Date(value + this.get(\"tooltipIntervalOffset\", -this.get(\"tooltipLocation\", 0.5)) * duration), this.get(\"tooltipDateFormat\", format));\r\n        }\r\n        return \"\";\r\n    }\r\n    /**\r\n     * Returns a data item from series that is closest to the `position`.\r\n     *\r\n     * @param   series    Series\r\n     * @param   position  Relative position\r\n     * @return            Data item\r\n     */\r\n    getSeriesItem(series, position, location) {\r\n        let fieldName = (this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\"));\r\n        let value = this.positionToValue(position);\r\n        if (location == null) {\r\n            location = 0.5;\r\n        }\r\n        value = value - (location - 0.5) * this.baseDuration();\r\n        const result = $array.getSortedIndex(series.dataItems, (dataItem) => {\r\n            var diValue = 0;\r\n            if (dataItem.open) {\r\n                diValue = dataItem.open[fieldName];\r\n            }\r\n            return $order.compare(diValue, value);\r\n        });\r\n        if (series.get(\"snapTooltip\")) {\r\n            let first = series.dataItems[result.index - 1];\r\n            let second = series.dataItems[result.index];\r\n            if (first && second) {\r\n                if (first.open && second.close) {\r\n                    let open = first.open[fieldName];\r\n                    let close = second.close[fieldName];\r\n                    if (Math.abs(value - open) > Math.abs(value - close)) {\r\n                        return second;\r\n                    }\r\n                }\r\n            }\r\n            if (first) {\r\n                return first;\r\n            }\r\n            if (second) {\r\n                return second;\r\n            }\r\n        }\r\n        else {\r\n            // @todo check if is in range\r\n            const dataItem = series.dataItems[result.index - 1];\r\n            if (dataItem) {\r\n                if (dataItem.open && dataItem.close) {\r\n                    let open = dataItem.open[fieldName];\r\n                    let close = dataItem.close[fieldName];\r\n                    if (value >= open && value <= close) {\r\n                        return dataItem;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    shouldGap(dataItem, nextItem, autoGapCount, fieldName) {\r\n        const value1 = dataItem.get(fieldName);\r\n        const value2 = nextItem.get(fieldName);\r\n        if (value2 - value1 > this.baseDuration() * autoGapCount) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Zooms the axis to specific `start` and `end` dates.\r\n     *\r\n     * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n     *\r\n     * @param  start     Start Date\r\n     * @param  end       End Date\r\n     * @param  duration  Duration in milliseconds\r\n     */\r\n    zoomToDates(start, end, duration) {\r\n        this.zoomToValues(start.getTime(), end.getTime(), duration);\r\n    }\r\n    /**\r\n     * Returns a `Date` object corresponding to specific position within plot\r\n     * area.\r\n     *\r\n     * @param   position  Pposition\r\n     * @return            Date\r\n     */\r\n    positionToDate(position) {\r\n        return new Date(this.positionToValue(position));\r\n    }\r\n    /**\r\n     * Returns a relative position within plot area that corresponds to specific\r\n     * date.\r\n     *\r\n     * @param   date  Date\r\n     * @return        Position\r\n     */\r\n    dateToPosition(date) {\r\n        return this.valueToPosition(date.getTime());\r\n    }\r\n    /**\r\n     * Returns position span between start and end of a single cell in axis.\r\n     *\r\n     * @since 5.2.30\r\n     * @return Position\r\n     * @ignore\r\n     */\r\n    getCellWidthPosition() {\r\n        let max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\r\n        let min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\r\n        if ($type.isNumber(max) && $type.isNumber(min)) {\r\n            return this.baseDuration() / (max - min);\r\n        }\r\n        return 0.05;\r\n    }\r\n}\r\nObject.defineProperty(DateAxis, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"DateAxis\"\r\n});\r\nObject.defineProperty(DateAxis, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: ValueAxis.classNames.concat([DateAxis.className])\r\n});\r\n//# sourceMappingURL=DateAxis.js.map","import { AxisRenderer } from \"./AxisRenderer\";\r\nimport { p100 } from \"../../../core/util/Percent\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\n/**\r\n * Used to render horizontal axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n * @important\r\n */\r\nexport class AxisRendererX extends AxisRenderer {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"thumb\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Rectangle.new(this._root, { width: p100, isMeasured: false, themeTags: [\"axis\", \"x\", \"thumb\"] })\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\r\n        super._afterNew();\r\n        this.setPrivateRaw(\"letter\", \"X\");\r\n        const gridTemplate = this.grid.template;\r\n        gridTemplate.set(\"height\", p100);\r\n        gridTemplate.set(\"width\", 0);\r\n        gridTemplate.set(\"draw\", (display, graphics) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(0, graphics.height());\r\n        });\r\n        this.set(\"draw\", (display, graphics) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(graphics.width(), 0);\r\n        });\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        const axis = this.axis;\r\n        axis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\r\n        const opposite = \"opposite\";\r\n        const inside = \"inside\";\r\n        if (this.isDirty(opposite) || this.isDirty(inside)) {\r\n            const chart = this.chart;\r\n            const axisChildren = axis.children;\r\n            if (this.get(inside)) {\r\n                axis.addTag(inside);\r\n            }\r\n            else {\r\n                axis.removeTag(inside);\r\n            }\r\n            if (chart) {\r\n                if (this.get(opposite)) {\r\n                    const children = chart.topAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.insertIndex(0, axis);\r\n                    }\r\n                    axis.addTag(opposite);\r\n                    axisChildren.moveValue(this);\r\n                }\r\n                else {\r\n                    const children = chart.bottomAxesContainer.children;\r\n                    if (children.indexOf(axis) == -1) {\r\n                        children.moveValue(axis);\r\n                    }\r\n                    axis.removeTag(opposite);\r\n                    axisChildren.moveValue(this, 0);\r\n                }\r\n                axis.ghostLabel._applyThemes();\r\n                this.labels.each((label) => {\r\n                    label._applyThemes();\r\n                });\r\n                this.root._markDirtyRedraw();\r\n            }\r\n            axis.markDirtySize();\r\n        }\r\n        this.thumb.setPrivate(\"height\", axis.labelsContainer.height());\r\n    }\r\n    _getPan(point1, point2) {\r\n        return (point2.x - point1.x) / this.width();\r\n    }\r\n    toAxisPosition(position) {\r\n        const start = this._start || 0;\r\n        const end = this._end || 1;\r\n        position -= this._ls;\r\n        position = position * (end - start) / this._lc;\r\n        if (!this.get(\"inversed\")) {\r\n            position = start + position;\r\n        }\r\n        else {\r\n            position = end - position;\r\n        }\r\n        return position;\r\n    }\r\n    _updateLC() {\r\n        const axis = this.axis;\r\n        const parent = axis.parent;\r\n        if (parent) {\r\n            const w = parent.innerWidth();\r\n            this._lc = this.axisLength() / w;\r\n            this._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\r\n        }\r\n    }\r\n    _updatePositions() {\r\n        const axis = this.axis;\r\n        axis.gridContainer.set(\"x\", axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent.get(\"paddingLeft\", 0));\r\n        axis.bulletsContainer.set(\"y\", this.y());\r\n        const chart = axis.chart;\r\n        if (chart) {\r\n            const plotContainer = chart.plotContainer;\r\n            const axisHeader = axis.axisHeader;\r\n            let width = axis.get(\"marginLeft\", 0);\r\n            let x = axis.x() - width;\r\n            const parent = axis.parent;\r\n            if (parent) {\r\n                x -= parent.get(\"paddingLeft\", 0);\r\n            }\r\n            if (axisHeader.children.length > 0) {\r\n                width = axis.axisHeader.width();\r\n                axis.set(\"marginLeft\", width + 1);\r\n            }\r\n            else {\r\n                axisHeader.set(\"width\", width);\r\n            }\r\n            axisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processAxis() {\r\n        super.processAxis();\r\n        const axis = this.axis;\r\n        axis.set(\"width\", p100);\r\n        const verticalLayout = this._root.verticalLayout;\r\n        axis.set(\"layout\", verticalLayout);\r\n        axis.labelsContainer.set(\"width\", p100);\r\n        axis.axisHeader.setAll({ layout: verticalLayout });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    axisLength() {\r\n        return this.axis.width();\r\n    }\r\n    /**\r\n     * Converts axis relative position to actual coordinate in pixels.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Point\r\n     */\r\n    positionToPoint(position) {\r\n        return { x: this.positionToCoordinate(position), y: 0 };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTick(tick, position, endPosition, count) {\r\n        if (tick) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = tick.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = tick.get(\"location\", location);\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            tick.set(\"x\", this.positionToCoordinate(position));\r\n            let length = tick.get(\"length\", 0);\r\n            const inside = tick.get(\"inside\", this.get(\"inside\", false));\r\n            if (this.get(\"opposite\")) {\r\n                tick.set(\"y\", p100);\r\n                if (!inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            else {\r\n                tick.set(\"y\", 0);\r\n                if (inside) {\r\n                    length *= -1;\r\n                }\r\n            }\r\n            tick.set(\"draw\", (display) => {\r\n                display.moveTo(0, 0);\r\n                display.lineTo(0, length);\r\n            });\r\n            this.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLabel(label, position, endPosition, count) {\r\n        if (label) {\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = label.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = label.get(\"location\", location);\r\n            }\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            const inside = label.get(\"inside\", this.get(\"inside\", false));\r\n            const opposite = this.get(\"opposite\");\r\n            if (opposite) {\r\n                if (!inside) {\r\n                    label.set(\"position\", \"relative\");\r\n                    label.set(\"y\", p100);\r\n                }\r\n                else {\r\n                    label.set(\"position\", \"absolute\");\r\n                    label.set(\"y\", 0);\r\n                }\r\n            }\r\n            else {\r\n                if (!inside) {\r\n                    label.set(\"y\", undefined);\r\n                    label.set(\"position\", \"relative\");\r\n                }\r\n                else {\r\n                    label.set(\"y\", 0);\r\n                    label.set(\"position\", \"absolute\");\r\n                }\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            label.set(\"x\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateGrid(grid, position, endPosition) {\r\n        if (grid) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = grid.get(\"location\", 0.5);\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            grid.set(\"x\", this.positionToCoordinate(position));\r\n            this.toggleVisibility(grid, position, 0, 1);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateBullet(bullet, position, endPosition) {\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                if (!$type.isNumber(position)) {\r\n                    position = 0;\r\n                }\r\n                let location = bullet.get(\"location\", 0.5);\r\n                if ($type.isNumber(endPosition) && endPosition != position) {\r\n                    position = position + (endPosition - position) * location;\r\n                }\r\n                let bulletPosition = this.axis.roundAxisPosition(position, location);\r\n                let previousBullet = this.axis._bullets[bulletPosition];\r\n                let d = -1;\r\n                if (this.get(\"opposite\")) {\r\n                    d = 1;\r\n                }\r\n                if (bullet.get(\"stacked\")) {\r\n                    if (previousBullet) {\r\n                        let previousSprite = previousBullet.get(\"sprite\");\r\n                        if (previousSprite) {\r\n                            sprite.set(\"y\", previousSprite.y() + previousSprite.height() * d);\r\n                        }\r\n                    }\r\n                    else {\r\n                        sprite.set(\"y\", 0);\r\n                    }\r\n                }\r\n                this.axis._bullets[bulletPosition] = bullet;\r\n                sprite.set(\"x\", this.positionToCoordinate(position));\r\n                this.toggleVisibility(sprite, position, 0, 1);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateFill(fill, position, endPosition) {\r\n        if (fill) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            if (!$type.isNumber(endPosition)) {\r\n                endPosition = 1;\r\n            }\r\n            let x0 = this.positionToCoordinate(position);\r\n            let x1 = this.positionToCoordinate(endPosition);\r\n            this.fillDrawMethod(fill, x0, x1);\r\n        }\r\n    }\r\n    fillDrawMethod(fill, x0, x1) {\r\n        fill.set(\"draw\", (display) => {\r\n            //display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\r\n            // using for holes, so can not be rectangle\r\n            const h = this.axis.gridContainer.height();\r\n            const w = this.width();\r\n            if (x1 < x0) {\r\n                [x1, x0] = [x0, x1];\r\n            }\r\n            if (x0 > w || x1 < 0) {\r\n                return;\r\n            }\r\n            /*\r\n            const limit = 10000;\r\n\r\n            x0 = Math.max(-limit, x0);\r\n            x1 = Math.min(limit, x1);\r\n            */\r\n            display.moveTo(x0, 0);\r\n            display.lineTo(x1, 0);\r\n            display.lineTo(x1, h);\r\n            display.lineTo(x0, h);\r\n            display.lineTo(x0, 0);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    positionTooltip(tooltip, position) {\r\n        this._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltipBounds(tooltip) {\r\n        const inside = this.get(\"inside\");\r\n        const num = 100000;\r\n        let global = this._display.toGlobal({ x: 0, y: 0 });\r\n        let x = global.x;\r\n        let y = 0;\r\n        let w = this.axisLength();\r\n        let h = num;\r\n        let pointerOrientation = \"up\";\r\n        if (this.get(\"opposite\")) {\r\n            if (inside) {\r\n                pointerOrientation = \"up\";\r\n                y = global.y;\r\n                h = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"down\";\r\n                y = global.y - num;\r\n                h = num;\r\n            }\r\n        }\r\n        else {\r\n            if (inside) {\r\n                pointerOrientation = \"down\";\r\n                y = global.y - num;\r\n                h = num;\r\n            }\r\n            else {\r\n                pointerOrientation = \"up\";\r\n                y = global.y;\r\n                h = num;\r\n            }\r\n        }\r\n        const bounds = { left: x, right: x + w, top: y, bottom: y + h };\r\n        const oldBounds = tooltip.get(\"bounds\");\r\n        if (!$utils.sameBounds(bounds, oldBounds)) {\r\n            tooltip.set(\"bounds\", bounds);\r\n            tooltip.set(\"pointerOrientation\", pointerOrientation);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(AxisRendererX, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisRendererX\"\r\n});\r\nObject.defineProperty(AxisRendererX, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: AxisRenderer.classNames.concat([AxisRendererX.className])\r\n});\r\n//# sourceMappingURL=AxisRendererX.js.map","import { __awaiter } from \"tslib\";\r\nimport { Component } from \"../../core/render/Component\";\r\nimport { List } from \"../../core/util/List\";\r\nimport { Color } from \"../../core/util/Color\";\r\nimport { percentInterpolate } from \"../../core/util/Animation\";\r\nimport { Percent } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $time from \"../../core/util/Time\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Label } from \"../../core/render/Label\";\r\n/**\r\n * A base class for all series.\r\n */\r\nexport class Series extends Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_aggregatesCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_selectionAggregatesCalculated\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataProcessed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_psi\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_pei\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A chart series belongs to.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * List of bullets to use for the series.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\r\n         */\r\n        Object.defineProperty(this, \"bullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new List()\r\n        });\r\n        /**\r\n         * A [[Container]] series' bullets are stored in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"bulletsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: Container.new(this._root, { width: p100, height: p100, position: \"absolute\" })\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.valueFields.push(\"value\");\r\n        super._afterNew();\r\n        this.setPrivate(\"customData\", {});\r\n        this._disposers.push(this.bullets.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._handleBullets(this.dataItems);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IListEvent type\");\r\n            }\r\n        }));\r\n    }\r\n    _dispose() {\r\n        this.bulletsContainer.dispose(); // can be in a different parent\r\n        super._dispose();\r\n    }\r\n    startIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.min(this.getPrivate(\"startIndex\", 0), len);\r\n    }\r\n    endIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.min(this.getPrivate(\"endIndex\", len), len);\r\n    }\r\n    _handleBullets(dataItems) {\r\n        $array.each(dataItems, (dataItem) => {\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    bullet.dispose();\r\n                });\r\n                dataItem.bullets = undefined;\r\n            }\r\n        });\r\n        this.markDirtyValues();\r\n    }\r\n    /**\r\n     * Looks up and returns a data item by its ID.\r\n     *\r\n     * @param   id  ID\r\n     * @return      Data item\r\n     */\r\n    getDataItemById(id) {\r\n        return $array.find(this.dataItems, (dataItem) => {\r\n            return dataItem.get(\"id\") == id;\r\n        });\r\n    }\r\n    _makeBullets(dataItem) {\r\n        if (this._shouldMakeBullet(dataItem)) {\r\n            dataItem.bullets = [];\r\n            this.bullets.each((bulletFunction) => {\r\n                this._makeBullet(dataItem, bulletFunction);\r\n            });\r\n        }\r\n    }\r\n    _shouldMakeBullet(_dataItem) {\r\n        return true;\r\n    }\r\n    _makeBullet(dataItem, bulletFunction, index) {\r\n        const bullet = bulletFunction(this._root, this, dataItem);\r\n        if (bullet) {\r\n            let sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                sprite._setDataItem(dataItem);\r\n                sprite.setRaw(\"position\", \"absolute\");\r\n                this.bulletsContainer.children.push(sprite);\r\n            }\r\n            bullet._index = index;\r\n            bullet.series = this;\r\n            dataItem.bullets.push(bullet);\r\n        }\r\n        return bullet;\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._aggregatesCalculated = false;\r\n        this._selectionAggregatesCalculated = false;\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        let startIndex = this.startIndex();\r\n        let endIndex = this.endIndex();\r\n        if (this.isDirty(\"heatRules\")) {\r\n            this._valuesDirty = true;\r\n        }\r\n        if (this.isPrivateDirty(\"baseValueSeries\")) {\r\n            const baseValueSeries = this.getPrivate(\"baseValueSeries\");\r\n            if (baseValueSeries) {\r\n                this._disposers.push(baseValueSeries.onPrivate(\"startIndex\", () => {\r\n                    this.markDirtyValues();\r\n                }));\r\n            }\r\n        }\r\n        const calculateAggregates = this.get(\"calculateAggregates\");\r\n        if (calculateAggregates) {\r\n            if (this._valuesDirty && !this._dataProcessed) {\r\n                if (!this._aggregatesCalculated) {\r\n                    this._calculateAggregates(0, this.dataItems.length);\r\n                    this._aggregatesCalculated = true;\r\n                }\r\n            }\r\n            if ((this._psi != startIndex || this._pei != endIndex) && !this._selectionAggregatesCalculated) {\r\n                if (startIndex === 0 && endIndex === this.dataItems.length && this._aggregatesCalculated) {\r\n                    // void\r\n                }\r\n                else {\r\n                    this._calculateAggregates(startIndex, endIndex);\r\n                }\r\n                this._selectionAggregatesCalculated = true;\r\n            }\r\n        }\r\n        if (this.isDirty(\"tooltip\")) {\r\n            let tooltip = this.get(\"tooltip\");\r\n            if (tooltip) {\r\n                tooltip.hide(0);\r\n                tooltip.set(\"tooltipTarget\", this);\r\n            }\r\n        }\r\n        if (this.isDirty(\"fill\") || this.isDirty(\"stroke\")) {\r\n            let markerRectangle;\r\n            const legendDataItem = this.get(\"legendDataItem\");\r\n            if (legendDataItem) {\r\n                markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n                if (markerRectangle) {\r\n                    if (this.isVisible()) {\r\n                        if (this.isDirty(\"stroke\")) {\r\n                            let stroke = this.get(\"stroke\");\r\n                            markerRectangle.set(\"stroke\", stroke);\r\n                        }\r\n                        if (this.isDirty(\"fill\")) {\r\n                            let fill = this.get(\"fill\");\r\n                            markerRectangle.set(\"fill\", fill);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.updateLegendMarker(undefined);\r\n        }\r\n        if (this.bullets.length > 0) {\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            if (endIndex < this.dataItems.length) {\r\n                endIndex++;\r\n            }\r\n            for (let i = startIndex; i < endIndex; i++) {\r\n                let dataItem = this.dataItems[i];\r\n                if (!dataItem.bullets) {\r\n                    this._makeBullets(dataItem);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _calculateAggregates(startIndex, endIndex) {\r\n        let fields = this._valueFields;\r\n        if (!fields) {\r\n            throw new Error(\"No value fields are set for the series.\");\r\n        }\r\n        const sum = {};\r\n        const absSum = {};\r\n        const count = {};\r\n        const low = {};\r\n        const high = {};\r\n        const open = {};\r\n        const close = {};\r\n        const average = {};\r\n        const previous = {};\r\n        $array.each(fields, (key) => {\r\n            sum[key] = 0;\r\n            absSum[key] = 0;\r\n            count[key] = 0;\r\n        });\r\n        $array.each(fields, (key) => {\r\n            let change = key + \"Change\";\r\n            let changePercent = key + \"ChangePercent\";\r\n            let changePrevious = key + \"ChangePrevious\";\r\n            let changePreviousPercent = key + \"ChangePreviousPercent\";\r\n            let changeSelection = key + \"ChangeSelection\";\r\n            let changeSelectionPercent = key + \"ChangeSelectionPercent\";\r\n            let openKey = \"valueY\";\r\n            if (key == \"valueX\" || key == \"openValueX\" || key == \"lowValueX\" || key == \"highValueX\") {\r\n                openKey = \"valueX\";\r\n            }\r\n            const baseValueSeries = this.getPrivate(\"baseValueSeries\");\r\n            for (let i = startIndex; i < endIndex; i++) {\r\n                const dataItem = this.dataItems[i];\r\n                let value = dataItem.get(key);\r\n                if (value != null) {\r\n                    count[key]++;\r\n                    sum[key] += value;\r\n                    absSum[key] += Math.abs(value);\r\n                    average[key] = sum[key] / count[key];\r\n                    if (low[key] > value || low[key] == null) {\r\n                        low[key] = value;\r\n                    }\r\n                    if (high[key] < value || high[key] == null) {\r\n                        high[key] = value;\r\n                    }\r\n                    close[key] = value;\r\n                    if (open[key] == null) {\r\n                        open[key] = value;\r\n                        previous[key] = value;\r\n                        if (baseValueSeries) {\r\n                            open[openKey] = baseValueSeries._getBase(openKey);\r\n                        }\r\n                    }\r\n                    if (startIndex === 0) {\r\n                        dataItem.setRaw((change), value - open[openKey]);\r\n                        dataItem.setRaw((changePercent), (value - open[openKey]) / open[openKey] * 100);\r\n                    }\r\n                    dataItem.setRaw((changePrevious), value - previous[openKey]);\r\n                    dataItem.setRaw((changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\r\n                    dataItem.setRaw((changeSelection), value - open[openKey]);\r\n                    dataItem.setRaw((changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\r\n                    previous[key] = value;\r\n                }\r\n            }\r\n        });\r\n        $array.each(fields, (key) => {\r\n            this.setPrivate((key + \"AverageSelection\"), average[key]);\r\n            this.setPrivate((key + \"CountSelection\"), count[key]);\r\n            this.setPrivate((key + \"SumSelection\"), sum[key]);\r\n            this.setPrivate((key + \"AbsoluteSumSelection\"), absSum[key]);\r\n            this.setPrivate((key + \"LowSelection\"), low[key]);\r\n            this.setPrivate((key + \"HighSelection\"), high[key]);\r\n            this.setPrivate((key + \"OpenSelection\"), open[key]);\r\n            this.setPrivate((key + \"CloseSelection\"), close[key]);\r\n        });\r\n        if (startIndex === 0 && endIndex === this.dataItems.length) {\r\n            $array.each(fields, (key) => {\r\n                this.setPrivate((key + \"Average\"), average[key]);\r\n                this.setPrivate((key + \"Count\"), count[key]);\r\n                this.setPrivate((key + \"Sum\"), sum[key]);\r\n                this.setPrivate((key + \"AbsoluteSum\"), absSum[key]);\r\n                this.setPrivate((key + \"Low\"), low[key]);\r\n                this.setPrivate((key + \"High\"), high[key]);\r\n                this.setPrivate((key + \"Open\"), open[key]);\r\n                this.setPrivate((key + \"Close\"), close[key]);\r\n            });\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        this._psi = this.startIndex();\r\n        this._pei = this.endIndex();\r\n        if (this.isDirty(\"visible\")) {\r\n            this.bulletsContainer.set(\"visible\", this.get(\"visible\"));\r\n        }\r\n        // Apply heat rules\r\n        const rules = this.get(\"heatRules\");\r\n        if (this._valuesDirty && rules && rules.length > 0) {\r\n            $array.each(rules, (rule) => {\r\n                const minValue = rule.minValue || this.getPrivate((rule.dataField + \"Low\")) || 0;\r\n                const maxValue = rule.maxValue || this.getPrivate((rule.dataField + \"High\")) || 0;\r\n                $array.each(rule.target._entities, (target) => {\r\n                    const value = target.dataItem.get(rule.dataField);\r\n                    if (!$type.isNumber(value)) {\r\n                        if (rule.neutral) {\r\n                            target.set(rule.key, rule.neutral);\r\n                        }\r\n                        return;\r\n                    }\r\n                    let percent;\r\n                    if (rule.logarithmic) {\r\n                        percent = (Math.log(value) * Math.LOG10E - Math.log(minValue) * Math.LOG10E) / ((Math.log(maxValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E));\r\n                    }\r\n                    else {\r\n                        percent = (value - minValue) / (maxValue - minValue);\r\n                    }\r\n                    if ($type.isNumber(value) && (!$type.isNumber(percent) || Math.abs(percent) == Infinity)) {\r\n                        percent = 0.5;\r\n                    }\r\n                    // fixes problems if all values are the same\r\n                    let propertyValue;\r\n                    if ($type.isNumber(rule.min)) {\r\n                        propertyValue = rule.min + (rule.max - rule.min) * percent;\r\n                    }\r\n                    else if (rule.min instanceof Color) {\r\n                        propertyValue = Color.interpolate(percent, rule.min, rule.max);\r\n                    }\r\n                    else if (rule.min instanceof Percent) {\r\n                        propertyValue = percentInterpolate(percent, rule.min, rule.max);\r\n                    }\r\n                    if (rule.customFunction) {\r\n                        rule.customFunction.call(this, target, minValue, maxValue, value);\r\n                    }\r\n                    else {\r\n                        target.set(rule.key, propertyValue);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        if (this.bullets.length > 0) {\r\n            let count = this.dataItems.length;\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            if (endIndex < count) {\r\n                endIndex++;\r\n            }\r\n            if (startIndex > 0) {\r\n                startIndex--;\r\n            }\r\n            for (let i = 0; i < startIndex; i++) {\r\n                this._hideBullets(this.dataItems[i]);\r\n            }\r\n            for (let i = startIndex; i < endIndex; i++) {\r\n                this._positionBullets(this.dataItems[i]);\r\n            }\r\n            for (let i = endIndex; i < count; i++) {\r\n                this._hideBullets(this.dataItems[i]);\r\n            }\r\n        }\r\n    }\r\n    _positionBullets(dataItem) {\r\n        if (dataItem.bullets) {\r\n            $array.each(dataItem.bullets, (bullet) => {\r\n                this._positionBullet(bullet);\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (bullet.get(\"dynamic\")) {\r\n                    if (sprite) {\r\n                        sprite._markDirtyKey(\"fill\");\r\n                        sprite.markDirtySize();\r\n                    }\r\n                    if (sprite instanceof Container) {\r\n                        sprite.walkChildren((child) => {\r\n                            child._markDirtyKey(\"fill\");\r\n                            child.markDirtySize();\r\n                            if (child instanceof Label) {\r\n                                child.text.markDirtyText();\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                if (sprite instanceof Label && sprite.get(\"populateText\")) {\r\n                    sprite.text.markDirtyText();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _hideBullets(dataItem) {\r\n        if (dataItem.bullets) {\r\n            $array.each(dataItem.bullets, (bullet) => {\r\n                let sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite.setPrivate(\"visible\", false);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _positionBullet(_bullet) {\r\n    }\r\n    _placeBulletsContainer(chart) {\r\n        chart.bulletsContainer.children.moveValue(this.bulletsContainer);\r\n    }\r\n    _removeBulletsContainer() {\r\n        const bulletsContainer = this.bulletsContainer;\r\n        if (bulletsContainer.parent) {\r\n            bulletsContainer.parent.children.removeValue(bulletsContainer);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        //super.disposeDataItem(dataItem); // does nothing\r\n        const bullets = dataItem.bullets;\r\n        if (bullets) {\r\n            $array.each(bullets, (bullet) => {\r\n                bullet.dispose();\r\n            });\r\n        }\r\n    }\r\n    _getItemReaderLabel() {\r\n        return \"\";\r\n    }\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    promises.push(bullet.get(\"sprite\").show(duration));\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const bullets = dataItem.bullets;\r\n            if (bullets) {\r\n                $array.each(bullets, (bullet) => {\r\n                    promises.push(bullet.get(\"sprite\").hide(duration));\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    _sequencedShowHide(show, duration) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.get(\"sequencedInterpolation\")) {\r\n                if (!$type.isNumber(duration)) {\r\n                    duration = this.get(\"interpolationDuration\", 0);\r\n                }\r\n                if (duration > 0) {\r\n                    const startIndex = this.startIndex();\r\n                    const endIndex = this.endIndex();\r\n                    yield Promise.all($array.map(this.dataItems, (dataItem, i) => __awaiter(this, void 0, void 0, function* () {\r\n                        let realDuration = duration || 0;\r\n                        if (i < startIndex - 10 || i > endIndex + 10) {\r\n                            realDuration = 0;\r\n                        }\r\n                        //let delay = this.get(\"sequencedDelay\", 0) * i + realDuration * (i - startIndex) / (endIndex - startIndex);\r\n                        let delay = this.get(\"sequencedDelay\", 0) + realDuration / (endIndex - startIndex);\r\n                        yield $time.sleep(delay * (i - startIndex));\r\n                        if (show) {\r\n                            yield this.showDataItem(dataItem, realDuration);\r\n                        }\r\n                        else {\r\n                            yield this.hideDataItem(dataItem, realDuration);\r\n                        }\r\n                    })));\r\n                }\r\n                else {\r\n                    yield Promise.all($array.map(this.dataItems, (dataItem) => {\r\n                        if (show) {\r\n                            return this.showDataItem(dataItem, 0);\r\n                        }\r\n                        else {\r\n                            return this.hideDataItem(dataItem, 0);\r\n                        }\r\n                    }));\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendValue(dataItem) {\r\n        if (dataItem) {\r\n            const legendDataItem = dataItem.get(\"legendDataItem\");\r\n            if (legendDataItem) {\r\n                const valueLabel = legendDataItem.get(\"valueLabel\");\r\n                if (valueLabel) {\r\n                    const text = valueLabel.text;\r\n                    let txt = \"\";\r\n                    valueLabel._setDataItem(dataItem);\r\n                    txt = this.get(\"legendValueText\", text.get(\"text\", \"\"));\r\n                    valueLabel.set(\"text\", txt);\r\n                    text.markDirtyText();\r\n                }\r\n                const label = legendDataItem.get(\"label\");\r\n                if (label) {\r\n                    const text = label.text;\r\n                    let txt = \"\";\r\n                    label._setDataItem(dataItem);\r\n                    txt = this.get(\"legendLabelText\", text.get(\"text\", \"\"));\r\n                    label.set(\"text\", txt);\r\n                    text.markDirtyText();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendMarker(_dataItem) {\r\n    }\r\n    _onHide() {\r\n        super._onHide();\r\n        const tooltip = this.getTooltip();\r\n        if (tooltip) {\r\n            tooltip.hide();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    hoverDataItem(_dataItem) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    unhoverDataItem(_dataItem) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _getBase(key) {\r\n        const dataItem = this.dataItems[this.startIndex()];\r\n        if (dataItem) {\r\n            return dataItem.get(key);\r\n        }\r\n        return 0;\r\n    }\r\n}\r\nObject.defineProperty(Series, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Series\"\r\n});\r\nObject.defineProperty(Series, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Component.classNames.concat([Series.className])\r\n});\r\n//# sourceMappingURL=Series.js.map","import { __awaiter } from \"tslib\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\nimport { Series } from \"../../../core/render/Series\";\r\nimport { List } from \"../../../core/util/List\";\r\nimport { Container } from \"../../../core/render/Container\";\r\nimport { Graphics } from \"../../../core/render/Graphics\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $object from \"../../../core/util/Object\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * @ignore\r\n */\r\nfunction min(left, right) {\r\n    if (left == null) {\r\n        return right;\r\n    }\r\n    else if (right == null) {\r\n        return left;\r\n    }\r\n    else if (right < left) {\r\n        return right;\r\n    }\r\n    else {\r\n        return left;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction max(left, right) {\r\n    if (left == null) {\r\n        return right;\r\n    }\r\n    else if (right == null) {\r\n        return left;\r\n    }\r\n    else if (right > left) {\r\n        return right;\r\n    }\r\n    else {\r\n        return left;\r\n    }\r\n}\r\n/**\r\n * A base class for all XY chart series.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\r\n */\r\nexport class XYSeries extends Series {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_xField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_yField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_xOpenField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_yOpenField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_xLowField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_xHighField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_yLowField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_yHighField\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_axesDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_stackDirty\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_selectionProcessed\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_dataSets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_mainContainerMask\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_x\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_y\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        /**\r\n         * A [[Container]] that us used to put series' elements in.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"mainContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, {}))\r\n        });\r\n        /**\r\n         * A list of axis ranges that affect the series.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n         */\r\n        Object.defineProperty(this, \"axisRanges\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new List()\r\n        });\r\n        Object.defineProperty(this, \"_skipped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_couldStackTo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_reallyStackedTo\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_stackedSeries\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        Object.defineProperty(this, \"_aLocationX0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_aLocationX1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_aLocationY0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_aLocationY1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_showBullets\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: true\r\n        });\r\n        Object.defineProperty(this, \"valueXFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"valueX\",\r\n                \"openValueX\",\r\n                \"lowValueX\",\r\n                \"highValueX\"\r\n            ]\r\n        });\r\n        Object.defineProperty(this, \"valueYFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [\r\n                \"valueY\",\r\n                \"openValueY\",\r\n                \"lowValueY\",\r\n                \"highValueY\"\r\n            ]\r\n        });\r\n        Object.defineProperty(this, \"_valueXFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valueYFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // used for full min/max\r\n        Object.defineProperty(this, \"_valueXShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_valueYShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        // used for selection (uses working)\r\n        Object.defineProperty(this, \"__valueXShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"__valueYShowFields\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_emptyDataItem\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new DataItem(this, undefined, {})\r\n        });\r\n        Object.defineProperty(this, \"_dataSetId\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipFieldX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_tooltipFieldY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\r\n        this.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\r\n        this._setRawDefault(\"vcx\", 1);\r\n        this._setRawDefault(\"vcy\", 1);\r\n        // this can't go to themes, as data might be parsed before theme\r\n        this._setRawDefault(\"valueXShow\", \"valueXWorking\");\r\n        this._setRawDefault(\"valueYShow\", \"valueYWorking\");\r\n        this._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\r\n        this._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\r\n        this._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\r\n        this._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\r\n        this._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\r\n        this._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\r\n        this._setRawDefault(\"lowValueXGrouped\", \"low\");\r\n        this._setRawDefault(\"lowValueYGrouped\", \"low\");\r\n        this._setRawDefault(\"highValueXGrouped\", \"high\");\r\n        this._setRawDefault(\"highValueYGrouped\", \"high\");\r\n        super._afterNew();\r\n        this._settings.xAxis.series.push(this);\r\n        this._settings.yAxis.series.push(this);\r\n        this.set(\"maskContent\", true);\r\n        this._disposers.push(this.axisRanges.events.onAll((change) => {\r\n            if (change.type === \"clear\") {\r\n                $array.each(change.oldValues, (axisRange) => {\r\n                    this._removeAxisRange(axisRange);\r\n                });\r\n            }\r\n            else if (change.type === \"push\") {\r\n                this._processAxisRange(change.newValue);\r\n            }\r\n            else if (change.type === \"setIndex\") {\r\n                this._processAxisRange(change.newValue);\r\n            }\r\n            else if (change.type === \"insertIndex\") {\r\n                this._processAxisRange(change.newValue);\r\n            }\r\n            else if (change.type === \"removeIndex\") {\r\n                this._removeAxisRange(change.oldValue);\r\n            }\r\n            else if (change.type === \"moveIndex\") {\r\n                this._processAxisRange(change.value);\r\n            }\r\n            else {\r\n                throw new Error(\"Unknown IStreamEvent type\");\r\n            }\r\n        }));\r\n        if (!this.get(\"baseAxis\")) {\r\n            const xAxis = this.get(\"xAxis\");\r\n            const yAxis = this.get(\"yAxis\");\r\n            if (yAxis.isType(\"CategoryAxis\") || yAxis.isType(\"DateAxis\")) {\r\n                this.set(\"baseAxis\", yAxis);\r\n            }\r\n            else {\r\n                this.set(\"baseAxis\", xAxis);\r\n            }\r\n        }\r\n        this.states.create(\"hidden\", { opacity: 1, visible: false });\r\n        this._makeFieldNames();\r\n    }\r\n    _processAxisRange(axisRange) {\r\n        const container = Container.new(this._root, {});\r\n        axisRange.container = container;\r\n        this.children.push(container);\r\n        axisRange.series = this;\r\n        const axisDataItem = axisRange.axisDataItem;\r\n        axisDataItem.setRaw(\"isRange\", true);\r\n        const axis = axisDataItem.component;\r\n        if (axis) {\r\n            axis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\r\n            const bullet = axisDataItem.get(\"bullet\");\r\n            if (bullet) {\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    sprite.setPrivate(\"visible\", false);\r\n                }\r\n            }\r\n            const axisFill = axisDataItem.get(\"axisFill\");\r\n            if (axisFill) {\r\n                container.set(\"mask\", axisFill);\r\n            }\r\n            axis._seriesAxisRanges.push(axisDataItem);\r\n        }\r\n    }\r\n    _removeAxisRange(axisRange) {\r\n        const axisDataItem = axisRange.axisDataItem;\r\n        const axis = axisDataItem.component;\r\n        axis.disposeDataItem(axisDataItem);\r\n        $array.remove(axis._seriesAxisRanges, axisDataItem);\r\n        const container = axisRange.container;\r\n        if (container) {\r\n            container.dispose();\r\n        }\r\n    }\r\n    _updateFields() {\r\n        super._updateFields();\r\n        this._valueXFields = [];\r\n        this._valueYFields = [];\r\n        this._valueXShowFields = [];\r\n        this._valueYShowFields = [];\r\n        this.__valueXShowFields = [];\r\n        this.__valueYShowFields = [];\r\n        if (this.valueXFields) {\r\n            $array.each(this.valueXFields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._valueXFields.push(key);\r\n                    let field = this.get((key + \"Show\"));\r\n                    this.__valueXShowFields.push(field);\r\n                    if (field.indexOf(\"Working\") != -1) {\r\n                        this._valueXShowFields.push(field.split(\"Working\")[0]);\r\n                    }\r\n                    else {\r\n                        this._valueXShowFields.push(field);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if (this.valueYFields) {\r\n            $array.each(this.valueYFields, (key) => {\r\n                const field = this.get((key + \"Field\"));\r\n                if (field) {\r\n                    this._valueYFields.push(key);\r\n                    let field = this.get((key + \"Show\"));\r\n                    this.__valueYShowFields.push(field);\r\n                    if (field.indexOf(\"Working\") != -1) {\r\n                        this._valueYShowFields.push(field.split(\"Working\")[0]);\r\n                    }\r\n                    else {\r\n                        this._valueYShowFields.push(field);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart.series.removeValue(this);\r\n        }\r\n        $array.removeFirst(this.get(\"xAxis\").series, this);\r\n        $array.removeFirst(this.get(\"yAxis\").series, this);\r\n    }\r\n    // TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\r\n    _min(key, value) {\r\n        let newValue = min(this.getPrivate(key), value);\r\n        this.setPrivate(key, newValue);\r\n    }\r\n    // TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\r\n    _max(key, value) {\r\n        let newValue = max(this.getPrivate(key), value);\r\n        this.setPrivate(key, newValue);\r\n    }\r\n    _shouldMakeBullet(dataItem) {\r\n        if (!this.get(\"xAxis\").inited || !this.get(\"yAxis\").inited) {\r\n            return false;\r\n        }\r\n        if (dataItem.get(this._xField) != null && dataItem.get(this._yField) != null) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    _makeFieldNames() {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const xName = xAxis.getPrivate(\"name\");\r\n        const xCapName = $utils.capitalizeFirst(xName);\r\n        const yName = yAxis.getPrivate(\"name\");\r\n        const yCapName = $utils.capitalizeFirst(yName);\r\n        const xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\");\r\n        const yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\");\r\n        const open = \"open\";\r\n        const low = \"low\";\r\n        const high = \"high\";\r\n        const show = \"Show\";\r\n        if (xAxis.className === \"ValueAxis\") {\r\n            this._xField = this.get((xName + xLetter + show));\r\n            this._xOpenField = this.get((open + xCapName + xLetter + show));\r\n            this._xLowField = this.get((low + xCapName + xLetter + show));\r\n            this._xHighField = this.get((high + xCapName + xLetter + show));\r\n        }\r\n        else {\r\n            this._xField = (xName + xLetter);\r\n            this._xOpenField = (open + xCapName + xLetter);\r\n            this._xLowField = (low + xCapName + xLetter);\r\n            this._xHighField = (high + xCapName + xLetter);\r\n        }\r\n        if (yAxis.className === \"ValueAxis\") {\r\n            this._yField = this.get((yName + yLetter + show));\r\n            this._yOpenField = this.get((open + yCapName + yLetter + show));\r\n            this._yLowField = this.get((low + yCapName + yLetter + show));\r\n            this._yHighField = this.get((high + yCapName + yLetter + show));\r\n        }\r\n        else {\r\n            this._yField = (yName + yLetter);\r\n            this._yOpenField = (open + yCapName + yLetter);\r\n            this._yLowField = (low + yCapName + yLetter);\r\n            this._yHighField = (high + yCapName + yLetter);\r\n        }\r\n    }\r\n    _fixVC() {\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        const hiddenState = this.states.lookup(\"hidden\");\r\n        const sequencedInterpolation = this.get(\"sequencedInterpolation\");\r\n        if (hiddenState) {\r\n            let value = 0;\r\n            if (sequencedInterpolation) {\r\n                value = 0.999999999999; // makes animate, good for stacked\r\n            }\r\n            if (xAxis === baseAxis) {\r\n                hiddenState.set(\"vcy\", value);\r\n            }\r\n            else if (yAxis === baseAxis) {\r\n                hiddenState.set(\"vcx\", value);\r\n            }\r\n            else {\r\n                hiddenState.set(\"vcy\", value);\r\n                hiddenState.set(\"vcx\", value);\r\n            }\r\n        }\r\n    }\r\n    _handleMaskBullets() {\r\n        if (this.isDirty(\"maskBullets\")) {\r\n            this.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\r\n        }\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\" || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\"))) {\r\n            this._updateFields();\r\n            this._makeFieldNames();\r\n            this._valuesDirty = true;\r\n        }\r\n        this.set(\"width\", this.get(\"xAxis\").width());\r\n        this.set(\"height\", this.get(\"yAxis\").height());\r\n        this._handleMaskBullets();\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        const tooltipPositionX = this.get(\"tooltipPositionX\");\r\n        let tooltipFieldX;\r\n        switch (tooltipPositionX) {\r\n            case \"open\":\r\n                tooltipFieldX = this._xOpenField;\r\n                break;\r\n            case \"low\":\r\n                tooltipFieldX = this._xLowField;\r\n                break;\r\n            case \"high\":\r\n                tooltipFieldX = this._xHighField;\r\n                break;\r\n            default:\r\n                tooltipFieldX = this._xField;\r\n        }\r\n        this._tooltipFieldX = tooltipFieldX;\r\n        const tooltipPositionY = this.get(\"tooltipPositionY\");\r\n        let tooltipFieldY;\r\n        switch (tooltipPositionY) {\r\n            case \"open\":\r\n                tooltipFieldY = this._yOpenField;\r\n                break;\r\n            case \"low\":\r\n                tooltipFieldY = this._yLowField;\r\n                break;\r\n            case \"high\":\r\n                tooltipFieldY = this._yHighField;\r\n                break;\r\n            default:\r\n                tooltipFieldY = this._yField;\r\n        }\r\n        this._tooltipFieldY = tooltipFieldY;\r\n        if (this.isDirty(\"baseAxis\")) {\r\n            this._fixVC();\r\n        }\r\n        this.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent.get(\"paddingLeft\", 0));\r\n        this.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent.get(\"paddingTop\", 0));\r\n        this.bulletsContainer.set(\"y\", this.y());\r\n        this.bulletsContainer.set(\"x\", this.x());\r\n        const stacked = this.get(\"stacked\");\r\n        if (this.isDirty(\"stacked\")) {\r\n            if (stacked) {\r\n                if (this._valuesDirty && !this._dataProcessed) {\r\n                }\r\n                else {\r\n                    this._stack();\r\n                }\r\n            }\r\n            else {\r\n                this._unstack();\r\n            }\r\n        }\r\n        if (this._valuesDirty && !this._dataProcessed) {\r\n            this._dataProcessed = true;\r\n            if (stacked) {\r\n                this._stack();\r\n            }\r\n            $array.each(this.dataItems, (dataItem) => {\r\n                $array.each(this._valueXShowFields, (key) => {\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        if (stacked) {\r\n                            value += this.getStackedXValue(dataItem, key);\r\n                        }\r\n                        this._min(\"minX\", value);\r\n                        this._max(\"maxX\", value);\r\n                    }\r\n                });\r\n                $array.each(this._valueYShowFields, (key) => {\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        if (stacked) {\r\n                            value += this.getStackedYValue(dataItem, key);\r\n                        }\r\n                        this._min(\"minY\", value);\r\n                        this._max(\"maxY\", value);\r\n                    }\r\n                });\r\n                xAxis.processSeriesDataItem(dataItem, this._valueXFields);\r\n                yAxis.processSeriesDataItem(dataItem, this._valueYFields);\r\n            });\r\n            xAxis._seriesValuesDirty = true;\r\n            yAxis._seriesValuesDirty = true;\r\n            if (!this.get(\"ignoreMinMax\")) {\r\n                if (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\r\n                    xAxis.markDirtyExtremes();\r\n                }\r\n                if (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\r\n                    yAxis.markDirtyExtremes();\r\n                }\r\n            }\r\n            this._markStakedDirtyStack();\r\n            //this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\r\n            if (!this.get(\"tooltipDataItem\")) {\r\n                this.updateLegendValue(undefined);\r\n            }\r\n        }\r\n        if (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\r\n            this._markStakedDirtyStack();\r\n        }\r\n        if (!this._dataGrouped) {\r\n            xAxis._groupSeriesData(this);\r\n            yAxis._groupSeriesData(this);\r\n            this._dataGrouped = true;\r\n        }\r\n        if (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty) {\r\n            let startIndex = this.startIndex();\r\n            let endIndex = this.endIndex();\r\n            let minBulletDistance = this.get(\"minBulletDistance\", 0);\r\n            if (minBulletDistance > 0 && baseAxis) {\r\n                if (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\r\n                    this._showBullets = true;\r\n                }\r\n                else {\r\n                    this._showBullets = false;\r\n                }\r\n            }\r\n            if ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\r\n                this._selectionProcessed = true;\r\n                const vcx = this.get(\"vcx\", 1);\r\n                const vcy = this.get(\"vcy\", 1);\r\n                const stacked = this.get(\"stacked\", false);\r\n                const outOfSelection = this.getPrivate(\"outOfSelection\");\r\n                if (baseAxis === xAxis) {\r\n                    yAxis._calculateTotals();\r\n                    this.setPrivateRaw(\"selectionMinY\", undefined);\r\n                    this.setPrivateRaw(\"selectionMaxY\", undefined);\r\n                    if (!outOfSelection) {\r\n                        for (let i = startIndex; i < endIndex; i++) {\r\n                            this.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\r\n                        }\r\n                    }\r\n                    else {\r\n                        yAxis.markDirtySelectionExtremes();\r\n                    }\r\n                }\r\n                else if (baseAxis === yAxis) {\r\n                    xAxis._calculateTotals();\r\n                    this.setPrivateRaw(\"selectionMinX\", undefined);\r\n                    this.setPrivateRaw(\"selectionMaxX\", undefined);\r\n                    if (!outOfSelection) {\r\n                        for (let i = startIndex; i < endIndex; i++) {\r\n                            this.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\r\n                        }\r\n                    }\r\n                    else {\r\n                        yAxis.markDirtySelectionExtremes();\r\n                    }\r\n                }\r\n                if (baseAxis === xAxis) {\r\n                    if (this.get(\"valueYShow\") !== \"valueYWorking\") {\r\n                        const selectionMinY = this.getPrivate(\"selectionMinY\");\r\n                        if (selectionMinY != null) {\r\n                            this.setPrivateRaw(\"minY\", selectionMinY);\r\n                            yAxis.markDirtyExtremes();\r\n                        }\r\n                        const selectionMaxY = this.getPrivate(\"selectionMaxY\");\r\n                        if (selectionMaxY != null) {\r\n                            this.setPrivateRaw(\"maxY\", selectionMaxY);\r\n                            yAxis.markDirtyExtremes();\r\n                        }\r\n                    }\r\n                }\r\n                else if (baseAxis === yAxis) {\r\n                    if (this.get(\"valueXShow\") !== \"valueXWorking\") {\r\n                        const selectionMinX = this.getPrivate(\"selectionMinX\");\r\n                        if (selectionMinX != null) {\r\n                            this.setPrivateRaw(\"minX\", selectionMinX);\r\n                            yAxis.markDirtyExtremes();\r\n                        }\r\n                        const selectionMaxX = this.getPrivate(\"selectionMaxX\");\r\n                        if (selectionMaxX != null) {\r\n                            this.setPrivateRaw(\"maxX\", selectionMaxX);\r\n                            xAxis.markDirtyExtremes();\r\n                        }\r\n                    }\r\n                }\r\n                if (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\r\n                    xAxis.markDirtySelectionExtremes();\r\n                }\r\n                if (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\r\n                    yAxis.markDirtySelectionExtremes();\r\n                }\r\n                // this.updateLegendValue(undefined); flickers while panning\r\n            }\r\n        }\r\n    }\r\n    _makeRangeMask() {\r\n        if (this.axisRanges.length > 0) {\r\n            let mainContainerMask = this._mainContainerMask;\r\n            if (mainContainerMask == null) {\r\n                mainContainerMask = this.children.push(Graphics.new(this._root, {}));\r\n                this._mainContainerMask = mainContainerMask;\r\n                mainContainerMask.set(\"draw\", (display, target) => {\r\n                    const parent = this.parent;\r\n                    if (parent) {\r\n                        const w = this._root.container.width();\r\n                        const h = this._root.container.height();\r\n                        display.moveTo(-w, -h);\r\n                        display.lineTo(-w, h * 2);\r\n                        display.lineTo(w * 2, h * 2);\r\n                        display.lineTo(w * 2, -h);\r\n                        display.lineTo(-w, -h);\r\n                        this.axisRanges.each((axisRange) => {\r\n                            const fill = axisRange.axisDataItem.get(\"axisFill\");\r\n                            if (parent) {\r\n                                if (fill) {\r\n                                    let draw = fill.get(\"draw\");\r\n                                    if (draw) {\r\n                                        draw(display, target);\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    this.mainContainer._display.mask = mainContainerMask._display;\r\n                });\r\n            }\r\n            mainContainerMask.markDirty();\r\n            mainContainerMask._markDirtyKey(\"fill\");\r\n        }\r\n        else {\r\n            this.mainContainer._display.mask = null;\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        // save for performance\r\n        this._x = this.x();\r\n        this._y = this.y();\r\n        this._makeRangeMask();\r\n    }\r\n    _stack() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            const seriesIndex = chart.series.indexOf(this);\r\n            this._couldStackTo = [];\r\n            if (seriesIndex > 0) {\r\n                let series;\r\n                for (let i = seriesIndex - 1; i >= 0; i--) {\r\n                    series = chart.series.getIndex(i);\r\n                    if (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\r\n                        this._couldStackTo.push(series);\r\n                        if (!series.get(\"stacked\")) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this._stackDataItems();\r\n        }\r\n    }\r\n    _unstack() {\r\n        $object.each(this._reallyStackedTo, (_key, value) => {\r\n            delete (value._stackedSeries[this.uid]);\r\n        });\r\n        this._reallyStackedTo = {};\r\n        $array.each(this.dataItems, (dataItem) => {\r\n            dataItem.setRaw(\"stackToItemY\", undefined);\r\n            dataItem.setRaw(\"stackToItemX\", undefined);\r\n        });\r\n    }\r\n    _stackDataItems() {\r\n        // this works only with the same number of data @todo: search by date/category?\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        let field;\r\n        let stackToItemKey;\r\n        if (baseAxis === xAxis) {\r\n            field = \"valueY\";\r\n            stackToItemKey = \"stackToItemY\";\r\n        }\r\n        else if (baseAxis === yAxis) {\r\n            field = \"valueX\";\r\n            stackToItemKey = \"stackToItemX\";\r\n        }\r\n        let len = this._couldStackTo.length;\r\n        let index = 0;\r\n        const stackToNegative = this.get(\"stackToNegative\");\r\n        this._reallyStackedTo = {};\r\n        $array.each(this.dataItems, (dataItem) => {\r\n            for (let s = 0; s < len; s++) {\r\n                let stackToSeries = this._couldStackTo[s];\r\n                let stackToItem = stackToSeries.dataItems[index];\r\n                let value = dataItem.get(field);\r\n                if (stackToItem) {\r\n                    let stackValue = stackToItem.get(field);\r\n                    if (stackToNegative) {\r\n                        if ($type.isNumber(value)) {\r\n                            if ($type.isNumber(stackValue)) {\r\n                                if (value >= 0 && stackValue >= 0) {\r\n                                    dataItem.setRaw(stackToItemKey, stackToItem);\r\n                                    this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\r\n                                    stackToSeries._stackedSeries[this.uid] = this;\r\n                                    break;\r\n                                }\r\n                                if (value < 0 && stackValue < 0) {\r\n                                    dataItem.setRaw(stackToItemKey, stackToItem);\r\n                                    this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\r\n                                    stackToSeries._stackedSeries[this.uid] = this;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            break;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if ($type.isNumber(value) && $type.isNumber(stackValue)) {\r\n                            dataItem.setRaw(stackToItemKey, stackToItem);\r\n                            this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\r\n                            stackToSeries._stackedSeries[this.uid] = this;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            index++;\r\n        });\r\n    }\r\n    processXSelectionDataItem(dataItem, vcx, stacked) {\r\n        $array.each(this.__valueXShowFields, (key) => {\r\n            let value = dataItem.get(key);\r\n            if (value != null) {\r\n                if (stacked) {\r\n                    value += this.getStackedXValueWorking(dataItem, key);\r\n                }\r\n                this._min(\"selectionMinX\", value);\r\n                this._max(\"selectionMaxX\", value * vcx);\r\n            }\r\n        });\r\n    }\r\n    processYSelectionDataItem(dataItem, vcy, stacked) {\r\n        $array.each(this.__valueYShowFields, (key) => {\r\n            let value = dataItem.get(key);\r\n            if (value != null) {\r\n                if (stacked) {\r\n                    value += this.getStackedYValueWorking(dataItem, key);\r\n                }\r\n                this._min(\"selectionMinY\", value);\r\n                this._max(\"selectionMaxY\", value * vcy);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStackedYValueWorking(dataItem, key) {\r\n        const stackToItem = dataItem.get(\"stackToItemY\");\r\n        if (stackToItem) {\r\n            const stackedToSeries = stackToItem.component;\r\n            return stackToItem.get(key, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStackedXValueWorking(dataItem, key) {\r\n        const stackToItem = dataItem.get(\"stackToItemX\");\r\n        if (stackToItem) {\r\n            const stackedToSeries = stackToItem.component;\r\n            return stackToItem.get(key, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStackedYValue(dataItem, key) {\r\n        const stackToItem = dataItem.get(\"stackToItemY\");\r\n        if (stackToItem) {\r\n            return stackToItem.get(key, 0) + this.getStackedYValue(stackToItem, key);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getStackedXValue(dataItem, key) {\r\n        const stackToItem = dataItem.get(\"stackToItemX\");\r\n        if (stackToItem) {\r\n            return stackToItem.get(key, 0) + this.getStackedXValue(stackToItem, key);\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    createLegendMarker(_dataItem) {\r\n        this.updateLegendMarker();\r\n    }\r\n    _markDirtyAxes() {\r\n        this._axesDirty = true;\r\n        this.markDirty();\r\n    }\r\n    _markDataSetDirty() {\r\n        this._afterDataChange();\r\n        this._valuesDirty = true;\r\n        this._dataProcessed = false;\r\n        this._aggregatesCalculated = false;\r\n        this.markDirty();\r\n    }\r\n    _clearDirty() {\r\n        super._clearDirty();\r\n        this._axesDirty = false;\r\n        this._selectionProcessed = false;\r\n        this._stackDirty = false;\r\n        this._dataProcessed = false;\r\n    }\r\n    _positionBullet(bullet) {\r\n        let sprite = bullet.get(\"sprite\");\r\n        if (sprite) {\r\n            let dataItem = sprite.dataItem;\r\n            let locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\r\n            let locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\r\n            let xAxis = this.get(\"xAxis\");\r\n            let yAxis = this.get(\"yAxis\");\r\n            const positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\r\n            const positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1));\r\n            let point = this.getPoint(positionX, positionY);\r\n            let left = dataItem.get(\"left\", point.x);\r\n            let right = dataItem.get(\"right\", point.x);\r\n            let top = dataItem.get(\"top\", point.y);\r\n            let bottom = dataItem.get(\"bottom\", point.y);\r\n            if (this._shouldShowBullet(positionX, positionY)) {\r\n                if (!bullet.getPrivate(\"hidden\")) {\r\n                    sprite.setPrivate(\"visible\", true);\r\n                }\r\n                else {\r\n                    sprite.setPrivate(\"visible\", false);\r\n                }\r\n                let w = right - left;\r\n                let h = bottom - top;\r\n                if (sprite.isType(\"Label\")) {\r\n                    sprite.setPrivate(\"maxWidth\", Math.abs(w));\r\n                    sprite.setPrivate(\"maxHeight\", Math.abs(h));\r\n                }\r\n                let x = left + w * locationX;\r\n                let y = bottom - h * locationY;\r\n                sprite.set(\"x\", x);\r\n                sprite.set(\"y\", y);\r\n            }\r\n            else {\r\n                sprite.setPrivate(\"visible\", false);\r\n            }\r\n        }\r\n    }\r\n    _shouldShowBullet(_positionX, _positionY) {\r\n        return this._showBullets;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    setDataSet(id) {\r\n        if (this._dataSets[id]) {\r\n            this._handleDataSetChange();\r\n            this._dataItems = this._dataSets[id];\r\n            this._markDataSetDirty();\r\n            this._dataSetId = id;\r\n            const type = \"datasetchanged\";\r\n            if (this.events.isEnabled(type)) {\r\n                this.events.dispatch(type, { type: type, target: this, id: id });\r\n            }\r\n        }\r\n    }\r\n    _handleDataSetChange() {\r\n        if (this.bullets.length > 0) {\r\n            $array.each(this._dataItems, (dataItem) => {\r\n                let bullets = dataItem.bullets;\r\n                if (bullets) {\r\n                    $array.each(bullets, (bullet) => {\r\n                        let sprite = bullet.get(\"sprite\");\r\n                        if (sprite) {\r\n                            sprite.setPrivate(\"visible\", false);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        this._selectionProcessed = false; // for totals to be calculated\r\n    }\r\n    /**\r\n     * Shows hidden series.\r\n     *\r\n     * @param   duration  Duration of animation in milliseconds\r\n     * @return            Animation promise\r\n     */\r\n    show(duration) {\r\n        const _super = Object.create(null, {\r\n            show: { get: () => super.show }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._fixVC();\r\n            let promises = [];\r\n            promises.push(_super.show.call(this, duration).then(() => {\r\n                this._isShowing = false;\r\n                let xAxis = this.get(\"xAxis\");\r\n                let yAxis = this.get(\"yAxis\");\r\n                let baseAxis = this.get(\"baseAxis\");\r\n                if (yAxis !== baseAxis) {\r\n                    yAxis.markDirtySelectionExtremes();\r\n                }\r\n                if (xAxis !== baseAxis) {\r\n                    xAxis.markDirtySelectionExtremes();\r\n                }\r\n            }));\r\n            promises.push(this.bulletsContainer.show(duration));\r\n            promises.push(this._sequencedShowHide(true, duration));\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series.\r\n     *\r\n     * @param   duration  Duration of animation in milliseconds\r\n     * @return            Animation promise\r\n     */\r\n    hide(duration) {\r\n        const _super = Object.create(null, {\r\n            hide: { get: () => super.hide }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._fixVC();\r\n            let promises = [];\r\n            promises.push(_super.hide.call(this, duration).then(() => {\r\n                this._isHiding = false;\r\n            }));\r\n            promises.push(this.bulletsContainer.hide(duration));\r\n            promises.push(this._sequencedShowHide(false, duration));\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            if (!$type.isNumber(duration)) {\r\n                duration = this.get(\"stateAnimationDuration\", 0);\r\n            }\r\n            const easing = this.get(\"stateAnimationEasing\");\r\n            $array.each(this._valueFields, (key) => {\r\n                promises.push(dataItem.animate({ key: key + \"Working\", to: dataItem.get(key), duration: duration, easing: easing }).waitForStop());\r\n            });\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const hiddenState = this.states.create(\"hidden\", {});\r\n            if (!$type.isNumber(duration)) {\r\n                duration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\r\n            }\r\n            const easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\r\n            const xAxis = this.get(\"xAxis\");\r\n            const yAxis = this.get(\"yAxis\");\r\n            const baseAxis = this.get(\"baseAxis\");\r\n            const stacked = this.get(\"stacked\");\r\n            if (baseAxis === xAxis || !baseAxis) {\r\n                $array.each(this._valueYFields, (key) => {\r\n                    let min = yAxis.getPrivate(\"min\");\r\n                    let baseValue = yAxis.baseValue();\r\n                    if ($type.isNumber(min) && min > baseValue) {\r\n                        baseValue = min;\r\n                    }\r\n                    if (stacked) {\r\n                        baseValue = 0;\r\n                    }\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        promises.push(dataItem.animate({ key: key + \"Working\", to: baseValue, duration: duration, easing: easing }).waitForStop());\r\n                    }\r\n                });\r\n            }\r\n            if (baseAxis === yAxis || !baseAxis) {\r\n                let min = xAxis.getPrivate(\"min\");\r\n                let baseValue = xAxis.baseValue();\r\n                if ($type.isNumber(min) && min > baseValue) {\r\n                    baseValue = min;\r\n                }\r\n                if (stacked) {\r\n                    baseValue = 0;\r\n                }\r\n                $array.each(this._valueXFields, (key) => {\r\n                    let value = dataItem.get(key);\r\n                    if (value != null) {\r\n                        promises.push(dataItem.animate({ key: key + \"Working\", to: baseValue, duration: duration, easing: easing }).waitForStop());\r\n                    }\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    _markDirtyStack() {\r\n        this._stackDirty = true;\r\n        this.markDirty();\r\n        this._markStakedDirtyStack();\r\n    }\r\n    _markStakedDirtyStack() {\r\n        const stackedSeries = this._stackedSeries;\r\n        if (stackedSeries) {\r\n            $object.each(stackedSeries, (_key, value) => {\r\n                if (!value._stackDirty) {\r\n                    value._markDirtyStack();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        if (this._skipped) {\r\n            this._markDirtyAxes();\r\n            this._skipped = false;\r\n        }\r\n    }\r\n    /**\r\n     * Shows a tooltip for specific data item.\r\n     *\r\n     * @param  dataItem  Data item\r\n     */\r\n    showDataItemTooltip(dataItem) {\r\n        this.updateLegendMarker(dataItem);\r\n        this.updateLegendValue(dataItem);\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            if (!this.isHidden()) {\r\n                tooltip._setDataItem(dataItem);\r\n                if (dataItem) {\r\n                    let locationX = this.get(\"locationX\", 0);\r\n                    let locationY = this.get(\"locationY\", 1);\r\n                    let itemLocationX = dataItem.get(\"locationX\", locationX);\r\n                    let itemLocationY = dataItem.get(\"locationY\", locationY);\r\n                    const xAxis = this.get(\"xAxis\");\r\n                    const yAxis = this.get(\"yAxis\");\r\n                    const vcx = this.get(\"vcx\", 1);\r\n                    const vcy = this.get(\"vcy\", 1);\r\n                    const xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\r\n                    const yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\r\n                    const point = this.getPoint(xPos, yPos);\r\n                    let show = true;\r\n                    $array.each(this._valueFields, (field) => {\r\n                        if (dataItem.get(field) == null) {\r\n                            show = false;\r\n                        }\r\n                    });\r\n                    if (show) {\r\n                        const chart = this.chart;\r\n                        if (chart && chart.inPlot(point)) {\r\n                            tooltip.label.text.markDirtyText();\r\n                            tooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\r\n                            tooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\r\n                        }\r\n                        else {\r\n                            tooltip._setDataItem(undefined);\r\n                        }\r\n                    }\r\n                    else {\r\n                        tooltip._setDataItem(undefined);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.hideTooltip();\r\n            }\r\n        }\r\n    }\r\n    hideTooltip() {\r\n        const tooltip = this.get(\"tooltip\");\r\n        if (tooltip) {\r\n            tooltip.set(\"tooltipTarget\", this);\r\n        }\r\n        return super.hideTooltip();\r\n    }\r\n    _getTooltipTarget(dataItem) {\r\n        if (this.get(\"seriesTooltipTarget\") == \"bullet\") {\r\n            const bullets = dataItem.bullets;\r\n            if (bullets && bullets.length > 0) {\r\n                const bullet = bullets[0];\r\n                const sprite = bullet.get(\"sprite\");\r\n                if (sprite) {\r\n                    return sprite;\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendValue(dataItem) {\r\n        const legendDataItem = this.get(\"legendDataItem\");\r\n        if (legendDataItem) {\r\n            const label = legendDataItem.get(\"label\");\r\n            if (label) {\r\n                let txt = \"\";\r\n                if (dataItem) {\r\n                    label._setDataItem(dataItem);\r\n                    txt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\r\n                }\r\n                else {\r\n                    label._setDataItem(this._emptyDataItem);\r\n                    txt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\r\n                }\r\n                label.set(\"text\", txt);\r\n            }\r\n            const valueLabel = legendDataItem.get(\"valueLabel\");\r\n            if (valueLabel) {\r\n                let txt = \"\";\r\n                if (dataItem) {\r\n                    valueLabel._setDataItem(dataItem);\r\n                    txt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\r\n                }\r\n                else {\r\n                    valueLabel._setDataItem(this._emptyDataItem);\r\n                    txt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\r\n                }\r\n                valueLabel.set(\"text\", txt);\r\n            }\r\n        }\r\n    }\r\n    _getItemReaderLabel() {\r\n        let text = \"X: {\" + this._xField;\r\n        if (this.get(\"xAxis\").isType(\"DateAxis\")) {\r\n            text += \".formatDate()\";\r\n        }\r\n        text += \"}; Y: {\" + this._yField;\r\n        if (this.get(\"yAxis\").isType(\"DateAxis\")) {\r\n            text += \".formatDate()\";\r\n        }\r\n        text += \"}\";\r\n        return text;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getPoint(positionX, positionY) {\r\n        let x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\r\n        let y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\r\n        // if coordinate is super big, canvas fails to draw line, capping to some big number (won't make any visual difference)\r\n        let max = 999999999;\r\n        if (y < -max) {\r\n            y = -max;\r\n        }\r\n        if (y > max) {\r\n            y = max;\r\n        }\r\n        if (x < -max) {\r\n            x = -max;\r\n        }\r\n        if (x > max) {\r\n            x = max;\r\n        }\r\n        return { x: x, y: y };\r\n    }\r\n    _shouldInclude(_position) {\r\n        return true;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    handleCursorHide() {\r\n        this.hideTooltip();\r\n        this.updateLegendValue(undefined);\r\n        this.updateLegendMarker(undefined);\r\n    }\r\n    _afterDataChange() {\r\n        super._afterDataChange();\r\n        this.get(\"xAxis\")._markDirtyKey(\"start\");\r\n        this.get(\"yAxis\")._markDirtyKey(\"start\");\r\n        this.resetExtremes();\r\n    }\r\n    // todo description\r\n    resetExtremes() {\r\n        this.setPrivate(\"selectionMinX\", undefined);\r\n        this.setPrivate(\"selectionMaxX\", undefined);\r\n        this.setPrivate(\"selectionMinY\", undefined);\r\n        this.setPrivate(\"selectionMaxY\", undefined);\r\n        this.setPrivate(\"minX\", undefined);\r\n        this.setPrivate(\"minY\", undefined);\r\n        this.setPrivate(\"maxX\", undefined);\r\n        this.setPrivate(\"maxY\", undefined);\r\n    }\r\n    /**\r\n     * Creates and returns an axis range object.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n     * @param   axisDataItem  Axis data item\r\n     * @return                Axis range\r\n     */\r\n    createAxisRange(axisDataItem) {\r\n        return this.axisRanges.push({\r\n            axisDataItem: axisDataItem\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(XYSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"XYSeries\"\r\n});\r\nObject.defineProperty(XYSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Series.classNames.concat([XYSeries.className])\r\n});\r\n//# sourceMappingURL=XYSeries.js.map","import { __awaiter } from \"tslib\";\r\nimport { XYSeries } from \"./XYSeries\";\r\nimport { Percent } from \"../../../core/util/Percent\";\r\nimport { visualSettings } from \"../../../core/render/Graphics\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $type from \"../../../core/util/Type\";\r\n/**\r\n * Base class for all \"column-based\" series\r\n */\r\nexport class BaseColumnSeries extends XYSeries {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_ph\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_pw\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    _makeGraphics(listTemplate, dataItem) {\r\n        return this.makeColumn(dataItem, listTemplate);\r\n    }\r\n    _makeFieldNames() {\r\n        super._makeFieldNames();\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const categoryAxis = \"CategoryAxis\";\r\n        const valueAxis = \"ValueAxis\";\r\n        if (xAxis.isType(categoryAxis)) {\r\n            if (!this.get(\"openCategoryXField\")) {\r\n                this._xOpenField = this._xField;\r\n            }\r\n        }\r\n        if (xAxis.isType(valueAxis)) {\r\n            if (!this.get(\"openValueXField\")) {\r\n                this._xOpenField = this._xField;\r\n            }\r\n        }\r\n        if (yAxis.isType(categoryAxis)) {\r\n            if (!this.get(\"openCategoryYField\")) {\r\n                this._yOpenField = this._yField;\r\n            }\r\n        }\r\n        if (yAxis.isType(valueAxis)) {\r\n            if (!this.get(\"openValueYField\")) {\r\n                this._yOpenField = this._yField;\r\n            }\r\n        }\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const len = this.dataItems.length;\r\n        const startIndex = Math.max(0, this.startIndex() - 2);\r\n        const endIndex = Math.min(this.endIndex() + 2, len - 1);\r\n        if (xAxis.inited && yAxis.inited) {\r\n            for (let i = startIndex; i <= endIndex; i++) {\r\n                let dataItem = this.dataItems[i];\r\n                this._createGraphics(dataItem);\r\n            }\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            this._ph = chart.plotContainer.height();\r\n            this._pw = chart.plotContainer.width();\r\n        }\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const baseAxis = this.get(\"baseAxis\");\r\n        const columnsTemplate = this.columns.template;\r\n        if (this.isDirty(\"fill\")) {\r\n            if (columnsTemplate.get(\"fill\") == null) {\r\n                columnsTemplate.set(\"fill\", this.get(\"fill\"));\r\n            }\r\n        }\r\n        if (this.isDirty(\"stroke\")) {\r\n            if (columnsTemplate.get(\"stroke\") == null) {\r\n                columnsTemplate.set(\"stroke\", this.get(\"stroke\"));\r\n            }\r\n        }\r\n        let index = 0;\r\n        let clusterCount = 0;\r\n        let i = 0;\r\n        $array.each(baseAxis.series, (series) => {\r\n            if (series instanceof BaseColumnSeries) {\r\n                const stacked = series.get(\"stacked\");\r\n                if (stacked && i == 0) {\r\n                    clusterCount++;\r\n                }\r\n                if (!stacked && series.get(\"clustered\")) {\r\n                    clusterCount++;\r\n                }\r\n            }\r\n            if (series === this) {\r\n                index = clusterCount - 1;\r\n            }\r\n            i++;\r\n        });\r\n        if (!this.get(\"clustered\")) {\r\n            index = 0;\r\n            clusterCount = 1;\r\n        }\r\n        if (clusterCount === 0) {\r\n            clusterCount = 1;\r\n            index = 0;\r\n        }\r\n        const xRenderer = xAxis.get(\"renderer\");\r\n        const yRenderer = yAxis.get(\"renderer\");\r\n        const cellStartLocation = \"cellStartLocation\";\r\n        const cellEndLocation = \"cellEndLocation\";\r\n        const cellLocationX0 = xRenderer.get(cellStartLocation, 0);\r\n        const cellLocationX1 = xRenderer.get(cellEndLocation, 1);\r\n        const cellLocationY0 = yRenderer.get(cellStartLocation, 0);\r\n        const cellLocationY1 = yRenderer.get(cellEndLocation, 1);\r\n        this._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\r\n        this._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);\r\n        ;\r\n        this._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\r\n        this._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\r\n        if (xAxis.inited && yAxis.inited) {\r\n            if (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\r\n                const len = this.dataItems.length;\r\n                let startIndex = Math.max(0, this.startIndex() - 2);\r\n                let endIndex = Math.min(this.endIndex() + 2, len - 1);\r\n                for (let i = 0; i < startIndex; i++) {\r\n                    this._toggleColumn(this.dataItems[i], false);\r\n                }\r\n                let previous = this.dataItems[startIndex];\r\n                for (let i = startIndex; i <= endIndex; i++) {\r\n                    let dataItem = this.dataItems[i];\r\n                    if (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\r\n                        previous = dataItem;\r\n                        if (i > 0 && startIndex > 0) {\r\n                            for (let j = i - 1; j >= 0; j--) {\r\n                                let dataItem = this.dataItems[j];\r\n                                if (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\r\n                                    previous = dataItem;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    else {\r\n                        this._toggleColumn(dataItem, false);\r\n                    }\r\n                }\r\n                for (let i = startIndex; i <= endIndex; i++) {\r\n                    let dataItem = this.dataItems[i];\r\n                    this._updateGraphics(dataItem, previous);\r\n                    if (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\r\n                        previous = dataItem;\r\n                    }\r\n                }\r\n                for (let i = endIndex + 1; i < len; i++) {\r\n                    this._toggleColumn(this.dataItems[i], false);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._skipped = true;\r\n        }\r\n        this.updateLegendMarker(this.get(\"tooltipDataItem\"));\r\n        super._updateChildren();\r\n    }\r\n    _createGraphics(dataItem) {\r\n        let graphics = dataItem.get(\"graphics\");\r\n        if (!graphics) {\r\n            graphics = this._makeGraphics(this.columns, dataItem);\r\n            dataItem.set(\"graphics\", graphics);\r\n            graphics._setDataItem(dataItem);\r\n            const legendDataItem = dataItem.get(\"legendDataItem\");\r\n            if (legendDataItem) {\r\n                const markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n                if (markerRectangle) {\r\n                    markerRectangle.setAll({ fill: graphics.get(\"fill\"), stroke: graphics.get(\"stroke\") });\r\n                }\r\n            }\r\n            this.axisRanges.each((axisRange) => {\r\n                const container = axisRange.container;\r\n                const graphicsArray = dataItem.get(\"rangeGraphics\", []);\r\n                dataItem.set(\"rangeGraphics\", graphicsArray);\r\n                const rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\r\n                graphicsArray.push(rangeGraphics);\r\n                rangeGraphics.setPrivate(\"list\", axisRange.columns);\r\n                container.children.push(rangeGraphics);\r\n            });\r\n        }\r\n    }\r\n    _updateGraphics(dataItem, previousDataItem) {\r\n        let graphics = dataItem.get(\"graphics\");\r\n        //if (!graphics) {\r\n        //\tthis._createGraphics(dataItem);\r\n        //\tgraphics = dataItem.get(\"graphics\")!;\r\n        //}\r\n        const xField = this._xField;\r\n        const yField = this._yField;\r\n        const valueX = dataItem.get(xField);\r\n        const valueY = dataItem.get(yField);\r\n        if (valueX != null && valueY != null) {\r\n            const xOpenField = this._xOpenField;\r\n            const yOpenField = this._yOpenField;\r\n            const locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\r\n            const locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\r\n            const openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\r\n            const openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\r\n            const width = graphics.get(\"width\");\r\n            const height = graphics.get(\"height\");\r\n            const stacked = this.get(\"stacked\");\r\n            const xAxis = this.get(\"xAxis\");\r\n            const yAxis = this.get(\"yAxis\");\r\n            const baseAxis = this.get(\"baseAxis\");\r\n            const xStart = xAxis.get(\"start\");\r\n            const xEnd = xAxis.get(\"end\");\r\n            const yStart = yAxis.get(\"start\");\r\n            const yEnd = yAxis.get(\"end\");\r\n            let l;\r\n            let r;\r\n            let t;\r\n            let b;\r\n            let vcy = this.get(\"vcy\", 1);\r\n            let vcx = this.get(\"vcx\", 1);\r\n            let fitW = false;\r\n            let fitH = false;\r\n            if (yAxis.isType(\"CategoryAxis\") && xAxis.isType(\"CategoryAxis\")) {\r\n                let startLocation = this._aLocationX0 + openLocationX - 0.5;\r\n                let endLocation = this._aLocationX1 + locationX - 0.5;\r\n                if (width instanceof Percent) {\r\n                    let offset = (endLocation - startLocation) * (1 - width.value) / 2;\r\n                    startLocation += offset;\r\n                    endLocation -= offset;\r\n                }\r\n                l = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\r\n                r = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\r\n                startLocation = this._aLocationY0 + openLocationY - 0.5;\r\n                endLocation = this._aLocationY1 + locationY - 0.5;\r\n                if (height instanceof Percent) {\r\n                    let offset = (endLocation - startLocation) * (1 - height.value) / 2;\r\n                    startLocation += offset;\r\n                    endLocation -= offset;\r\n                }\r\n                t = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\r\n                b = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\r\n                dataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\r\n            }\r\n            else if (xAxis === baseAxis) {\r\n                let startLocation = this._aLocationX0 + openLocationX - 0.5;\r\n                let endLocation = this._aLocationX1 + locationX - 0.5;\r\n                if (width instanceof Percent) {\r\n                    let offset = (endLocation - startLocation) * (1 - width.value) / 2;\r\n                    startLocation += offset;\r\n                    endLocation -= offset;\r\n                }\r\n                l = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\r\n                r = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\r\n                t = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\r\n                if (this._yOpenField !== this._yField) {\r\n                    b = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\r\n                }\r\n                else {\r\n                    if (stacked) {\r\n                        let stackToItemY = dataItem.get(\"stackToItemY\");\r\n                        if (stackToItemY) {\r\n                            b = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, stackToItemY.component.get(\"vcy\"));\r\n                        }\r\n                        else {\r\n                            b = yAxis.basePosition();\r\n                        }\r\n                    }\r\n                    else {\r\n                        b = yAxis.basePosition();\r\n                    }\r\n                }\r\n                dataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\r\n                fitH = true;\r\n            }\r\n            else if (yAxis === baseAxis) {\r\n                let startLocation = this._aLocationY0 + openLocationY - 0.5;\r\n                let endLocation = this._aLocationY1 + locationY - 0.5;\r\n                if (height instanceof Percent) {\r\n                    let offset = (endLocation - startLocation) * (1 - height.value) / 2;\r\n                    startLocation += offset;\r\n                    endLocation -= offset;\r\n                }\r\n                t = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\r\n                b = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\r\n                r = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\r\n                if (this._xOpenField !== this._xField) {\r\n                    l = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\r\n                }\r\n                else {\r\n                    if (stacked) {\r\n                        let stackToItemX = dataItem.get(\"stackToItemX\");\r\n                        if (stackToItemX) {\r\n                            l = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, stackToItemX.component.get(\"vcx\"));\r\n                        }\r\n                        else {\r\n                            l = xAxis.basePosition();\r\n                        }\r\n                    }\r\n                    else {\r\n                        l = xAxis.basePosition();\r\n                    }\r\n                }\r\n                fitW = true;\r\n                dataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\r\n            }\r\n            this._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\r\n            if ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b < yStart) || (t > yEnd && b > yEnd) || $type.isNaN(l) || $type.isNaN(t)) {\r\n                this._toggleColumn(dataItem, false);\r\n            }\r\n            else {\r\n                this._toggleColumn(dataItem, true);\r\n            }\r\n            let rangeGraphics = dataItem.get(\"rangeGraphics\");\r\n            if (rangeGraphics) {\r\n                $array.each(rangeGraphics, (graphics) => {\r\n                    this._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\r\n                });\r\n            }\r\n            this._applyGraphicsStates(dataItem, previousDataItem);\r\n        }\r\n    }\r\n    _updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH) {\r\n        const width = graphics.get(\"width\");\r\n        const height = graphics.get(\"height\");\r\n        const maxWidth = graphics.get(\"maxWidth\");\r\n        const maxHeight = graphics.get(\"maxHeight\");\r\n        const ptl = this.getPoint(l, t);\r\n        const pbr = this.getPoint(r, b);\r\n        const tooltipPoint = dataItem.get(\"point\");\r\n        if (tooltipPoint) {\r\n            const point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\r\n            tooltipPoint.x = point.x + this._x;\r\n            tooltipPoint.y = point.y + this._y;\r\n        }\r\n        l = ptl.x;\r\n        r = pbr.x;\r\n        t = ptl.y;\r\n        b = pbr.y;\r\n        if ($type.isNumber(width)) {\r\n            const offset = ((r - l) - width) / 2;\r\n            l += offset;\r\n            r -= offset;\r\n        }\r\n        if ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\r\n            const offset = ((r - l) - maxWidth) / 2;\r\n            l += offset;\r\n            r -= offset;\r\n        }\r\n        if ($type.isNumber(height)) {\r\n            const offset = ((b - t) - height) / 2;\r\n            t += offset;\r\n            b -= offset;\r\n        }\r\n        if ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\r\n            const offset = ((b - t) - maxHeight) / 2;\r\n            t += offset;\r\n            b -= offset;\r\n        }\r\n        if (this.get(\"adjustBulletPosition\")) {\r\n            if (fitW) {\r\n                r = Math.min(Math.max(0, r), this._pw);\r\n                l = Math.min(Math.max(0, l), this._pw);\r\n            }\r\n            if (fitH) {\r\n                t = Math.min(Math.max(0, t), this._ph);\r\n                b = Math.min(Math.max(0, b), this._ph);\r\n            }\r\n        }\r\n        dataItem.setRaw(\"left\", l);\r\n        dataItem.setRaw(\"right\", r);\r\n        dataItem.setRaw(\"top\", t);\r\n        dataItem.setRaw(\"bottom\", b);\r\n        graphics.setPrivate(\"width\", r - l);\r\n        graphics.setPrivate(\"height\", b - t);\r\n        graphics.set(\"x\", l);\r\n        graphics.set(\"y\", b - (b - t));\r\n    }\r\n    _handleDataSetChange() {\r\n        super._handleDataSetChange();\r\n        $array.each(this._dataItems, (dataItem) => {\r\n            this._toggleColumn(dataItem, false);\r\n        });\r\n    }\r\n    _applyGraphicsStates(dataItem, previousDataItem) {\r\n        const graphics = dataItem.get(\"graphics\");\r\n        const dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\r\n        const riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\r\n        const dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\r\n        const riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\r\n        if (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\r\n            const xAxis = this.get(\"xAxis\");\r\n            const yAxis = this.get(\"yAxis\");\r\n            const baseAxis = this.get(\"baseAxis\");\r\n            let open;\r\n            let close;\r\n            let previousClose;\r\n            if (baseAxis === xAxis && yAxis.isType(\"ValueAxis\")) {\r\n                open = dataItem.get(this._yOpenField);\r\n                close = dataItem.get(this._yField);\r\n                previousClose = previousDataItem.get(this._yField);\r\n            }\r\n            else if (baseAxis === yAxis && xAxis.isType(\"ValueAxis\")) {\r\n                open = dataItem.get(this._xOpenField);\r\n                close = dataItem.get(this._xField);\r\n                previousClose = previousDataItem.get(this._xField);\r\n            }\r\n            if ($type.isNumber(open) && $type.isNumber(close)) {\r\n                if (close < open) {\r\n                    if (dropFromOpen) {\r\n                        dropFromOpen.apply();\r\n                    }\r\n                }\r\n                else {\r\n                    if (riseFromOpen) {\r\n                        riseFromOpen.apply();\r\n                    }\r\n                }\r\n                if ($type.isNumber(previousClose)) {\r\n                    if (close < previousClose) {\r\n                        if (dropFromPrevious) {\r\n                            dropFromPrevious.apply();\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (riseFromPrevious) {\r\n                            riseFromPrevious.apply();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        const graphics = dataItem.get(\"graphics\");\r\n        if (graphics) {\r\n            this.columns.removeValue(graphics);\r\n            graphics.dispose();\r\n        }\r\n        const rangeGraphics = dataItem.get(\"rangeGraphics\");\r\n        if (rangeGraphics) {\r\n            $array.each(rangeGraphics, (graphics) => {\r\n                const list = graphics.getPrivate(\"list\");\r\n                if (list) {\r\n                    list.removeValue(graphics);\r\n                }\r\n                graphics.dispose();\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const graphics = dataItem.get(\"graphics\");\r\n            if (graphics) {\r\n                promises.push(graphics.hide(duration));\r\n            }\r\n            const rangeGraphics = dataItem.get(\"rangeGraphics\");\r\n            if (rangeGraphics) {\r\n                $array.each(rangeGraphics, (graphics) => {\r\n                    promises.push(graphics.hide(duration));\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    _toggleColumn(dataItem, visible) {\r\n        const graphics = dataItem.get(\"graphics\");\r\n        if (graphics) {\r\n            graphics.setPrivate(\"visible\", visible);\r\n        }\r\n        const rangeGraphics = dataItem.get(\"rangeGraphics\");\r\n        if (rangeGraphics) {\r\n            $array.each(rangeGraphics, (graphics) => {\r\n                graphics.setPrivate(\"visible\", visible);\r\n            });\r\n        }\r\n        const bullets = dataItem.bullets;\r\n        if (bullets) {\r\n            $array.each(bullets, (bullet) => {\r\n                bullet.setPrivate(\"hidden\", !visible);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            const graphics = dataItem.get(\"graphics\");\r\n            if (graphics) {\r\n                promises.push(graphics.show(duration));\r\n            }\r\n            const rangeGraphics = dataItem.get(\"rangeGraphics\");\r\n            if (rangeGraphics) {\r\n                $array.each(rangeGraphics, (graphics) => {\r\n                    promises.push(graphics.show(duration));\r\n                });\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendMarker(dataItem) {\r\n        let legendDataItem = this.get(\"legendDataItem\");\r\n        if (this.get(\"useLastColorForLegendMarker\")) {\r\n            if (!dataItem) {\r\n                const lastDataItem = this.dataItems[this.endIndex() - 1];\r\n                if (lastDataItem) {\r\n                    dataItem = lastDataItem;\r\n                }\r\n            }\r\n        }\r\n        if (legendDataItem) {\r\n            let graphics = this.columns.template;\r\n            if (dataItem) {\r\n                let column = dataItem.get(\"graphics\");\r\n                if (column) {\r\n                    graphics = column;\r\n                }\r\n            }\r\n            const markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n            if (markerRectangle) {\r\n                if (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\r\n                    $array.each(visualSettings, (setting) => {\r\n                        markerRectangle.set(setting, graphics.get(setting, this.get(setting)));\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _getTooltipTarget(dataItem) {\r\n        if (this.get(\"seriesTooltipTarget\") == \"bullet\") {\r\n            return super._getTooltipTarget(dataItem);\r\n        }\r\n        let column = dataItem.get(\"graphics\");\r\n        if (column) {\r\n            return column;\r\n        }\r\n        return this;\r\n    }\r\n}\r\nObject.defineProperty(BaseColumnSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"BaseColumnSeries\"\r\n});\r\nObject.defineProperty(BaseColumnSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: XYSeries.classNames.concat([BaseColumnSeries.className])\r\n});\r\n//# sourceMappingURL=BaseColumnSeries.js.map","import { BaseColumnSeries } from \"./BaseColumnSeries\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[TemplateList]] of all columns in series.\r\n         *\r\n         * `columns.template` can be used to set default settings for all columns,\r\n         * or to change on existing ones.\r\n         */\r\n        Object.defineProperty(this, \"columns\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => RoundedRectangle._new(this._root, {\r\n                position: \"absolute\",\r\n                themeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n            }, [this.columns.template]))\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeColumn(dataItem, listTemplate) {\r\n        const column = this.mainContainer.children.push(listTemplate.make());\r\n        column._setDataItem(dataItem);\r\n        listTemplate.push(column);\r\n        return column;\r\n    }\r\n    _processAxisRange(axisRange) {\r\n        super._processAxisRange(axisRange);\r\n        axisRange.columns = new ListTemplate(Template.new({}), () => RoundedRectangle._new(this._root, {\r\n            position: \"absolute\",\r\n            themeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n        }, [this.columns.template, axisRange.columns.template]));\r\n    }\r\n}\r\nObject.defineProperty(ColumnSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"ColumnSeries\"\r\n});\r\nObject.defineProperty(ColumnSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: BaseColumnSeries.classNames.concat([ColumnSeries.className])\r\n});\r\n//# sourceMappingURL=ColumnSeries.js.map","export var slice = Array.prototype.slice;\n\nexport default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","const pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction append(strings) {\n  this._ += strings[0];\n  for (let i = 1, n = strings.length; i < n; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\n\nfunction appendRound(digits) {\n  let d = Math.floor(digits);\n  if (!(d >= 0)) throw new Error(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  const k = 10 ** d;\n  return function(strings) {\n    this._ += strings[0];\n    for (let i = 1, n = strings.length; i < n; ++i) {\n      this._ += Math.round(arguments[i] * k) / k + strings[i];\n    }\n  };\n}\n\nexport class Path {\n  constructor(digits) {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n    this._append = digits == null ? append : appendRound(digits);\n  }\n  moveTo(x, y) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._append`Z`;\n    }\n  }\n  lineTo(x, y) {\n    this._append`L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  quadraticCurveTo(x1, y1, x, y) {\n    this._append`Q${+x1},${+y1},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._append`C${+x1},${+y1},${+x2},${+y2},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._append`M${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._append`L${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      let x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._append`L${x1 + t01 * x01},${y1 + t01 * y01}`;\n      }\n\n      this._append`A${r},${r},0,0,${+(y01 * x20 > x01 * y20)},${this._x1 = x1 + t21 * x21},${this._y1 = y1 + t21 * y21}`;\n    }\n  }\n  arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._append`M${x0},${y0}`;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._append`L${x0},${y0}`;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._append`A${r},${r},0,1,${cw},${x - dx},${y - dy}A${r},${r},0,1,${cw},${this._x1 = x0},${this._y1 = y0}`;\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._append`A${r},${r},0,${+(da >= pi)},${cw},${this._x1 = x + r * Math.cos(a1)},${this._y1 = y + r * Math.sin(a1)}`;\n    }\n  }\n  rect(x, y, w, h) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${w = +w}v${+h}h${-w}Z`;\n  }\n  toString() {\n    return this._;\n  }\n}\n\nexport function path() {\n  return new Path;\n}\n\n// Allow instanceof d3.path\npath.prototype = Path.prototype;\n\nexport function pathRound(digits = 3) {\n  return new Path(+digits);\n}\n","import {Path} from \"d3-path\";\n\nexport function withPath(shape) {\n  let digits = 3;\n\n  shape.digits = function(_) {\n    if (!arguments.length) return digits;\n    if (_ == null) {\n      digits = null;\n    } else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    return shape;\n  };\n\n  return () => new Path(digits);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {withPath} from \"./path.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x, y) {\n  var defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null,\n      path = withPath(line);\n\n  x = typeof x === \"function\" ? x : (x === undefined) ? pointX : constant(x);\n  y = typeof y === \"function\" ? y : (y === undefined) ? pointY : constant(y);\n\n  function line(data) {\n    var i,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport {withPath} from \"./path.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x0, y0, y1) {\n  var x1 = null,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null,\n      path = withPath(area);\n\n  x0 = typeof x0 === \"function\" ? x0 : (x0 === undefined) ? pointX : constant(+x0);\n  y0 = typeof y0 === \"function\" ? y0 : (y0 === undefined) ? constant(0) : constant(+y0);\n  y1 = typeof y1 === \"function\" ? y1 : (y1 === undefined) ? pointY : constant(+y1);\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","import { XYSeries } from \"./XYSeries\";\r\nimport { Graphics } from \"../../../core/render/Graphics\";\r\nimport { line, area } from \"d3-shape\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { color } from \"../../../core/util/Color\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n/**\r\n * Used to plot line and/or area series.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\r\n * @important\r\n */\r\nexport class LineSeries extends XYSeries {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_endIndex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeGenerator\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: line()\r\n        });\r\n        Object.defineProperty(this, \"_fillGenerator\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: area()\r\n        });\r\n        Object.defineProperty(this, \"_legendStroke\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_legendFill\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        /**\r\n         * A [[TemplateList]] of all line segments in series.\r\n         *\r\n         * `strokes.template` can be used to set default settings for all line\r\n         * segments, or to change on existing ones.\r\n         *\r\n         * @default new ListTemplate<Graphics>\r\n         */\r\n        Object.defineProperty(this, \"strokes\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\r\n            }, [this.strokes.template]))\r\n        });\r\n        /**\r\n         * A [[TemplateList]] of all segment fills in series.\r\n         *\r\n         * `fills.template` can be used to set default settings for all segment\r\n         * fills, or to change on existing ones.\r\n         *\r\n         * @default new ListTemplate<Graphics>\r\n         */\r\n        Object.defineProperty(this, \"fills\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\r\n            }, [this.fills.template]))\r\n        });\r\n        // custom set from data\r\n        Object.defineProperty(this, \"_fillTemplate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_strokeTemplate\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_previousPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: [0, 0, 0, 0]\r\n        });\r\n        Object.defineProperty(this, \"_dindex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_sindex\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._fillGenerator.y0(function (p) {\r\n            return p[3];\r\n        });\r\n        this._fillGenerator.x0(function (p) {\r\n            return p[2];\r\n        });\r\n        this._fillGenerator.y1(function (p) {\r\n            return p[1];\r\n        });\r\n        this._fillGenerator.x1(function (p) {\r\n            return p[0];\r\n        });\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeStroke(strokes) {\r\n        const stroke = this.mainContainer.children.push(strokes.make());\r\n        strokes.push(stroke);\r\n        return stroke;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeFill(fills) {\r\n        const fill = this.mainContainer.children.push(fills.make());\r\n        fills.push(fill);\r\n        return fill;\r\n    }\r\n    _updateChildren() {\r\n        this._strokeTemplate = undefined;\r\n        this._fillTemplate = undefined;\r\n        let xAxis = this.get(\"xAxis\");\r\n        let yAxis = this.get(\"yAxis\");\r\n        if (this.isDirty(\"stroke\")) {\r\n            const stroke = this.get(\"stroke\");\r\n            this.strokes.template.set(\"stroke\", stroke);\r\n            const legendStroke = this._legendStroke;\r\n            if (legendStroke) {\r\n                legendStroke.states.lookup(\"default\").set(\"stroke\", stroke);\r\n            }\r\n        }\r\n        if (this.isDirty(\"fill\")) {\r\n            const fill = this.get(\"fill\");\r\n            this.fills.template.set(\"fill\", fill);\r\n            const legendFill = this._legendFill;\r\n            if (legendFill) {\r\n                legendFill.states.lookup(\"default\").set(\"fill\", fill);\r\n            }\r\n        }\r\n        if (this.isDirty(\"curveFactory\")) {\r\n            const curveFactory = this.get(\"curveFactory\");\r\n            if (curveFactory) {\r\n                this._strokeGenerator.curve(curveFactory);\r\n                this._fillGenerator.curve(curveFactory);\r\n            }\r\n        }\r\n        if (xAxis.inited && yAxis.inited) {\r\n            if (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\r\n                this.fills.each((fill) => {\r\n                    fill.setPrivate(\"visible\", false);\r\n                });\r\n                this.strokes.each((fill) => {\r\n                    fill.setPrivate(\"visible\", false);\r\n                });\r\n                this.axisRanges.each((axisRange) => {\r\n                    let fills = axisRange.fills;\r\n                    if (fills) {\r\n                        fills.each((fill) => {\r\n                            fill.setPrivate(\"visible\", false);\r\n                        });\r\n                    }\r\n                    let strokes = axisRange.strokes;\r\n                    if (strokes) {\r\n                        strokes.each((stroke) => {\r\n                            stroke.setPrivate(\"visible\", false);\r\n                        });\r\n                    }\r\n                });\r\n                let startIndex = this.startIndex();\r\n                let strokeTemplateField = this.strokes.template.get(\"templateField\");\r\n                let fillTemplateField = this.fills.template.get(\"templateField\");\r\n                let strokeTemplateFound = true;\r\n                let fillTemplateFound = true;\r\n                if (strokeTemplateField) {\r\n                    strokeTemplateFound = false;\r\n                }\r\n                if (fillTemplateField) {\r\n                    fillTemplateFound = false;\r\n                }\r\n                for (let i = startIndex - 1; i >= 0; i--) {\r\n                    let dataItem = this.dataItems[i];\r\n                    let hasValues = true;\r\n                    let dataContext = dataItem.dataContext;\r\n                    if (strokeTemplateField) {\r\n                        if (dataContext[strokeTemplateField]) {\r\n                            strokeTemplateFound = true;\r\n                        }\r\n                    }\r\n                    if (fillTemplateField) {\r\n                        if (dataContext[fillTemplateField]) {\r\n                            fillTemplateFound = true;\r\n                        }\r\n                    }\r\n                    $array.each(this._valueFields, (field) => {\r\n                        if (!$type.isNumber(dataItem.get(field))) {\r\n                            hasValues = false;\r\n                        }\r\n                    });\r\n                    if (hasValues && strokeTemplateFound && fillTemplateFound) {\r\n                        startIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n                let len = this.dataItems.length;\r\n                let endIndex = this.endIndex();\r\n                if (endIndex < len) {\r\n                    endIndex++;\r\n                    for (let i = endIndex; i < len; i++) {\r\n                        let dataItem = this.dataItems[i];\r\n                        let hasValues = true;\r\n                        $array.each(this._valueFields, (field) => {\r\n                            if (!$type.isNumber(dataItem.get(field))) {\r\n                                hasValues = false;\r\n                            }\r\n                        });\r\n                        if (hasValues) {\r\n                            endIndex = i + 1;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (startIndex > 0) {\r\n                    startIndex--;\r\n                }\r\n                this._endIndex = endIndex;\r\n                this._clearGraphics();\r\n                this._sindex = 0;\r\n                this._dindex = startIndex;\r\n                if (this.dataItems.length == 1) {\r\n                    this._startSegment(0);\r\n                }\r\n                else {\r\n                    // this is done to avoid recursion with a lot of segments \r\n                    while (this._dindex < endIndex - 1) {\r\n                        this._startSegment(this._dindex);\r\n                        this._sindex++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._skipped = true;\r\n        }\r\n        super._updateChildren();\r\n    }\r\n    _clearGraphics() {\r\n        this.strokes.clear();\r\n        this.fills.clear();\r\n    }\r\n    _startSegment(dataItemIndex) {\r\n        let endIndex = this._endIndex;\r\n        let currentEndIndex = endIndex;\r\n        const autoGapCount = this.get(\"autoGapCount\");\r\n        const connect = this.get(\"connect\");\r\n        const fill = this.makeFill(this.fills);\r\n        const fillTemplate = this._fillTemplate;\r\n        const originalTemplate = this.fills.template;\r\n        if (fillTemplate && fillTemplate != originalTemplate) {\r\n            fill.template = fillTemplate;\r\n        }\r\n        fill.setPrivate(\"visible\", true);\r\n        const stroke = this.makeStroke(this.strokes);\r\n        const strokeTemplate = this._strokeTemplate;\r\n        if (strokeTemplate && strokeTemplate != this.strokes.template) {\r\n            stroke.template = strokeTemplate;\r\n        }\r\n        stroke.setPrivate(\"visible\", true);\r\n        let xAxis = this.get(\"xAxis\");\r\n        let yAxis = this.get(\"yAxis\");\r\n        let baseAxis = this.get(\"baseAxis\");\r\n        let vcx = this.get(\"vcx\", 1);\r\n        let vcy = this.get(\"vcy\", 1);\r\n        let xField = this._xField;\r\n        let yField = this._yField;\r\n        let xOpenField = this._xOpenField;\r\n        let yOpenField = this._yOpenField;\r\n        const xOpenFieldValue = this.get(\"openValueXField\");\r\n        const yOpenFieldValue = this.get(\"openValueYField\");\r\n        if (!xOpenFieldValue) {\r\n            xOpenField = this._xField;\r\n        }\r\n        if (!yOpenFieldValue) {\r\n            yOpenField = this._yField;\r\n        }\r\n        const stacked = this.get(\"stacked\");\r\n        const basePosX = xAxis.basePosition();\r\n        const basePosY = yAxis.basePosition();\r\n        let baseField;\r\n        if (baseAxis === yAxis) {\r\n            baseField = this._yField;\r\n        }\r\n        else {\r\n            baseField = this._xField;\r\n        }\r\n        const segments = [];\r\n        let points = [];\r\n        segments.push(points);\r\n        const strokeTemplateField = this.strokes.template.get(\"templateField\");\r\n        const fillTemplateField = this.fills.template.get(\"templateField\");\r\n        let locationX = this.get(\"locationX\", 0.5);\r\n        let locationY = this.get(\"locationY\", 0.5);\r\n        let openLocationX = this.get(\"openLocationX\", locationX);\r\n        let openLocationY = this.get(\"openLocationY\", locationY);\r\n        const minDistance = this.get(\"minDistance\", 0);\r\n        let i;\r\n        let fillVisible = this.fills.template.get(\"visible\");\r\n        if (this.axisRanges.length > 0) {\r\n            fillVisible = true;\r\n        }\r\n        let getOpen = false;\r\n        if (stacked || xOpenFieldValue || yOpenFieldValue) {\r\n            getOpen = true;\r\n        }\r\n        const o = {\r\n            points, segments, stacked, getOpen, basePosX, basePosY, fillVisible, xField, yField, xOpenField, yOpenField, vcx, vcy, baseAxis, xAxis, yAxis, locationX, locationY, openLocationX, openLocationY, minDistance\r\n        };\r\n        for (i = dataItemIndex; i < currentEndIndex; i++) {\r\n            this._dindex = i;\r\n            const dataItem = this._dataItems[i];\r\n            let valueX = dataItem.get(xField);\r\n            let valueY = dataItem.get(yField);\r\n            if (valueX == null || valueY == null) {\r\n                if (!connect) {\r\n                    points = [];\r\n                    segments.push(points);\r\n                    o.points = points;\r\n                }\r\n            }\r\n            else {\r\n                this._getPoints(dataItem, o);\r\n            }\r\n            if (strokeTemplateField) {\r\n                let strokeTemplate = dataItem.dataContext[strokeTemplateField];\r\n                if (strokeTemplate) {\r\n                    if (!(strokeTemplate instanceof Template)) {\r\n                        strokeTemplate = Template.new(strokeTemplate);\r\n                    }\r\n                    this._strokeTemplate = strokeTemplate;\r\n                    if (i > dataItemIndex) {\r\n                        currentEndIndex = i;\r\n                        break;\r\n                    }\r\n                    else {\r\n                        stroke.template = strokeTemplate;\r\n                    }\r\n                }\r\n            }\r\n            if (fillTemplateField) {\r\n                let fillTemplate = dataItem.dataContext[fillTemplateField];\r\n                if (fillTemplate) {\r\n                    if (!(fillTemplate instanceof Template)) {\r\n                        fillTemplate = Template.new(fillTemplate);\r\n                    }\r\n                    this._fillTemplate = fillTemplate;\r\n                    if (i > dataItemIndex) {\r\n                        currentEndIndex = i;\r\n                        break;\r\n                    }\r\n                    else {\r\n                        fill.template = fillTemplate;\r\n                    }\r\n                }\r\n            }\r\n            if (!connect) {\r\n                let nextItem = this.dataItems[i + 1];\r\n                if (nextItem) {\r\n                    if (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\r\n                        points = [];\r\n                        segments.push(points);\r\n                        o.points = points;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        fill.setRaw(\"userData\", [dataItemIndex, i]);\r\n        stroke.setRaw(\"userData\", [dataItemIndex, i]);\r\n        if (i === endIndex) {\r\n            this._endLine(points, segments[0][0]);\r\n        }\r\n        if (stroke) {\r\n            this._drawStroke(stroke, segments);\r\n        }\r\n        if (fill) {\r\n            this._drawFill(fill, segments);\r\n        }\r\n        this.axisRanges.each((axisRange) => {\r\n            const container = axisRange.container;\r\n            const fills = axisRange.fills;\r\n            const fill = this.makeFill(fills);\r\n            if (container) {\r\n                container.children.push(fill);\r\n            }\r\n            fill.setPrivate(\"visible\", true);\r\n            this._drawFill(fill, segments);\r\n            const strokes = axisRange.strokes;\r\n            const stroke = this.makeStroke(strokes);\r\n            if (container) {\r\n                container.children.push(stroke);\r\n            }\r\n            stroke.setPrivate(\"visible\", true);\r\n            this._drawStroke(stroke, segments);\r\n            fill.setRaw(\"userData\", [dataItemIndex, i]);\r\n            stroke.setRaw(\"userData\", [dataItemIndex, i]);\r\n        });\r\n    }\r\n    _getPoints(dataItem, o) {\r\n        let points = o.points;\r\n        let itemLocationX = dataItem.get(\"locationX\", o.locationX);\r\n        let itemLocationY = dataItem.get(\"locationY\", o.locationY);\r\n        let xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx);\r\n        let yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy);\r\n        if (this._shouldInclude(xPos)) {\r\n            const iPoint = this.getPoint(xPos, yPos);\r\n            const point = [iPoint.x, iPoint.y];\r\n            iPoint.x += this._x;\r\n            iPoint.y += this._y;\r\n            dataItem.set(\"point\", iPoint);\r\n            if (o.fillVisible) {\r\n                let xPos0 = xPos;\r\n                let yPos0 = yPos;\r\n                if (o.baseAxis === o.xAxis) {\r\n                    yPos0 = o.basePosY;\r\n                }\r\n                else if (o.baseAxis === o.yAxis) {\r\n                    xPos0 = o.basePosX;\r\n                }\r\n                if (o.getOpen) {\r\n                    let valueX = dataItem.get(o.xOpenField);\r\n                    let valueY = dataItem.get(o.yOpenField);\r\n                    if (valueX != null && valueY != null) {\r\n                        let itemLocationX = dataItem.get(\"openLocationX\", o.openLocationX);\r\n                        let itemLocationY = dataItem.get(\"openLocationY\", o.openLocationY);\r\n                        if (o.stacked) {\r\n                            let stackToItemX = dataItem.get(\"stackToItemX\");\r\n                            let stackToItemY = dataItem.get(\"stackToItemY\");\r\n                            if (stackToItemX) {\r\n                                xPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX, stackToItemX.component.get(\"vcx\"));\r\n                                if ($type.isNaN(xPos0)) {\r\n                                    xPos0 = o.basePosX;\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (o.yAxis === o.baseAxis) {\r\n                                    xPos0 = o.basePosX;\r\n                                }\r\n                                else {\r\n                                    xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\r\n                                }\r\n                            }\r\n                            if (stackToItemY) {\r\n                                yPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY, stackToItemY.component.get(\"vcy\"));\r\n                                if ($type.isNaN(yPos0)) {\r\n                                    yPos0 = o.basePosY;\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (o.xAxis === o.baseAxis) {\r\n                                    yPos0 = o.basePosY;\r\n                                }\r\n                                else {\r\n                                    yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\r\n                            yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\r\n                        }\r\n                    }\r\n                }\r\n                let closeIPoint = this.getPoint(xPos0, yPos0);\r\n                point[2] = closeIPoint.x;\r\n                point[3] = closeIPoint.y;\r\n            }\r\n            if (o.minDistance > 0) {\r\n                const p0 = point[0];\r\n                const p1 = point[1];\r\n                const p2 = point[2];\r\n                const p3 = point[3];\r\n                const prev = this._previousPoint;\r\n                const pp0 = prev[0];\r\n                const pp1 = prev[1];\r\n                const pp2 = prev[2];\r\n                const pp3 = prev[3];\r\n                if (Math.hypot(p0 - pp0, p1 - pp1) > o.minDistance || (p2 && p3 && Math.hypot(p2 - pp2, p3 - pp3) > o.minDistance)) {\r\n                    points.push(point);\r\n                    this._previousPoint = point;\r\n                }\r\n            }\r\n            else {\r\n                points.push(point);\r\n            }\r\n        }\r\n    }\r\n    _endLine(_points, _firstPoint) {\r\n    }\r\n    _drawStroke(graphics, segments) {\r\n        if (graphics.get(\"visible\")) {\r\n            graphics.set(\"draw\", (display) => {\r\n                $array.each(segments, (segment) => {\r\n                    this._strokeGenerator.context(display);\r\n                    this._strokeGenerator(segment);\r\n                });\r\n            });\r\n        }\r\n    }\r\n    _drawFill(graphics, segments) {\r\n        if (graphics.get(\"visible\")) {\r\n            graphics.set(\"draw\", (display) => {\r\n                $array.each(segments, (segment) => {\r\n                    this._fillGenerator.context(display);\r\n                    this._fillGenerator(segment);\r\n                });\r\n            });\r\n        }\r\n    }\r\n    _processAxisRange(axisRange) {\r\n        super._processAxisRange(axisRange);\r\n        axisRange.fills = new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n            themeTags: $utils.mergeTags(axisRange.fills.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\r\n        }, [this.fills.template, axisRange.fills.template]));\r\n        axisRange.strokes = new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\r\n            themeTags: $utils.mergeTags(axisRange.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\r\n        }, [this.strokes.template, axisRange.strokes.template]));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    createLegendMarker(_dataItem) {\r\n        const legendDataItem = this.get(\"legendDataItem\");\r\n        if (legendDataItem) {\r\n            const marker = legendDataItem.get(\"marker\");\r\n            const markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n            if (markerRectangle) {\r\n                markerRectangle.setPrivate(\"visible\", false);\r\n            }\r\n            marker.set(\"background\", Rectangle.new(marker._root, { fillOpacity: 0, fill: color(0x000000) }));\r\n            const legendStroke = marker.children.push(Graphics._new(marker._root, {\r\n                themeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"], interactive: false\r\n            }, [this.strokes.template]));\r\n            this._legendStroke = legendStroke;\r\n            const legendFill = marker.children.push(Graphics._new(marker._root, {\r\n                themeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\r\n            }, [this.fills.template]));\r\n            this._legendFill = legendFill;\r\n            const disabledColor = this._root.interfaceColors.get(\"disabled\");\r\n            legendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\r\n            legendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\r\n            if (this.bullets.length > 0) {\r\n                const bulletFunction = this.bullets.getIndex(0);\r\n                if (bulletFunction) {\r\n                    const bullet = bulletFunction(marker._root, this, new DataItem(this, {}, {}));\r\n                    if (bullet) {\r\n                        const sprite = bullet.get(\"sprite\");\r\n                        if (sprite instanceof Graphics) {\r\n                            sprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\r\n                        }\r\n                        if (sprite) {\r\n                            sprite.set(\"tooltipText\", undefined);\r\n                            sprite.set(\"tooltipHTML\", undefined);\r\n                            marker.children.push(sprite);\r\n                            sprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(LineSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"LineSeries\"\r\n});\r\nObject.defineProperty(LineSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: XYSeries.classNames.concat([LineSeries.className])\r\n});\r\n//# sourceMappingURL=LineSeries.js.map","/**\r\n * @ignore\r\n */\r\nexport class MonotoneXTension {\r\n    constructor(context, tension) {\r\n        Object.defineProperty(this, \"_line\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_point\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_context\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_x0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_x1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_y0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_y1\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_t0\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_tension\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        this._context = context;\r\n        this._tension = tension;\r\n    }\r\n    areaStart() {\r\n        this._line = 0;\r\n    }\r\n    areaEnd() {\r\n        this._line = NaN;\r\n    }\r\n    lineStart() {\r\n        this._x0 = this._x1 =\r\n            this._y0 = this._y1 =\r\n                this._t0 = NaN;\r\n        this._point = 0;\r\n    }\r\n    lineEnd() {\r\n        switch (this._point) {\r\n            case 2:\r\n                this._context.lineTo(this._x1, this._y1);\r\n                break;\r\n            case 3:\r\n                point(this, this._t0, slope2(this, this._t0));\r\n                break;\r\n        }\r\n        if (this._line || (this._line !== 0 && this._point === 1))\r\n            this._context.closePath();\r\n        this._line = 1 - this._line;\r\n    }\r\n    point(x, y) {\r\n        let t1 = NaN;\r\n        x = +x, y = +y;\r\n        if (x === this._x1 && y === this._y1)\r\n            return; // Ignore coincident points.\r\n        switch (this._point) {\r\n            case 0:\r\n                this._point = 1;\r\n                this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\r\n                break;\r\n            case 1:\r\n                this._point = 2;\r\n                break;\r\n            case 2:\r\n                this._point = 3;\r\n                point(this, slope2(this, t1 = slope3(this, x, y)), t1);\r\n                break;\r\n            default:\r\n                point(this, this._t0, t1 = slope3(this, x, y));\r\n                break;\r\n        }\r\n        this._x0 = this._x1, this._x1 = x;\r\n        this._y0 = this._y1, this._y1 = y;\r\n        this._t0 = t1;\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport function curveMonotoneXTension(tension) {\r\n    function monotoneXTension(context) {\r\n        return new MonotoneXTension(context, tension);\r\n    }\r\n    return monotoneXTension;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction sign(x) {\r\n    return x < 0 ? -1 : 1;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction slope3(that, x2, y2) {\r\n    let h0 = (that._x1 - that._x0);\r\n    let h1 = (x2 - that._x1);\r\n    let s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0);\r\n    let s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0);\r\n    let p = (s0 * h1 + s1 * h0) / (h0 + h1);\r\n    return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction slope2(that, t) {\r\n    let h = that._x1 - that._x0;\r\n    return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nfunction point(that, t0, t1) {\r\n    let x0 = that._x0, y0 = that._y0, x1 = that._x1, y1 = that._y1, dx = (x1 - x0) / 1.5 * (1 - that._tension);\r\n    that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\r\n}\r\n//# sourceMappingURL=MonotoneXTension.js.map","import { LineSeries } from \"./LineSeries\";\r\nimport { curveMonotoneXTension } from \"../../../core/render/MonotoneXTension\";\r\n/**\r\n * Smoothed line series suitable for horizontal plots.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\r\n */\r\nexport class SmoothedXLineSeries extends LineSeries {\r\n    _afterNew() {\r\n        this._setDefault(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)));\r\n        super._afterNew();\r\n    }\r\n    _updateChildren() {\r\n        if (this.isDirty(\"tension\")) {\r\n            this.set(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)));\r\n            this._valuesDirty = true;\r\n        }\r\n        super._updateChildren();\r\n    }\r\n}\r\nObject.defineProperty(SmoothedXLineSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"SmoothedXLineSeries\"\r\n});\r\nObject.defineProperty(SmoothedXLineSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: LineSeries.classNames.concat([SmoothedXLineSeries.className])\r\n});\r\n//# sourceMappingURL=SmoothedXLineSeries.js.map","import { Container } from \"../../core/render/Container\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport { Grid } from \"./axes/Grid\";\r\n//import { Animations } from \"../core/util/Animation\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $object from \"../../core/util/Object\";\r\n/**\r\n * Creates a chart cursor for an [[XYChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\r\n * @important\r\n */\r\nexport class XYCursor extends Container {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\r\n         *\r\n         * @default Grid.new()\r\n         */\r\n        Object.defineProperty(this, \"lineX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Grid.new(this._root, {\r\n                themeTags: [\"x\"]\r\n            }))\r\n        });\r\n        /**\r\n         * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\r\n         *\r\n         * @default Grid.new()\r\n         */\r\n        Object.defineProperty(this, \"lineY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Grid.new(this._root, {\r\n                themeTags: [\"y\"]\r\n            }))\r\n        });\r\n        /**\r\n         * An element that represents current selection.\r\n         *\r\n         * @default Graphics.new()\r\n         */\r\n        Object.defineProperty(this, \"selection\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Graphics.new(this._root, {\r\n                themeTags: [\"selection\", \"cursor\"], layer: 30\r\n            }))\r\n        });\r\n        Object.defineProperty(this, \"_movePoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_lastPoint\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: { x: 0, y: 0 }\r\n        });\r\n        Object.defineProperty(this, \"_tooltipX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        Object.defineProperty(this, \"_tooltipY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n        /**\r\n         * A chart cursor is attached to.\r\n         */\r\n        Object.defineProperty(this, \"chart\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_toX\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n        Object.defineProperty(this, \"_toY\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: void 0\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\r\n        super._afterNew();\r\n        this.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\r\n        this.states.create(\"hidden\", { visible: true, opacity: 0 });\r\n        this._drawLines();\r\n        this.setPrivateRaw(\"visible\", false);\r\n        this._disposers.push(this.setTimeout(() => {\r\n            this.setPrivate(\"visible\", true);\r\n        }, 500));\r\n        this._disposers.push(this.lineX.events.on(\"positionchanged\", () => {\r\n            this._handleXLine();\r\n        }));\r\n        this._disposers.push(this.lineY.events.on(\"positionchanged\", () => {\r\n            this._handleYLine();\r\n        }));\r\n        this._disposers.push(this.lineX.events.on(\"focus\", (ev) => this._handleLineFocus(ev.target)));\r\n        this._disposers.push(this.lineX.events.on(\"blur\", (ev) => this._handleLineBlur(ev.target)));\r\n        this._disposers.push(this.lineY.events.on(\"focus\", (ev) => this._handleLineFocus(ev.target)));\r\n        this._disposers.push(this.lineY.events.on(\"blur\", (ev) => this._handleLineBlur(ev.target)));\r\n        if ($utils.supports(\"keyboardevents\")) {\r\n            this._disposers.push($utils.addEventListener(document, \"keydown\", (ev) => {\r\n                this._handleLineMove(ev.keyCode);\r\n            }));\r\n        }\r\n    }\r\n    _setUpTouch() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart.plotContainer._display.cancelTouch = this.get(\"behavior\") != \"none\" ? true : false;\r\n        }\r\n    }\r\n    _handleXLine() {\r\n        let x = this.lineX.x();\r\n        let visible = true;\r\n        if (x < 0 || x > this.width()) {\r\n            visible = false;\r\n        }\r\n        this.lineX.setPrivate(\"visible\", visible);\r\n    }\r\n    _handleYLine() {\r\n        let y = this.lineY.y();\r\n        let visible = true;\r\n        if (y < 0 || y > this.height()) {\r\n            visible = false;\r\n        }\r\n        this.lineY.setPrivate(\"visible\", visible);\r\n    }\r\n    _handleLineMove(keyCode) {\r\n        let dir = \"\";\r\n        let position = 0;\r\n        let increment = 0.1;\r\n        const chart = this.chart;\r\n        if (this._root.focused(this.lineX)) {\r\n            if (chart && chart.xAxes.length) {\r\n                increment = chart.xAxes.getIndex(0).getCellWidthPosition();\r\n            }\r\n            position = this.getPrivate(\"positionX\", 0);\r\n            dir = \"positionX\";\r\n            if (keyCode == 37) {\r\n                position -= increment;\r\n            }\r\n            else if (keyCode == 39) {\r\n                position += increment;\r\n            }\r\n        }\r\n        else if (this._root.focused(this.lineY)) {\r\n            if (chart && chart.yAxes.length) {\r\n                increment = chart.yAxes.getIndex(0).getCellWidthPosition();\r\n            }\r\n            position = this.getPrivate(\"positionY\", 0);\r\n            dir = \"positionY\";\r\n            if (keyCode == 38) {\r\n                position -= increment;\r\n            }\r\n            else if (keyCode == 40) {\r\n                position += increment;\r\n            }\r\n        }\r\n        if (position < 0) {\r\n            position = 0;\r\n        }\r\n        else if (position > 1) {\r\n            position = 1;\r\n        }\r\n        if (dir != \"\") {\r\n            this.set(dir, position);\r\n        }\r\n    }\r\n    _handleLineFocus(_line) {\r\n        this.setAll({\r\n            positionX: this.getPrivate(\"positionX\"),\r\n            positionY: this.getPrivate(\"positionY\"),\r\n            alwaysShow: true\r\n        });\r\n    }\r\n    _handleLineBlur(_line) {\r\n        this.setAll({\r\n            positionX: undefined,\r\n            positionY: undefined,\r\n            alwaysShow: false\r\n        });\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this.isDirty(\"xAxis\")) {\r\n            this._tooltipX = false;\r\n            const xAxis = this.get(\"xAxis\");\r\n            if (xAxis) {\r\n                const tooltip = xAxis.get(\"tooltip\");\r\n                if (tooltip) {\r\n                    this._tooltipX = true;\r\n                    this._disposers.push(tooltip.on(\"pointTo\", () => {\r\n                        this._updateXLine(tooltip);\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n        if (this.isDirty(\"yAxis\")) {\r\n            this._tooltipY = false;\r\n            const yAxis = this.get(\"yAxis\");\r\n            if (yAxis) {\r\n                const tooltip = yAxis.get(\"tooltip\");\r\n                if (tooltip) {\r\n                    this._tooltipY = true;\r\n                    this._disposers.push(tooltip.on(\"pointTo\", () => {\r\n                        this._updateYLine(tooltip);\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    _handleSyncWith() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            const syncWith = this.get(\"syncWith\");\r\n            const otherCharts = [];\r\n            if (syncWith) {\r\n                $array.each(syncWith, (cursor) => {\r\n                    const chart = cursor.chart;\r\n                    if (chart) {\r\n                        otherCharts.push(chart);\r\n                    }\r\n                });\r\n            }\r\n            chart._otherCharts = otherCharts;\r\n        }\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        this._handleSyncWith();\r\n        if (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\r\n            const positionX = this.get(\"positionX\");\r\n            const positionY = this.get(\"positionY\");\r\n            if (positionX == null && positionY == null) {\r\n                this.hide(0);\r\n            }\r\n            else {\r\n                this._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\r\n                this.handleMove();\r\n            }\r\n        }\r\n    }\r\n    _updateXLine(tooltip) {\r\n        let x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 2);\r\n        if (this._toX != x) {\r\n            this.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\r\n            this._toX = x;\r\n        }\r\n    }\r\n    _updateYLine(tooltip) {\r\n        let y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 2);\r\n        if (this._toY != y) {\r\n            this.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\r\n            this._toY = y;\r\n        }\r\n    }\r\n    _drawLines() {\r\n        this.lineX.set(\"draw\", (display) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(0, this.height());\r\n        });\r\n        this.lineY.set(\"draw\", (display) => {\r\n            display.moveTo(0, 0);\r\n            display.lineTo(this.width(), 0);\r\n        });\r\n    }\r\n    _setChart(chart) {\r\n        this.chart = chart;\r\n        this._handleSyncWith();\r\n        const plotContainer = chart.plotContainer;\r\n        this.events.on(\"boundschanged\", () => {\r\n            this._disposers.push(this.setTimeout(() => {\r\n                if (this.get(\"alwaysShow\")) {\r\n                    this._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\r\n                    this.handleMove();\r\n                }\r\n            }, 50));\r\n        });\r\n        //this._display.interactive = true;\r\n        if ($utils.supports(\"touchevents\")) {\r\n            this._disposers.push(plotContainer.events.on(\"click\", (event) => {\r\n                if ($utils.isTouchEvent(event.originalEvent)) {\r\n                    this._handleMove(event.originalEvent);\r\n                }\r\n            }));\r\n            this._setUpTouch();\r\n        }\r\n        this._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\r\n            this._handleCursorDown(event.originalEvent);\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\r\n            this._handleCursorUp(event.originalEvent);\r\n            if (!event.native && !this.isHidden()) {\r\n                this._handleMove(event.originalEvent);\r\n            }\r\n        }));\r\n        this._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\r\n            if (!this.get(\"syncWith\")) {\r\n                if ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\r\n                    // Ignore mouse movement if it originates on outside element and\r\n                    // we're not dragging.\r\n                    return;\r\n                }\r\n            }\r\n            this._handleMove(event.originalEvent);\r\n        }));\r\n        const parent = this.parent;\r\n        if (parent) {\r\n            parent.children.moveValue(this.selection);\r\n        }\r\n    }\r\n    _inPlot(point) {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            return chart.inPlot(point);\r\n        }\r\n        return false;\r\n    }\r\n    _handleCursorDown(event) {\r\n        const rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\r\n        let local = this._display.toLocal(rootPoint);\r\n        const chart = this.chart;\r\n        this.selection.set(\"draw\", () => { });\r\n        if (chart && this._inPlot(local)) {\r\n            this._downPoint = local;\r\n            if (this.get(\"behavior\") != \"none\") {\r\n                this.selection.show();\r\n                const type = \"selectstarted\";\r\n                if (this.events.isEnabled(type)) {\r\n                    this.events.dispatch(type, { type: type, target: this });\r\n                }\r\n            }\r\n            let positionX = this._getPosition(local).x;\r\n            let positionY = this._getPosition(local).y;\r\n            this.setPrivate(\"downPositionX\", positionX);\r\n            this.setPrivate(\"downPositionY\", positionY);\r\n        }\r\n    }\r\n    _handleCursorUp(event) {\r\n        // TODO: handle multitouch\r\n        if (this._downPoint) {\r\n            const behavior = this.get(\"behavior\", \"none\");\r\n            if (behavior != \"none\") {\r\n                if (behavior.charAt(0) === \"z\") {\r\n                    this.selection.hide();\r\n                }\r\n                const rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\r\n                let local = this._display.toLocal(rootPoint);\r\n                const downPoint = this._downPoint;\r\n                const moveThreshold = this.get(\"moveThreshold\", 1);\r\n                if (local && downPoint) {\r\n                    let dispatch = false;\r\n                    if (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\r\n                        if (Math.abs(local.x - downPoint.x) > moveThreshold) {\r\n                            dispatch = true;\r\n                        }\r\n                    }\r\n                    if (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\r\n                        if (Math.abs(local.y - downPoint.y) > moveThreshold) {\r\n                            dispatch = true;\r\n                        }\r\n                    }\r\n                    if (dispatch) {\r\n                        const type = \"selectended\";\r\n                        if (this.events.isEnabled(type)) {\r\n                            this.events.dispatch(type, { type: type, target: this });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this._downPoint = undefined;\r\n    }\r\n    _handleMove(event) {\r\n        if (this.getPrivate(\"visible\")) {\r\n            const chart = this.chart;\r\n            if (chart && $object.keys(chart.plotContainer._downPoints).length > 1) {\r\n                this.set(\"forceHidden\", true);\r\n                return;\r\n            }\r\n            else {\r\n                this.set(\"forceHidden\", false);\r\n            }\r\n            // TODO: handle multitouch\r\n            const rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\r\n            const lastPoint = this._lastPoint;\r\n            if (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\r\n                return;\r\n            }\r\n            this._lastPoint = rootPoint;\r\n            this.setPrivate(\"lastPoint\", rootPoint);\r\n            this.handleMove({ x: rootPoint.x, y: rootPoint.y });\r\n        }\r\n    }\r\n    _getPosition(point) {\r\n        return { x: point.x / this.width(), y: point.y / this.height() };\r\n    }\r\n    /**\r\n     * Moves the cursor to X/Y coordinates within chart container (`point`).\r\n     *\r\n     * If `skipEvent` parameter is set to `true`, the move will not invoke\r\n     * the `\"cursormoved\"` event.\r\n     *\r\n     * @param  point      X/Y to move cursor to\r\n     * @param  skipEvent  Do not fire \"cursormoved\" event\r\n     */\r\n    handleMove(point, skipEvent) {\r\n        if (!point) {\r\n            point = this._movePoint;\r\n        }\r\n        const alwaysShow = this.get(\"alwaysShow\");\r\n        if (!point) {\r\n            this.hide(0);\r\n            return;\r\n        }\r\n        this._movePoint = point;\r\n        let local = this._display.toLocal(point);\r\n        let chart = this.chart;\r\n        if (chart && this._inPlot(local)) {\r\n            chart._movePoint = point;\r\n            if (this.isHidden()) {\r\n                this.show();\r\n                const behavior = this.get(\"behavior\", \"\");\r\n                if (behavior.charAt(0) == \"z\") {\r\n                    this.selection.set(\"draw\", () => { });\r\n                }\r\n            }\r\n            let x = local.x;\r\n            let y = local.y;\r\n            let xyPos = this._getPosition(local);\r\n            this.setPrivate(\"point\", local);\r\n            let snapToSeries = this.get(\"snapToSeries\");\r\n            if (this._downPoint) {\r\n                snapToSeries = undefined;\r\n            }\r\n            let userPositionX = this.get(\"positionX\");\r\n            let positionX = xyPos.x;\r\n            if ($type.isNumber(userPositionX)) {\r\n                positionX = userPositionX;\r\n            }\r\n            let userPositionY = this.get(\"positionY\");\r\n            let positionY = xyPos.y;\r\n            if ($type.isNumber(userPositionY)) {\r\n                positionY = userPositionY;\r\n            }\r\n            this.setPrivate(\"positionX\", positionX);\r\n            this.setPrivate(\"positionY\", positionY);\r\n            const xy = this._getPoint(positionX, positionY);\r\n            x = xy.x;\r\n            y = xy.y;\r\n            chart.xAxes.each((axis) => {\r\n                axis._handleCursorPosition(positionX, snapToSeries);\r\n                if (alwaysShow) {\r\n                    axis.handleCursorShow();\r\n                }\r\n            });\r\n            chart.yAxes.each((axis) => {\r\n                axis._handleCursorPosition(positionY, snapToSeries);\r\n                if (alwaysShow) {\r\n                    axis.handleCursorShow();\r\n                }\r\n            });\r\n            if (!skipEvent) {\r\n                chart._handleCursorPosition();\r\n                const type = \"cursormoved\";\r\n                if (this.events.isEnabled(type)) {\r\n                    this.events.dispatch(type, { type: type, target: this });\r\n                }\r\n            }\r\n            this._updateLines(x, y);\r\n            chart.arrangeTooltips();\r\n        }\r\n        else if (!this._downPoint) {\r\n            if (!alwaysShow) {\r\n                this.hide(0);\r\n                const type = \"cursorhidden\";\r\n                if (this.events.isEnabled(type)) {\r\n                    this.events.dispatch(type, { type: type, target: this });\r\n                }\r\n            }\r\n        }\r\n        if (this._downPoint && this.get(\"behavior\") != \"none\") {\r\n            this._updateSelection(local);\r\n        }\r\n    }\r\n    _getPoint(positionX, positionY) {\r\n        return { x: this.width() * positionX, y: this.height() * positionY };\r\n    }\r\n    _updateLines(x, y) {\r\n        if (!this._tooltipX) {\r\n            this.lineX.set(\"x\", x);\r\n        }\r\n        if (!this._tooltipY) {\r\n            this.lineY.set(\"y\", y);\r\n        }\r\n        this._drawLines();\r\n    }\r\n    _updateSelection(point) {\r\n        const selection = this.selection;\r\n        const behavior = this.get(\"behavior\");\r\n        const w = this.width();\r\n        const h = this.height();\r\n        if (point.x < 0) {\r\n            point.x = 0;\r\n        }\r\n        if (point.x > w) {\r\n            point.x = w;\r\n        }\r\n        if (point.y < 0) {\r\n            point.y = 0;\r\n        }\r\n        if (point.y > h) {\r\n            point.y = h;\r\n        }\r\n        selection.set(\"draw\", (display) => {\r\n            const downPoint = this._downPoint;\r\n            if (downPoint) {\r\n                if (behavior === \"zoomXY\" || behavior === \"selectXY\") {\r\n                    display.moveTo(downPoint.x, downPoint.y);\r\n                    display.lineTo(downPoint.x, point.y);\r\n                    display.lineTo(point.x, point.y);\r\n                    display.lineTo(point.x, downPoint.y);\r\n                    display.lineTo(downPoint.x, downPoint.y);\r\n                }\r\n                else if (behavior === \"zoomX\" || behavior === \"selectX\") {\r\n                    display.moveTo(downPoint.x, 0);\r\n                    display.lineTo(downPoint.x, h);\r\n                    display.lineTo(point.x, h);\r\n                    display.lineTo(point.x, 0);\r\n                    display.lineTo(downPoint.x, 0);\r\n                }\r\n                else if (behavior === \"zoomY\" || behavior === \"selectY\") {\r\n                    display.moveTo(0, downPoint.y);\r\n                    display.lineTo(w, downPoint.y);\r\n                    display.lineTo(w, point.y);\r\n                    display.lineTo(0, point.y);\r\n                    display.lineTo(0, downPoint.y);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _onHide() {\r\n        if (this.isHidden()) {\r\n            let chart = this.chart;\r\n            if (chart) {\r\n                chart.xAxes.each((axis) => {\r\n                    axis.handleCursorHide();\r\n                });\r\n                chart.yAxes.each((axis) => {\r\n                    axis.handleCursorHide();\r\n                });\r\n                chart.series.each((series) => {\r\n                    series.handleCursorHide();\r\n                });\r\n            }\r\n        }\r\n        super._onHide();\r\n    }\r\n    _onShow() {\r\n        if (!this.isHidden()) {\r\n            let chart = this.chart;\r\n            if (chart) {\r\n                chart.xAxes.each((axis) => {\r\n                    axis.handleCursorShow();\r\n                });\r\n                chart.yAxes.each((axis) => {\r\n                    axis.handleCursorShow();\r\n                });\r\n            }\r\n        }\r\n        super._onShow();\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        this.selection.dispose();\r\n    }\r\n}\r\nObject.defineProperty(XYCursor, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"XYCursor\"\r\n});\r\nObject.defineProperty(XYCursor, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Container.classNames.concat([XYCursor.className])\r\n});\r\n//# sourceMappingURL=XYCursor.js.map","import { Theme } from \"../core/Theme\";\r\n/**\r\n * @ignore\r\n */\r\nexport class AnimatedTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        this.rule(\"Component\").setAll({\r\n            interpolationDuration: 600\r\n        });\r\n        this.rule(\"Hierarchy\").set(\"animationDuration\", 600);\r\n        this.rule(\"Scrollbar\").set(\"animationDuration\", 600);\r\n        this.rule(\"Tooltip\").set(\"animationDuration\", 300);\r\n        this.rule(\"MapChart\").set(\"animationDuration\", 1000);\r\n        this.rule(\"MapChart\").set(\"wheelDuration\", 300);\r\n        this.rule(\"Entity\").setAll({\r\n            stateAnimationDuration: 600\r\n        });\r\n        this.rule(\"Sprite\").states.create(\"default\", { stateAnimationDuration: 600 });\r\n        this.rule(\"Tooltip\", [\"axis\"]).setAll({\r\n            animationDuration: 200\r\n        });\r\n        this.rule(\"WordCloud\").set(\"animationDuration\", 500);\r\n    }\r\n}\r\n//# sourceMappingURL=AnimatedTheme.js.map","import { AnimatedTheme } from \"../.internal/themes/AnimatedTheme\";\r\nexport default AnimatedTheme;\r\n//# sourceMappingURL=Animated.js.map","<template>\n  <div class=\"myChart\" ref=\"chartdiv\" :style=\"containerSize\"></div>\n\n</template>\n\n<script>\nimport * as am5 from '@amcharts/amcharts5';\nimport * as am5xy from '@amcharts/amcharts5/xy';\nimport am5themes_Animated from '@amcharts/amcharts5/themes/Animated';\n\nexport default {\n  name: 'XYChart',\n  data() {\n    return {}\n  },\n  props: {\n    containerSize: {\n      type: Object,\n      required: true\n    }\n  },\n  mounted() {\n    let root = am5.Root.new(this.$refs.chartdiv);\n\n    root.setThemes([am5themes_Animated.new(root)]);\n\n    // root.dateFormatter.setAll({\n    //   dateFormat: \"yyyy-MM-dd\",\n    //   dateFields: [\"valueX\"]\n    // });\n\n    let chart = root.container.children.push(\n        am5xy.XYChart.new(root, {\n          panX: true,\n          panY: true,\n          wheelX: \"panX\",\n          wheelY: \"ZoomX\",\n          pinchZoomX: true,\n          maxTooltipDistance: 0\n          // layout: root.verticalLayout\n        })\n    );\n\n    let data = [\n      {\n        date: new Date('2022-04-01').getTime(),\n        category: \"Alpha\",\n        value1: 1400,\n        value2: 1589\n      },\n      {\n        date: new Date('2022-04-02').getTime(),\n        category: \"Bravo\",\n        value1: 1200,\n        value2: 1600\n      },\n      {\n        date: new Date('2022-04-03').getTime(),\n        category: \"Charlie\",\n        value1: 1250,\n        value2: 1450\n      },\n      {\n        date: new Date('2022-04-04').getTime(),\n        category: \"Delta\",\n        value1: 1050,\n        value2: 1230\n      },\n      {\n        date: new Date('2022-04-05').getTime(),\n        category: \"Easy\",\n        value1: 1000,\n        value2: 1300\n      },\n      {\n        date: new Date('2022-04-06').getTime(),\n        category: \"Foxtrot\",\n        value1: 1200,\n        value2: 1400\n      },\n      {\n        date: new Date('2022-04-07').getTime(),\n        category: \"Golf\",\n        value1: 1150,\n        value2: 1230\n      }\n    ];\n    // Create Y-axis\n    let yAxis = chart.yAxes.push(\n        am5xy.ValueAxis.new(root, {\n          renderer: am5xy.AxisRendererY.new(root, {}),\n          tooltip: am5.Tooltip.new(root, {})\n        })\n    );\n    // Create X-Axis\n\n    // let xAxis = chart.xAxes.push(\n    //     am5xy.CategoryAxis.new(root, {\n    //       renderer: am5xy.AxisRendererX.new(root, {}),\n    //       categoryField: \"category\"\n    //     })\n    // );\n\n    let xAxis = chart.xAxes.push(\n      am5xy.DateAxis.new(root, {\n        // maxDeviation: 0.2,\n        baseInterval: { timeUnit: 'day', count: 1 },\n        renderer: am5xy.AxisRendererX.new(root, {}),\n        tooltip: am5.Tooltip.new(root, {})\n      })\n    );\n    xAxis.data.setAll(data);\n\n    let series1 = chart.series.push(\n        am5xy.ColumnSeries.new(root, {\n          name: \"Series\",\n          xAxis: xAxis,\n          yAxis: yAxis,\n          valueYField: \"value1\",\n          valueXField: \"date\",\n          categoryXField: \"category\"\n        })\n    );\n    series1.data.setAll(data);\n\n    let series2 = chart.series.push(\n        am5xy.SmoothedXLineSeries.new(root, {\n          minBulletDistance: 10,\n          name: \"Series\",\n          xAxis: xAxis,\n          yAxis: yAxis,\n          valueYField: \"value2\",\n          valueXField: \"date\",\n          categoryXField: \"category\",\n          tooltip: am5.Tooltip.new(root, {\n            pointerOrientation: \"vertical\",\n            labelText: \"[bold]VALUE[/]\\n {valueY}EA\"\n          })\n        })\n    );\n    series2.data.setAll(data);\n\n    // Add legend\n    // let legend = chart.children.push(am5.Legend.new(root, {}));\n    // legend.data.setAll(chart.series.values);\n\n    // Add cursor\n   chart.set('cursor', am5xy.XYCursor.new(root, {}));\n\n    // cursor.lineY.set(\"visible\", false);\n\n    series2.bullets.push(function() {\n      let circle = am5.Circle.new(root, {\n        radius: 6,\n        fill: series2.get(\"fill\"),\n        stroke: root.interfaceColors.get(\"background\"),\n        strokeWidth: 2,\n        shadowColor: series2.get(\"fill\"),\n        shadowBlur: 20,\n        shadowOffsetX: 15,\n        shadowOffsetY: 15,\n        shadowOpacity: 0.8\n      });\n\n      return am5.Bullet.new(root, {\n        sprite: circle\n      });\n    });\n\n\n\n    series1.columns.template.setAll({\n      cornerRadiusTL: 15, cornerRadiusTR: 15, width: 30,\n      // shadowColor: am5.color(0x000000),\n      // shadowBlur: 20,\n      // shadowOffsetX: 4,\n      // shadowOffsetY: 4\n    });\n\n    series2.strokes.template.setAll({\n      strokeWidth: 2,\n      shadowColor: series2.get('stroke'),\n      shadowBlur: 20,\n      shadowOffsetX: 15,\n      shadowOffsetY: 15,\n      shadowOpacity: 0.8\n    })\n    series1.columns.template.adapters.add('fill', function(fill, target) {\n      return chart.get('colors').getIndex(series1.columns.indexOf(target));\n    });\n\n    series1.columns.template.adapters.add('stroke', function(fill, target) {\n      return chart.get('colors').getIndex(series1.columns.indexOf(target));\n    });\n\n    series1.appear(1000);\n    series2.appear(1000);\n    chart.appear(1000, 100);\n\n    this.root = root;\n\n  },\n  beforeDestroy() {\n    if (this.root) {\n      this.root.dispose();\n    }\n  }\n}\n</script>\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./XYCharts.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./XYCharts.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./XYCharts.vue?vue&type=template&id=7d784504&\"\nimport script from \"./XYCharts.vue?vue&type=script&lang=js&\"\nexport * from \"./XYCharts.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{ref:\"chartdiv\",staticClass:\"myChart\",style:(_vm.containerSize)})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { Series } from \"./Series\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Label } from \"../../core/render/Label\";\r\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * A universal legend control.\r\n *\r\n * @important\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/} for more info\r\n */\r\nexport class Legend extends Series {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * List of all [[Container]] elements for legend items.\r\n         *\r\n         * @default new ListTemplate<Container>\r\n         */\r\n        Object.defineProperty(this, \"itemContainers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Container._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\"]),\r\n                themeTagsSelf: $utils.mergeTags(this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"]),\r\n                background: RoundedRectangle.new(this._root, {\r\n                    themeTags: $utils.mergeTags(this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\", \"background\"]),\r\n                    themeTagsSelf: $utils.mergeTags(this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"])\r\n                })\r\n            }, [this.itemContainers.template]))\r\n        });\r\n        /**\r\n         * List of legend marker elements.\r\n         *\r\n         * @default new ListTemplate<Container>\r\n         */\r\n        Object.defineProperty(this, \"markers\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Container._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.markers.template.get(\"themeTags\", []), [\"legend\", \"marker\"])\r\n            }, [this.markers.template]))\r\n        });\r\n        /**\r\n         * List of legend label elements.\r\n         *\r\n         * @default new ListTemplate<Label>\r\n         */\r\n        Object.defineProperty(this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Label._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [\"legend\", \"label\"])\r\n            }, [this.labels.template]))\r\n        });\r\n        /**\r\n         * List of legend value label elements.\r\n         *\r\n         * @default new ListTemplate<label>\r\n         */\r\n        Object.defineProperty(this, \"valueLabels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Label._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.valueLabels.template.get(\"themeTags\", []), [\"legend\", \"label\", \"value\"])\r\n            }, [this.valueLabels.template]))\r\n        });\r\n        /**\r\n         * List of rectangle elements used for default legend markers.\r\n         *\r\n         * @default new ListTemplate<RoundedRectangle>\r\n         */\r\n        Object.defineProperty(this, \"markerRectangles\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => RoundedRectangle._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.markerRectangles.template.get(\"themeTags\", []), [\"legend\", \"marker\", \"rectangle\"])\r\n            }, [this.markerRectangles.template]))\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"legend\"]);\r\n        this.fields.push(\"name\", \"stroke\", \"fill\");\r\n        super._afterNew();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeItemContainer(dataItem) {\r\n        const itemContainer = this.children.push(this.itemContainers.make());\r\n        itemContainer._setDataItem(dataItem);\r\n        this.itemContainers.push(itemContainer);\r\n        itemContainer.states.create(\"disabled\", {});\r\n        return itemContainer;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeMarker() {\r\n        const marker = this.markers.make();\r\n        this.markers.push(marker);\r\n        marker.states.create(\"disabled\", {});\r\n        return marker;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeLabel() {\r\n        const label = this.labels.make();\r\n        label.states.create(\"disabled\", {});\r\n        return label;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeValueLabel() {\r\n        const valueLabel = this.valueLabels.make();\r\n        valueLabel.states.create(\"disabled\", {});\r\n        return valueLabel;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeMarkerRectangle() {\r\n        const markerRectangle = this.markerRectangles.make();\r\n        markerRectangle.states.create(\"disabled\", {});\r\n        return markerRectangle;\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        const itemContainer = this.makeItemContainer(dataItem);\r\n        const nameField = this.get(\"nameField\");\r\n        const fillField = this.get(\"fillField\");\r\n        const strokeField = this.get(\"strokeField\");\r\n        if (itemContainer) {\r\n            const clickTarget = this.get(\"clickTarget\", \"itemContainer\");\r\n            const item = dataItem.dataContext;\r\n            if (item && item.set) {\r\n                item.set(\"legendDataItem\", dataItem);\r\n            }\r\n            itemContainer._setDataItem(dataItem);\r\n            dataItem.set(\"itemContainer\", itemContainer);\r\n            const marker = this.makeMarker();\r\n            if (marker) {\r\n                itemContainer.children.push(marker);\r\n                marker._setDataItem(dataItem);\r\n                dataItem.set(\"marker\", marker);\r\n                const useDefaultMarker = this.get(\"useDefaultMarker\");\r\n                const markerRectangle = marker.children.push(this.makeMarkerRectangle());\r\n                let fill = dataItem.get(\"fill\");\r\n                let stroke = dataItem.get(\"stroke\");\r\n                dataItem.set(\"markerRectangle\", markerRectangle);\r\n                if (item && item.get) {\r\n                    fill = item.get(fillField, fill);\r\n                    stroke = item.get(strokeField, stroke);\r\n                }\r\n                if (!stroke) {\r\n                    stroke = fill;\r\n                }\r\n                if (!useDefaultMarker) {\r\n                    if (item && item.createLegendMarker) {\r\n                        item.createLegendMarker();\r\n                    }\r\n                }\r\n                else {\r\n                    if (item.on) {\r\n                        item.on(fillField, () => {\r\n                            markerRectangle.set(\"fill\", item.get(fillField));\r\n                        });\r\n                        item.on(strokeField, () => {\r\n                            markerRectangle.set(\"stroke\", item.get(strokeField));\r\n                        });\r\n                    }\r\n                }\r\n                markerRectangle.setAll({ fill, stroke });\r\n                // this solves if template field is set on slice\r\n                const component = item.component;\r\n                if (component && component.updateLegendMarker) {\r\n                    component.updateLegendMarker(item);\r\n                }\r\n            }\r\n            const label = this.makeLabel();\r\n            if (label) {\r\n                itemContainer.children.push(label);\r\n                label._setDataItem(dataItem);\r\n                dataItem.set(\"label\", label);\r\n                label.text.on(\"text\", () => {\r\n                    itemContainer.set(\"ariaLabel\", label.text._getText() + \"; \" + this._t(\"Press ENTER to toggle\"));\r\n                });\r\n                if (item && item.get) {\r\n                    dataItem.set(\"name\", item.get(nameField));\r\n                }\r\n                let name = dataItem.get(\"name\");\r\n                if (name) {\r\n                    label.set(\"text\", name);\r\n                }\r\n            }\r\n            const valueLabel = this.makeValueLabel();\r\n            if (valueLabel) {\r\n                itemContainer.children.push(valueLabel);\r\n                valueLabel._setDataItem(dataItem);\r\n                dataItem.set(\"valueLabel\", valueLabel);\r\n            }\r\n            if (item && item.show) {\r\n                this._disposers.push(item.on(\"visible\", (visible) => {\r\n                    itemContainer.set(\"disabled\", !visible);\r\n                }));\r\n                if (!item.get(\"visible\")) {\r\n                    itemContainer.set(\"disabled\", true);\r\n                }\r\n                if (clickTarget != \"none\") {\r\n                    var clickContainer = itemContainer;\r\n                    if (clickTarget == \"marker\") {\r\n                        clickContainer = marker;\r\n                    }\r\n                    this._addClickEvents(clickContainer, item, dataItem);\r\n                }\r\n            }\r\n            // Sort children\r\n            this.children.values.sort((a, b) => {\r\n                var targetA = a.dataItem.dataContext;\r\n                var targetB = b.dataItem.dataContext;\r\n                if (targetA && targetB) {\r\n                    var indexA = this.data.indexOf(targetA);\r\n                    var indexB = this.data.indexOf(targetB);\r\n                    if (indexA > indexB) {\r\n                        return 1;\r\n                    }\r\n                    else if (indexA < indexB) {\r\n                        return -1;\r\n                    }\r\n                }\r\n                return 0;\r\n            });\r\n            if (item && item.updateLegendValue) {\r\n                item.updateLegendValue();\r\n            }\r\n        }\r\n    }\r\n    _addClickEvents(container, item, dataItem) {\r\n        container.set(\"cursorOverStyle\", \"pointer\");\r\n        container.events.on(\"pointerover\", () => {\r\n            const component = item.component;\r\n            if (component && component.hoverDataItem) {\r\n                component.hoverDataItem(item);\r\n            }\r\n        });\r\n        container.events.on(\"pointerout\", () => {\r\n            const component = item.component;\r\n            if (component && component.hoverDataItem) {\r\n                component.unhoverDataItem(item);\r\n            }\r\n        });\r\n        container.events.on(\"click\", () => {\r\n            const labelText = dataItem.get(\"label\").text._getText();\r\n            if (item.show && item.isHidden && (item.isHidden() || item.get(\"visible\") === false)) {\r\n                item.show();\r\n                container.set(\"disabled\", false);\r\n                this._root.readerAlert(this._t(\"%1 shown\", this._root.locale, labelText));\r\n            }\r\n            else if (item.hide) {\r\n                item.hide();\r\n                container.set(\"disabled\", true);\r\n                this._root.readerAlert(this._t(\"%1 hidden\", this._root.locale, labelText));\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        const dataContext = dataItem.dataContext;\r\n        if (dataContext && dataContext.get) {\r\n            const di = dataContext.get(\"legendDataItem\");\r\n            if (di == dataItem) {\r\n                dataContext.set(\"legendDataItem\", undefined);\r\n            }\r\n        }\r\n        let itemContainer = dataItem.get(\"itemContainer\");\r\n        if (itemContainer) {\r\n            this.itemContainers.removeValue(itemContainer);\r\n            itemContainer.dispose();\r\n        }\r\n        let marker = dataItem.get(\"marker\");\r\n        if (marker) {\r\n            this.markers.removeValue(marker);\r\n            marker.dispose();\r\n        }\r\n        let markerRectangle = dataItem.get(\"markerRectangle\");\r\n        if (markerRectangle) {\r\n            this.markerRectangles.removeValue(markerRectangle);\r\n            markerRectangle.dispose();\r\n        }\r\n        let label = dataItem.get(\"label\");\r\n        if (label) {\r\n            this.labels.removeValue(label);\r\n            label.dispose();\r\n        }\r\n        let valueLabel = dataItem.get(\"valueLabel\");\r\n        if (valueLabel) {\r\n            this.valueLabels.removeValue(valueLabel);\r\n            valueLabel.dispose();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Legend, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Legend\"\r\n});\r\nObject.defineProperty(Legend, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Series.classNames.concat([Legend.className])\r\n});\r\n//# sourceMappingURL=Legend.js.map","import { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n/**\r\n * @ignore\r\n */\r\nexport class PercentDefaultTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const ic = this._root.interfaceColors;\r\n        const r = this.rule.bind(this);\r\n        /**\r\n         * ========================================================================\r\n         * charts/percent\r\n         * ========================================================================\r\n         */\r\n        r(\"PercentSeries\").setAll({\r\n            legendLabelText: \"{category}\",\r\n            legendValueText: \"{valuePercentTotal.formatNumber('0.00p')}\",\r\n            colors: ColorSet.new(this._root, {}),\r\n            width: p100,\r\n            height: p100\r\n        });\r\n        /**\r\n         * ========================================================================\r\n         * charts/pie\r\n         * ========================================================================\r\n         */\r\n        r(\"PieChart\").setAll({\r\n            radius: percent(80),\r\n            startAngle: -90,\r\n            endAngle: 270\r\n        });\r\n        r(\"PieSeries\").setAll({\r\n            alignLabels: true,\r\n            startAngle: -90,\r\n            endAngle: 270\r\n        });\r\n        r(\"PieSeries\").states.create(\"hidden\", { endAngle: -90, opacity: 0 });\r\n        r(\"Slice\", [\"pie\"]).setAll({\r\n            position: \"absolute\",\r\n            isMeasured: false,\r\n            x: 0,\r\n            y: 0,\r\n            toggleKey: \"active\",\r\n            tooltipText: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            role: \"figure\",\r\n            lineJoin: \"round\"\r\n        });\r\n        r(\"Slice\", [\"pie\"]).states.create(\"active\", { shiftRadius: 20, scale: 1 });\r\n        r(\"Slice\", [\"pie\"]).states.create(\"hoverActive\", { scale: 1.04 });\r\n        r(\"Slice\", [\"pie\"]).states.create(\"hover\", { scale: 1.04 });\r\n        r(\"RadialLabel\", [\"pie\"]).setAll({\r\n            textType: \"aligned\",\r\n            radius: 10,\r\n            text: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n            paddingTop: 5,\r\n            paddingBottom: 5,\r\n            populateText: true\r\n        });\r\n        r(\"Tick\", [\"pie\"]).setAll({\r\n            location: 1\r\n        });\r\n        /**\r\n         * ========================================================================\r\n         * charts/funnel\r\n         * ========================================================================\r\n         */\r\n        r(\"SlicedChart\").setAll({\r\n            paddingLeft: 10,\r\n            paddingRight: 10,\r\n            paddingTop: 10,\r\n            paddingBottom: 10\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/funnel: Funnel\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"FunnelSeries\").setAll({\r\n            startLocation: 0,\r\n            endLocation: 1,\r\n            orientation: \"vertical\",\r\n            alignLabels: true,\r\n            sequencedInterpolation: true\r\n        });\r\n        r(\"FunnelSlice\").setAll({\r\n            interactive: true,\r\n            expandDistance: 0,\r\n            //tooltipText: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\"\r\n        });\r\n        r(\"FunnelSlice\").states.create(\"hover\", { expandDistance: 0.15 });\r\n        r(\"Label\", [\"funnel\"]).setAll({\r\n            populateText: true,\r\n            text: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n            centerY: p50\r\n        });\r\n        r(\"Label\", [\"funnel\", \"horizontal\"]).setAll({\r\n            centerX: 0,\r\n            centerY: p50,\r\n            rotation: -90\r\n        });\r\n        // Class: Label\r\n        r(\"Label\", [\"funnel\", \"vertical\"]).setAll({\r\n            centerY: p50,\r\n            centerX: 0\r\n        });\r\n        r(\"Tick\", [\"funnel\"]).setAll({\r\n            location: 1\r\n        });\r\n        r(\"FunnelSlice\", [\"funnel\", \"link\"]).setAll({\r\n            fillOpacity: 0.5,\r\n            strokeOpacity: 0,\r\n            expandDistance: -0.1\r\n        });\r\n        r(\"FunnelSlice\", [\"funnel\", \"link\", \"vertical\"]).setAll({\r\n            height: 10,\r\n        });\r\n        r(\"FunnelSlice\", [\"funnel\", \"link\", \"horizontal\"]).setAll({\r\n            width: 10\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/funnel: Pyramid\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        r(\"PyramidSeries\").setAll({\r\n            valueIs: \"area\"\r\n        });\r\n        r(\"FunnelSlice\", [\"pyramid\", \"link\"]).setAll({\r\n            fillOpacity: 0.5\r\n        });\r\n        r(\"FunnelSlice\", [\"pyramid\", \"link\", \"vertical\"]).setAll({\r\n            height: 0\r\n        });\r\n        r(\"FunnelSlice\", [\"pyramid\", \"link\", \"horizontal\"]).setAll({\r\n            width: 0\r\n        });\r\n        r(\"FunnelSlice\", [\"pyramid\"]).setAll({\r\n            interactive: true,\r\n            expandDistance: 0\r\n        });\r\n        r(\"FunnelSlice\", [\"pyramid\"]).states.create(\"hover\", { expandDistance: 0.15 });\r\n        r(\"Label\", [\"pyramid\"]).setAll({\r\n            populateText: true,\r\n            text: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n            centerY: p50\r\n        });\r\n        r(\"Label\", [\"pyramid\", \"horizontal\"]).setAll({\r\n            centerX: 0,\r\n            centerY: p50,\r\n            rotation: -90\r\n        });\r\n        r(\"Label\", [\"pyramid\", \"vertical\"]).setAll({\r\n            centerY: p50,\r\n            centerX: 0\r\n        });\r\n        r(\"Tick\", [\"pyramid\"]).setAll({\r\n            location: 1\r\n        });\r\n        /**\r\n         * ------------------------------------------------------------------------\r\n         * charts/funnel: Pictorial\r\n         * ------------------------------------------------------------------------\r\n         */\r\n        // Class: FunnelSlice\r\n        r(\"FunnelSlice\", [\"pictorial\"]).setAll({\r\n            interactive: true,\r\n            tooltipText: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\"\r\n        });\r\n        r(\"Label\", [\"pictorial\"]).setAll({\r\n            populateText: true,\r\n            text: \"{category}: {valuePercentTotal.formatNumber('0.00p')}\",\r\n            centerY: p50\r\n        });\r\n        r(\"Label\", [\"pictorial\", \"horizontal\"]).setAll({\r\n            centerX: 0,\r\n            centerY: p50,\r\n            rotation: -90\r\n        });\r\n        r(\"Label\", [\"pictorial\", \"vertical\"]).setAll({\r\n            centerY: p50,\r\n            centerX: 0\r\n        });\r\n        r(\"FunnelSlice\", [\"pictorial\", \"link\"]).setAll({\r\n            fillOpacity: 0.5,\r\n            width: 0,\r\n            height: 0\r\n        });\r\n        r(\"Tick\", [\"pictorial\"]).setAll({\r\n            location: 0.5\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"pictorial\", \"background\"]);\r\n            rule.setAll({\r\n                fillOpacity: 0.2\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=PercentDefaultTheme.js.map","import { SerialChart } from \"../../core/render/SerialChart\";\r\nimport { PercentDefaultTheme } from \"./PercentDefaultTheme\";\r\n/**\r\n * Base class for [[PieChart]].\r\n *\r\n * Also used for percent-based series, like [[FunnelSeries]], [[PyramidSeries]], etc.\r\n *\r\n * @important\r\n */\r\nexport class PercentChart extends SerialChart {\r\n    _afterNew() {\r\n        this._defaultThemes.push(PercentDefaultTheme.new(this._root));\r\n        super._afterNew();\r\n        this.chartContainer.children.push(this.seriesContainer);\r\n        this.seriesContainer.children.push(this.bulletsContainer);\r\n    }\r\n    _processSeries(series) {\r\n        super._processSeries(series);\r\n        this.seriesContainer.children.moveValue(this.bulletsContainer, this.seriesContainer.children.length - 1);\r\n    }\r\n}\r\nObject.defineProperty(PercentChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PercentChart\"\r\n});\r\nObject.defineProperty(PercentChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: SerialChart.classNames.concat([PercentChart.className])\r\n});\r\n//# sourceMappingURL=PercentChart.js.map","import { Percent } from \"../../core/util/Percent\";\r\nimport { PercentChart } from \"../percent/PercentChart\";\r\nimport { p50 } from \"../../core/util/Percent\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $math from \"../../core/util/Math\";\r\n/**\r\n * Creates a pie chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/} for more info\r\n * @important\r\n */\r\nexport class PieChart extends PercentChart {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_maxRadius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.seriesContainer.setAll({ x: p50, y: p50 });\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        const chartContainer = this.chartContainer;\r\n        const w = chartContainer.innerWidth();\r\n        const h = chartContainer.innerHeight();\r\n        const startAngle = this.get(\"startAngle\", 0);\r\n        const endAngle = this.get(\"endAngle\", 0);\r\n        const innerRadius = this.get(\"innerRadius\");\r\n        let bounds = $math.getArcBounds(0, 0, startAngle, endAngle, 1);\r\n        const wr = w / (bounds.right - bounds.left);\r\n        const hr = h / (bounds.bottom - bounds.top);\r\n        let innerBounds = { left: 0, right: 0, top: 0, bottom: 0 };\r\n        if (innerRadius instanceof Percent) {\r\n            let value = innerRadius.value;\r\n            let mr = Math.min(wr, hr);\r\n            value = Math.max(mr * value, mr - Math.min(h, w)) / mr;\r\n            innerBounds = $math.getArcBounds(0, 0, startAngle, endAngle, value);\r\n            this.setPrivateRaw(\"irModifyer\", value / innerRadius.value);\r\n        }\r\n        bounds = $math.mergeBounds([bounds, innerBounds]);\r\n        const prevRadius = this._maxRadius;\r\n        this._maxRadius = Math.min(wr, hr);\r\n        const radius = $utils.relativeToValue(this.get(\"radius\", 0), this._maxRadius);\r\n        this.seriesContainer.setAll({\r\n            dy: -radius * (bounds.bottom + bounds.top) / 2, dx: -radius * (bounds.right + bounds.left) / 2\r\n        });\r\n        if (this.isDirty(\"startAngle\") || this.isDirty(\"endAngle\") || prevRadius != this._maxRadius) {\r\n            this.series.each((series) => {\r\n                series._markDirtyKey(\"startAngle\");\r\n            });\r\n        }\r\n        if (this.isDirty(\"innerRadius\") || this.isDirty(\"radius\")) {\r\n            this.series.each((series) => {\r\n                series._markDirtyKey(\"innerRadius\");\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Returns outer radius in pixels.\r\n     *\r\n     * If optional series parameter is passed in, it will return outer radius\r\n     * of that particular series.\r\n     *\r\n     * @param   series  Series\r\n     * @return          Radius in pixels\r\n     */\r\n    radius(series) {\r\n        let radius = $utils.relativeToValue(this.get(\"radius\", 0), this._maxRadius);\r\n        let innerRadius = $utils.relativeToValue(this.get(\"innerRadius\", 0), radius);\r\n        if (series) {\r\n            let index = this.series.indexOf(series);\r\n            let length = this.series.length;\r\n            let seriesRadius = series.get(\"radius\");\r\n            if (seriesRadius != null) {\r\n                return innerRadius + $utils.relativeToValue(seriesRadius, radius - innerRadius);\r\n            }\r\n            else {\r\n                return innerRadius + (radius - innerRadius) / length * (index + 1);\r\n            }\r\n        }\r\n        return radius;\r\n    }\r\n    /**\r\n     * Returns inner radius in pixels.\r\n     *\r\n     * If optional series parameter is passed in, it will return inner radius\r\n     * of that particular series.\r\n     *\r\n     * @param   series  Series\r\n     * @return          Radius in pixels\r\n     */\r\n    innerRadius(series) {\r\n        const radius = this.radius();\r\n        let innerRadius = $utils.relativeToValue(this.get(\"innerRadius\", 0), radius);\r\n        if (innerRadius < 0) {\r\n            innerRadius = radius + innerRadius;\r\n        }\r\n        if (series) {\r\n            let index = this.series.indexOf(series);\r\n            let length = this.series.length;\r\n            let seriesInnerRadius = series.get(\"innerRadius\");\r\n            if (seriesInnerRadius != null) {\r\n                return innerRadius + $utils.relativeToValue(seriesInnerRadius, radius - innerRadius);\r\n            }\r\n            else {\r\n                return innerRadius + (radius - innerRadius) / length * index;\r\n            }\r\n        }\r\n        return innerRadius;\r\n    }\r\n}\r\nObject.defineProperty(PieChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PieChart\"\r\n});\r\nObject.defineProperty(PieChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: PercentChart.classNames.concat([PieChart.className])\r\n});\r\n//# sourceMappingURL=PieChart.js.map","import { __awaiter } from \"tslib\";\r\nimport { Series } from \"../../core/render/Series\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { visualSettings } from \"../../core/render/Graphics\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $type from \"../../core/util/Type\";\r\n/**\r\n * A base class for any percent chart series.\r\n */\r\nexport class PercentSeries extends Series {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"slicesContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { position: \"absolute\", isMeasured: false }))\r\n        });\r\n        Object.defineProperty(this, \"labelsContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { position: \"absolute\", isMeasured: false }))\r\n        });\r\n        Object.defineProperty(this, \"ticksContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.children.push(Container.new(this._root, { position: \"absolute\", isMeasured: false }))\r\n        });\r\n        Object.defineProperty(this, \"_lLabels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_rLabels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        Object.defineProperty(this, \"_hLabels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n        /**\r\n         * A [[ListTemplate]] of all slices in series.\r\n         *\r\n         * `slices.template` can also be used to configure slices.\r\n         */\r\n        Object.defineProperty(this, \"slices\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._makeSlices()\r\n        });\r\n        /**\r\n         * A [[ListTemplate]] of all slice labels in series.\r\n         *\r\n         * `labels.template` can also be used to configure slice labels.\r\n         */\r\n        Object.defineProperty(this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._makeLabels()\r\n        });\r\n        /**\r\n         * A [[ListTemplate]] of all slice ticks in series.\r\n         *\r\n         * `ticks.template` can also be used to configure slice ticks.\r\n         */\r\n        Object.defineProperty(this, \"ticks\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._makeTicks()\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeSlice(dataItem) {\r\n        const slice = this.slicesContainer.children.push(this.slices.make());\r\n        slice.on(\"fill\", () => {\r\n            this.updateLegendMarker(dataItem);\r\n        });\r\n        slice.on(\"stroke\", () => {\r\n            this.updateLegendMarker(dataItem);\r\n        });\r\n        slice._setDataItem(dataItem);\r\n        dataItem.set(\"slice\", slice);\r\n        this.slices.push(slice);\r\n        return slice;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeLabel(dataItem) {\r\n        const label = this.labelsContainer.children.push(this.labels.make());\r\n        label._setDataItem(dataItem);\r\n        dataItem.set(\"label\", label);\r\n        this.labels.push(label);\r\n        return label;\r\n    }\r\n    _shouldMakeBullet(dataItem) {\r\n        if (dataItem.get(\"value\") != null) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeTick(dataItem) {\r\n        const tick = this.ticksContainer.children.push(this.ticks.make());\r\n        tick._setDataItem(dataItem);\r\n        dataItem.set(\"tick\", tick);\r\n        this.ticks.push(tick);\r\n        return tick;\r\n    }\r\n    _afterNew() {\r\n        this.fields.push(\"category\", \"fill\");\r\n        super._afterNew();\r\n    }\r\n    _onDataClear() {\r\n        const colors = this.get(\"colors\");\r\n        if (colors) {\r\n            colors.reset();\r\n        }\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        this._lLabels = [];\r\n        this._rLabels = [];\r\n        this._hLabels = [];\r\n        if (this._valuesDirty) {\r\n            let sum = 0;\r\n            let absSum = 0;\r\n            let valueHigh = 0;\r\n            let valueLow = Infinity;\r\n            let count = 0;\r\n            $array.each(this._dataItems, (dataItem) => {\r\n                let valueWorking = dataItem.get(\"valueWorking\", 0);\r\n                sum += valueWorking;\r\n                absSum += Math.abs(valueWorking);\r\n            });\r\n            $array.each(this._dataItems, (dataItem) => {\r\n                let value = dataItem.get(\"valueWorking\", 0);\r\n                if (value > valueHigh) {\r\n                    valueHigh = value;\r\n                }\r\n                if (value < valueLow) {\r\n                    valueLow = value;\r\n                }\r\n                count++;\r\n                let percentTotal = value / absSum;\r\n                if (absSum == 0) {\r\n                    percentTotal = 0;\r\n                }\r\n                dataItem.setRaw(\"valuePercentTotal\", percentTotal * 100);\r\n            });\r\n            this.setPrivateRaw(\"valueLow\", valueLow);\r\n            this.setPrivateRaw(\"valueHigh\", valueHigh);\r\n            this.setPrivateRaw(\"valueSum\", sum);\r\n            this.setPrivateRaw(\"valueAverage\", sum / count);\r\n            this.setPrivateRaw(\"valueAbsoluteSum\", absSum);\r\n        }\r\n    }\r\n    /**\r\n     * Shows hidden series.\r\n     *\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Animation promise\r\n     */\r\n    show(duration) {\r\n        const _super = Object.create(null, {\r\n            show: { get: () => super.show }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let promises = [];\r\n            promises.push(_super.show.call(this, duration));\r\n            promises.push(this._sequencedShowHide(true, duration));\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hide whole series.\r\n     *\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Animation promise\r\n     */\r\n    hide(duration) {\r\n        const _super = Object.create(null, {\r\n            hide: { get: () => super.hide }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let promises = [];\r\n            promises.push(_super.hide.call(this, duration));\r\n            promises.push(this._sequencedShowHide(false, duration));\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        if (this._valuesDirty) {\r\n            $array.each(this._dataItems, (dataItem) => {\r\n                dataItem.get(\"label\").text.markDirtyText();\r\n            });\r\n        }\r\n        if (this.isDirty(\"legendLabelText\") || this.isDirty(\"legendValueText\")) {\r\n            $array.each(this._dataItems, (dataItem) => {\r\n                this.updateLegendValue(dataItem);\r\n            });\r\n        }\r\n        this._arrange();\r\n    }\r\n    _arrange() {\r\n        this._arrangeDown(this._lLabels);\r\n        this._arrangeUp(this._lLabels);\r\n        this._arrangeDown(this._rLabels);\r\n        this._arrangeUp(this._rLabels);\r\n        this._arrangeLeft(this._hLabels);\r\n        this._arrangeRight(this._hLabels);\r\n        $array.each(this.dataItems, (dataItem) => {\r\n            this._updateTick(dataItem);\r\n        });\r\n    }\r\n    _afterChanged() {\r\n        super._afterChanged();\r\n        this._arrange();\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        if (dataItem.get(\"fill\") == null) {\r\n            let colors = this.get(\"colors\");\r\n            if (colors) {\r\n                dataItem.setRaw(\"fill\", colors.next());\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Shows series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    showDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            showDataItem: { get: () => super.showDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.showDataItem.call(this, dataItem, duration)];\r\n            if (!$type.isNumber(duration)) {\r\n                duration = this.get(\"stateAnimationDuration\", 0);\r\n            }\r\n            const easing = this.get(\"stateAnimationEasing\");\r\n            let value = dataItem.get(\"value\");\r\n            const animation = dataItem.animate({ key: \"valueWorking\", to: value, duration: duration, easing: easing });\r\n            if (animation) {\r\n                promises.push(animation.waitForStop());\r\n            }\r\n            const tick = dataItem.get(\"tick\");\r\n            if (tick) {\r\n                promises.push(tick.show(duration));\r\n            }\r\n            const label = dataItem.get(\"label\");\r\n            if (label) {\r\n                promises.push(label.show(duration));\r\n            }\r\n            const slice = dataItem.get(\"slice\");\r\n            if (slice) {\r\n                promises.push(slice.show(duration));\r\n            }\r\n            if (slice.get(\"active\")) {\r\n                slice.states.applyAnimate(\"active\");\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * Hides series's data item.\r\n     *\r\n     * @param   dataItem  Data item\r\n     * @param   duration  Animation duration in milliseconds\r\n     * @return            Promise\r\n     */\r\n    hideDataItem(dataItem, duration) {\r\n        const _super = Object.create(null, {\r\n            hideDataItem: { get: () => super.hideDataItem }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const promises = [_super.hideDataItem.call(this, dataItem, duration)];\r\n            const hiddenState = this.states.create(\"hidden\", {});\r\n            if (!$type.isNumber(duration)) {\r\n                duration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\r\n            }\r\n            const easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\r\n            const animation = dataItem.animate({ key: \"valueWorking\", to: 0, duration: duration, easing: easing });\r\n            if (animation) {\r\n                promises.push(animation.waitForStop());\r\n            }\r\n            const tick = dataItem.get(\"tick\");\r\n            if (tick) {\r\n                promises.push(tick.hide(duration));\r\n            }\r\n            const label = dataItem.get(\"label\");\r\n            if (label) {\r\n                promises.push(label.hide(duration));\r\n            }\r\n            const slice = dataItem.get(\"slice\");\r\n            slice.hideTooltip();\r\n            if (slice) {\r\n                promises.push(slice.hide(duration));\r\n            }\r\n            yield Promise.all(promises);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    disposeDataItem(dataItem) {\r\n        super.disposeDataItem(dataItem);\r\n        let label = dataItem.get(\"label\");\r\n        if (label) {\r\n            this.labels.removeValue(label);\r\n            label.dispose();\r\n        }\r\n        let tick = dataItem.get(\"tick\");\r\n        if (tick) {\r\n            this.ticks.removeValue(tick);\r\n            tick.dispose();\r\n        }\r\n        let slice = dataItem.get(\"slice\");\r\n        if (slice) {\r\n            this.slices.removeValue(slice);\r\n            slice.dispose();\r\n        }\r\n    }\r\n    /**\r\n     * Triggers hover on a series data item.\r\n     *\r\n     * @since 5.0.7\r\n     * @param  dataItem  Target data item\r\n     */\r\n    hoverDataItem(dataItem) {\r\n        const slice = dataItem.get(\"slice\");\r\n        if (slice && !slice.isHidden()) {\r\n            slice.hover();\r\n        }\r\n    }\r\n    /**\r\n     * Triggers un-hover on a series data item.\r\n     *\r\n     * @since 5.0.7\r\n     * @param  dataItem  Target data item\r\n     */\r\n    unhoverDataItem(dataItem) {\r\n        const slice = dataItem.get(\"slice\");\r\n        if (slice) {\r\n            slice.unhover();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLegendMarker(dataItem) {\r\n        const slice = dataItem.get(\"slice\");\r\n        if (slice) {\r\n            const legendDataItem = dataItem.get(\"legendDataItem\");\r\n            if (legendDataItem) {\r\n                const markerRectangle = legendDataItem.get(\"markerRectangle\");\r\n                $array.each(visualSettings, (setting) => {\r\n                    if (slice.get(setting) != null) {\r\n                        markerRectangle.set(setting, slice.get(setting));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    _arrangeDown(labels) {\r\n        if (labels) {\r\n            let next = this._getNextDown();\r\n            labels.sort((a, b) => {\r\n                if (a.y > b.y) {\r\n                    return 1;\r\n                }\r\n                else if (a.y < b.y) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            $array.each(labels, (l) => {\r\n                const bounds = l.label.adjustedLocalBounds();\r\n                let labelTop = bounds.top;\r\n                if (l.y + labelTop < next) {\r\n                    l.y = next - labelTop;\r\n                }\r\n                l.label.set(\"y\", l.y);\r\n                next = l.y + bounds.bottom;\r\n            });\r\n        }\r\n    }\r\n    _getNextUp() {\r\n        return this.labelsContainer.maxHeight();\r\n    }\r\n    _getNextDown() {\r\n        return 0;\r\n    }\r\n    _arrangeUp(labels) {\r\n        if (labels) {\r\n            let next = this._getNextUp();\r\n            labels.sort((a, b) => {\r\n                if (a.y < b.y) {\r\n                    return 1;\r\n                }\r\n                else if (a.y > b.y) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            $array.each(labels, (l) => {\r\n                const bounds = l.label.adjustedLocalBounds();\r\n                let labelBottom = bounds.bottom;\r\n                if (l.y + labelBottom > next) {\r\n                    l.y = next - labelBottom;\r\n                }\r\n                l.label.set(\"y\", l.y);\r\n                next = l.y + bounds.top;\r\n            });\r\n        }\r\n    }\r\n    _arrangeRight(labels) {\r\n        if (labels) {\r\n            let next = 0;\r\n            labels.sort((a, b) => {\r\n                if (a.y > b.y) {\r\n                    return 1;\r\n                }\r\n                else if (a.y < b.y) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            $array.each(labels, (l) => {\r\n                const bounds = l.label.adjustedLocalBounds();\r\n                let labelLeft = bounds.left;\r\n                if (l.y + labelLeft < next) {\r\n                    l.y = next - labelLeft;\r\n                }\r\n                l.label.set(\"x\", l.y);\r\n                next = l.y + bounds.right;\r\n            });\r\n        }\r\n    }\r\n    _arrangeLeft(labels) {\r\n        if (labels) {\r\n            let next = this.labelsContainer.maxWidth();\r\n            labels.sort((a, b) => {\r\n                if (a.y < b.y) {\r\n                    return 1;\r\n                }\r\n                else if (a.y > b.y) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            $array.each(labels, (l) => {\r\n                const bounds = l.label.adjustedLocalBounds();\r\n                let labelRight = bounds.right;\r\n                if (l.y + labelRight > next) {\r\n                    l.y = next - labelRight;\r\n                }\r\n                l.label.set(\"x\", l.y);\r\n                next = l.y + bounds.left;\r\n            });\r\n        }\r\n    }\r\n    _updateSize() {\r\n        super._updateSize();\r\n        this.markDirty();\r\n    }\r\n    _updateTick(_dataItem) {\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            chart.series.removeValue(this);\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PercentSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PercentSeries\"\r\n});\r\nObject.defineProperty(PercentSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Series.classNames.concat([PercentSeries.className])\r\n});\r\n//# sourceMappingURL=PercentSeries.js.map","export const abs = Math.abs;\nexport const atan2 = Math.atan2;\nexport const cos = Math.cos;\nexport const max = Math.max;\nexport const min = Math.min;\nexport const sin = Math.sin;\nexport const sqrt = Math.sqrt;\n\nexport const epsilon = 1e-12;\nexport const pi = Math.PI;\nexport const halfPi = pi / 2;\nexport const tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import constant from \"./constant.js\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math.js\";\nimport {withPath} from \"./path.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null,\n      path = withPath(arc);\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle. If this\n        // intersection fails, it’s probably because the arc is too small, so\n        // disable the corner radius entirely.\n        if (da < pi) {\n          if (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10)) {\n            var ax = x01 - oc[0],\n                ay = y01 - oc[1],\n                bx = x11 - oc[0],\n                by = y11 - oc[1],\n                kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n                lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n            rc0 = min(rc, (r0 - lc) / (kc - 1));\n            rc1 = min(rc, (r1 - lc) / (kc + 1));\n          } else {\n            rc0 = rc1 = 0;\n          }\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","import { Graphics } from \"./Graphics\";\r\nimport * as $type from \"../util/Type\";\r\nimport { Percent } from \"../util/Percent\";\r\nimport { arc } from \"d3-shape\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * Draws a slice shape.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n */\r\nexport class Slice extends Graphics {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"ix\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        /**\r\n         * @ignore\r\n         */\r\n        Object.defineProperty(this, \"iy\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 0\r\n        });\r\n        Object.defineProperty(this, \"_generator\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: arc()\r\n        });\r\n    }\r\n    _getTooltipPoint() {\r\n        let tooltipX = this.get(\"tooltipX\");\r\n        let tooltipY = this.get(\"tooltipY\");\r\n        let x = 0;\r\n        let y = 0;\r\n        if ($type.isNumber(tooltipX)) {\r\n            x = tooltipX;\r\n        }\r\n        if ($type.isNumber(tooltipY)) {\r\n            y = tooltipY;\r\n        }\r\n        let radius = this.get(\"radius\", 0);\r\n        let innerRadius = this.get(\"innerRadius\", 0);\r\n        let dRadius = this.get(\"dRadius\", 0);\r\n        let dInnerRadius = this.get(\"dInnerRadius\", 0);\r\n        radius += dRadius;\r\n        innerRadius += dInnerRadius;\r\n        if (innerRadius < 0) {\r\n            innerRadius = radius + innerRadius;\r\n        }\r\n        if (tooltipX instanceof Percent) {\r\n            x = this.ix * (innerRadius + (radius - innerRadius) * tooltipX.value);\r\n        }\r\n        if (tooltipY instanceof Percent) {\r\n            y = this.iy * (innerRadius + (radius - innerRadius) * tooltipY.value);\r\n        }\r\n        if (this.get(\"arc\") >= 360 && innerRadius == 0) {\r\n            x = 0;\r\n            y = 0;\r\n        }\r\n        return { x, y };\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        if (this.isDirty(\"radius\") || this.isDirty(\"arc\") || this.isDirty(\"innerRadius\") || this.isDirty(\"startAngle\") || this.isDirty(\"dRadius\") || this.isDirty(\"dInnerRadius\") || this.isDirty(\"cornerRadius\")) {\r\n            this._clear = true;\r\n        }\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this._clear) {\r\n            let startAngle = this.get(\"startAngle\", 0);\r\n            let arc = this.get(\"arc\", 0);\r\n            const generator = this._generator;\r\n            if (arc < 0) {\r\n                startAngle = startAngle + arc;\r\n                arc = arc * -1;\r\n            }\r\n            if (arc > 0.1) { // this fixes bug with full circle when arc is very small\r\n                generator.cornerRadius(this.get(\"cornerRadius\", 0));\r\n            }\r\n            generator.context(this._display);\r\n            let radius = this.get(\"radius\", 0);\r\n            let innerRadius = this.get(\"innerRadius\", 0);\r\n            let dRadius = this.get(\"dRadius\", 0);\r\n            let dInnerRadius = this.get(\"dInnerRadius\", 0);\r\n            radius += dRadius;\r\n            innerRadius += dInnerRadius;\r\n            if (innerRadius < 0) {\r\n                innerRadius = radius + innerRadius;\r\n            }\r\n            generator({ innerRadius: innerRadius, outerRadius: radius, startAngle: (startAngle + 90) * $math.RADIANS, endAngle: (startAngle + arc + 90) * $math.RADIANS });\r\n            let middleAngle = startAngle + arc / 2;\r\n            this.ix = $math.cos(middleAngle);\r\n            this.iy = $math.sin(middleAngle);\r\n        }\r\n        if (this.isDirty(\"shiftRadius\")) {\r\n            const shiftRadius = this.get(\"shiftRadius\", 0);\r\n            this.setRaw(\"dx\", this.ix * shiftRadius);\r\n            this.setRaw(\"dy\", this.iy * shiftRadius);\r\n            this.markDirtyPosition();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(Slice, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"Slice\"\r\n});\r\nObject.defineProperty(Slice, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Graphics.classNames.concat([Slice.className])\r\n});\r\n//# sourceMappingURL=Slice.js.map","import { Text } from \"./Text\";\r\nimport * as $math from \"../util/Math\";\r\n/**\r\n * @ignore\r\n */\r\nexport class RadialText extends Text {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_display\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this._root._renderer.makeRadialText(\"\", this.textStyle)\r\n        });\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n    }\r\n    _beforeChanged() {\r\n        super._beforeChanged();\r\n        this._display.clear();\r\n        if (this.isDirty(\"textType\")) {\r\n            this._display.textType = this.get(\"textType\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"radius\")) {\r\n            this._display.radius = this.get(\"radius\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"startAngle\")) {\r\n            this._display.startAngle = (this.get(\"startAngle\", 0) + 90) * $math.RADIANS;\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"inside\")) {\r\n            this._display.inside = this.get(\"inside\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"orientation\")) {\r\n            this._display.orientation = this.get(\"orientation\");\r\n            this.markDirtyBounds();\r\n        }\r\n        if (this.isDirty(\"kerning\")) {\r\n            this._display.kerning = this.get(\"kerning\");\r\n            this.markDirtyBounds();\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(RadialText, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"RadialText\"\r\n});\r\nObject.defineProperty(RadialText, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Text.classNames.concat([RadialText.className])\r\n});\r\n//# sourceMappingURL=RadialText.js.map","// import * as $object from \"../util/Object\";\r\nimport { p50, Percent } from \"../util/Percent\";\r\nimport { Label } from \"./Label\";\r\nimport { RadialText } from \"./RadialText\";\r\nimport * as $math from \"../util/Math\";\r\nimport * as $utils from \"../util/Utils\";\r\nexport class RadialLabel extends Label {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_flipped\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: false\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._textKeys.push(\"textType\", \"kerning\");\r\n        super._afterNew();\r\n    }\r\n    _makeText() {\r\n        this._text = this.children.push(RadialText.new(this._root, {}));\r\n    }\r\n    /**\r\n     * Returns base radius in pixels.\r\n     *\r\n     * @return Base radius\r\n     */\r\n    baseRadius() {\r\n        const radiusPrivate = this.getPrivate(\"radius\", 0);\r\n        const innerRadiusPrivate = this.getPrivate(\"innerRadius\", 0);\r\n        const baseRadius = this.get(\"baseRadius\", 0);\r\n        return innerRadiusPrivate + $utils.relativeToValue(baseRadius, radiusPrivate - innerRadiusPrivate);\r\n    }\r\n    /**\r\n     * Returns radius adjustment in pixels.\r\n     *\r\n     * @return Radius\r\n     */\r\n    radius() {\r\n        const inside = this.get(\"inside\", false);\r\n        return this.baseRadius() + this.get(\"radius\", 0) * (inside ? -1 : 1);\r\n    }\r\n    _updateChildren() {\r\n        super._updateChildren();\r\n        if (this.isDirty(\"baseRadius\") || this.isPrivateDirty(\"radius\") || this.isPrivateDirty(\"innerRadius\") || this.isDirty(\"labelAngle\") || this.isDirty(\"radius\") || this.isDirty(\"inside\") || this.isDirty(\"orientation\") || this.isDirty(\"textType\")) {\r\n            const textType = this.get(\"textType\", \"adjusted\");\r\n            const inside = this.get(\"inside\", false);\r\n            const orientation = this.get(\"orientation\");\r\n            let labelAngle = $math.normalizeAngle(this.get(\"labelAngle\", 0));\r\n            this._text.set(\"startAngle\", this.get(\"labelAngle\", 0));\r\n            this._text.set(\"inside\", inside);\r\n            const sin = $math.sin(labelAngle);\r\n            const cos = $math.cos(labelAngle);\r\n            let baseRadius = this.baseRadius();\r\n            let radius = this.radius();\r\n            this._display.angle = 0;\r\n            if (textType == \"circular\") {\r\n                this.setAll({\r\n                    paddingTop: 0,\r\n                    paddingBottom: 0,\r\n                    paddingLeft: 0,\r\n                    paddingRight: 0\r\n                });\r\n                // Circular labels are handled and positioned differently\r\n                this._text.set(\"orientation\", orientation);\r\n                this._text.set(\"radius\", radius);\r\n            }\r\n            else {\r\n                if (baseRadius == 0) {\r\n                    labelAngle = 0;\r\n                    radius = 0;\r\n                }\r\n                // Positioning of radial/regular labels are teh same\r\n                let x = radius * cos;\r\n                let y = radius * sin;\r\n                if (textType == \"radial\") {\r\n                    this.setRaw(\"x\", x);\r\n                    this.setRaw(\"y\", y);\r\n                    if ((labelAngle < 90) || (labelAngle > 270) || orientation != \"auto\") {\r\n                        this._display.angle = labelAngle; // + 90;\r\n                        this._flipped = false;\r\n                    }\r\n                    else {\r\n                        this._display.angle = labelAngle + 180;\r\n                        this._flipped = true;\r\n                    }\r\n                    this._dirty.rotation = false;\r\n                }\r\n                else if (textType == \"adjusted\") {\r\n                    this.setRaw(\"centerX\", p50);\r\n                    this.setRaw(\"centerY\", p50);\r\n                    this.setRaw(\"x\", x);\r\n                    this.setRaw(\"y\", y);\r\n                }\r\n                else if (textType == \"regular\") {\r\n                    this.setRaw(\"x\", x);\r\n                    this.setRaw(\"y\", y);\r\n                }\r\n            }\r\n            this.markDirtyPosition();\r\n            this.markDirtyBounds();\r\n        }\r\n    }\r\n    _updatePosition() {\r\n        const textType = this.get(\"textType\", \"regular\");\r\n        const inside = this.get(\"inside\", false);\r\n        let dx = 0;\r\n        let dy = 0;\r\n        let labelAngle = this.get(\"labelAngle\", 0);\r\n        let bounds = this.localBounds();\r\n        let w = bounds.right - bounds.left;\r\n        let h = bounds.bottom - bounds.top;\r\n        if (textType == \"radial\") {\r\n            if (this._flipped) {\r\n                let centerX = this.get(\"centerX\");\r\n                if (centerX instanceof Percent) {\r\n                    w = w * (1 - centerX.value * 2);\r\n                }\r\n                dx = w * $math.cos(labelAngle);\r\n                dy = w * $math.sin(labelAngle);\r\n            }\r\n        }\r\n        else if (!inside && textType == \"adjusted\") {\r\n            dx = w / 2 * $math.cos(labelAngle);\r\n            dy = h / 2 * $math.sin(labelAngle);\r\n        }\r\n        this.setRaw(\"dx\", dx);\r\n        this.setRaw(\"dy\", dy);\r\n        super._updatePosition();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    get text() {\r\n        return this._text;\r\n    }\r\n}\r\nObject.defineProperty(RadialLabel, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"RadialLabel\"\r\n});\r\nObject.defineProperty(RadialLabel, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Label.classNames.concat([RadialLabel.className])\r\n});\r\n//# sourceMappingURL=RadialLabel.js.map","import { PercentSeries } from \"../percent/PercentSeries\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { Slice } from \"../../core/render/Slice\";\r\nimport { Tick } from \"../../core/render/Tick\";\r\nimport { RadialLabel } from \"../../core/render/RadialLabel\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * Creates a series for a [[PieChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/} for more info\r\n * @important\r\n */\r\nexport class PieSeries extends PercentSeries {\r\n    _makeSlices() {\r\n        return new ListTemplate(Template.new({}), () => Slice._new(this._root, {\r\n            themeTags: $utils.mergeTags(this.slices.template.get(\"themeTags\", []), [\"pie\", \"series\"])\r\n        }, [this.slices.template]));\r\n    }\r\n    _makeLabels() {\r\n        return new ListTemplate(Template.new({}), () => RadialLabel._new(this._root, {\r\n            themeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [\"pie\", \"series\"])\r\n        }, [this.labels.template]));\r\n    }\r\n    _makeTicks() {\r\n        return new ListTemplate(Template.new({}), () => Tick._new(this._root, {\r\n            themeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), [\"pie\", \"series\"])\r\n        }, [this.ticks.template]));\r\n    }\r\n    processDataItem(dataItem) {\r\n        super.processDataItem(dataItem);\r\n        const slice = this.makeSlice(dataItem);\r\n        slice.on(\"scale\", () => {\r\n            this._updateTick(dataItem);\r\n        });\r\n        slice.on(\"shiftRadius\", () => {\r\n            this._updateTick(dataItem);\r\n        });\r\n        slice.events.on(\"positionchanged\", () => {\r\n            this._updateTick(dataItem);\r\n        });\r\n        const label = this.makeLabel(dataItem);\r\n        label.events.on(\"positionchanged\", () => {\r\n            this._updateTick(dataItem);\r\n        });\r\n        this.makeTick(dataItem);\r\n        slice.events.on(\"positionchanged\", () => {\r\n            label.markDirty();\r\n        });\r\n    }\r\n    _getNextUp() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            return chart._maxRadius;\r\n        }\r\n        return this.labelsContainer.maxHeight() / 2;\r\n    }\r\n    _getNextDown() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            return -chart._maxRadius;\r\n        }\r\n        return -this.labelsContainer.maxHeight() / 2;\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            if (this.isDirty(\"alignLabels\")) {\r\n                let labelsTemplate = this.labels.template;\r\n                if (this.get(\"alignLabels\")) {\r\n                    labelsTemplate.set(\"textType\", \"aligned\");\r\n                }\r\n                else {\r\n                    let textType = labelsTemplate.get(\"textType\");\r\n                    if (textType == null || textType == \"aligned\") {\r\n                        labelsTemplate.set(\"textType\", \"adjusted\");\r\n                    }\r\n                }\r\n            }\r\n            if (this._valuesDirty || this.isDirty(\"radius\") || this.isDirty(\"innerRadius\") || this.isDirty(\"startAngle\") || this.isDirty(\"endAngle\") || this.isDirty(\"alignLabels\")) {\r\n                this.markDirtyBounds();\r\n                const startAngle = this.get(\"startAngle\", chart.get(\"startAngle\", -90));\r\n                const endAngle = this.get(\"endAngle\", chart.get(\"endAngle\", 270));\r\n                const arc = endAngle - startAngle;\r\n                let currentAngle = startAngle;\r\n                const radius = chart.radius(this);\r\n                this.setPrivateRaw(\"radius\", radius);\r\n                let innerRadius = chart.innerRadius(this) * chart.getPrivate(\"irModifyer\", 1);\r\n                if (innerRadius < 0) {\r\n                    innerRadius = radius + innerRadius;\r\n                }\r\n                //if (radius > 0) {\r\n                $array.each(this._dataItems, (dataItem) => {\r\n                    this.updateLegendValue(dataItem);\r\n                    let currentArc = arc * dataItem.get(\"valuePercentTotal\") / 100;\r\n                    const slice = dataItem.get(\"slice\");\r\n                    if (slice) {\r\n                        slice.set(\"radius\", radius);\r\n                        slice.set(\"innerRadius\", innerRadius);\r\n                        slice.set(\"startAngle\", currentAngle);\r\n                        slice.set(\"arc\", currentArc);\r\n                        const color = dataItem.get(\"fill\");\r\n                        slice._setDefault(\"fill\", color);\r\n                        slice._setDefault(\"stroke\", color);\r\n                    }\r\n                    let middleAngle = $math.normalizeAngle(currentAngle + currentArc / 2);\r\n                    const label = dataItem.get(\"label\");\r\n                    if (label) {\r\n                        label.setPrivate(\"radius\", radius);\r\n                        label.setPrivate(\"innerRadius\", innerRadius);\r\n                        label.set(\"labelAngle\", middleAngle);\r\n                        if (label.get(\"textType\") == \"aligned\") {\r\n                            let labelRadius = radius + label.get(\"radius\", 0);\r\n                            let y = radius * $math.sin(middleAngle);\r\n                            if (middleAngle > 90 && middleAngle <= 270) {\r\n                                if (!label.isHidden() && !label.isHiding()) {\r\n                                    this._lLabels.push({ label: label, y: y });\r\n                                }\r\n                                labelRadius *= -1;\r\n                                labelRadius -= this.labelsContainer.get(\"paddingLeft\", 0);\r\n                                label.set(\"centerX\", p100);\r\n                                label.setPrivateRaw(\"left\", true);\r\n                            }\r\n                            else {\r\n                                if (!label.isHidden() && !label.isHiding()) {\r\n                                    this._rLabels.push({ label: label, y: y });\r\n                                }\r\n                                labelRadius += this.labelsContainer.get(\"paddingRight\", 0);\r\n                                label.set(\"centerX\", 0);\r\n                                label.setPrivateRaw(\"left\", false);\r\n                            }\r\n                            label.set(\"x\", labelRadius);\r\n                            label.set(\"y\", radius * $math.sin(middleAngle));\r\n                        }\r\n                    }\r\n                    currentAngle += currentArc;\r\n                    this._updateTick(dataItem);\r\n                });\r\n                //}\r\n            }\r\n        }\r\n    }\r\n    _updateTick(dataItem) {\r\n        const tick = dataItem.get(\"tick\");\r\n        const label = dataItem.get(\"label\");\r\n        const slice = dataItem.get(\"slice\");\r\n        const location = tick.get(\"location\", 1);\r\n        if (tick && label && slice) {\r\n            const radius = (slice.get(\"shiftRadius\", 0) + slice.get(\"radius\", 0)) * slice.get(\"scale\", 1) * location;\r\n            const labelAngle = label.get(\"labelAngle\", 0);\r\n            const cos = $math.cos(labelAngle);\r\n            const sin = $math.sin(labelAngle);\r\n            const labelsContainer = this.labelsContainer;\r\n            const pl = labelsContainer.get(\"paddingLeft\", 0);\r\n            const pr = labelsContainer.get(\"paddingRight\", 0);\r\n            let x = 0;\r\n            let y = 0;\r\n            x = label.x();\r\n            y = label.y();\r\n            if (label.get(\"textType\") == \"circular\") {\r\n                const labelRadius = label.radius() - label.get(\"paddingBottom\", 0);\r\n                const labelAngle = label.get(\"labelAngle\", 0);\r\n                x = labelRadius * $math.cos(labelAngle);\r\n                y = labelRadius * $math.sin(labelAngle);\r\n            }\r\n            let dx = -pr;\r\n            if (label.getPrivate(\"left\")) {\r\n                dx = pl;\r\n            }\r\n            tick.set(\"points\", [{ x: slice.x() + radius * cos, y: slice.y() + radius * sin }, { x: x + dx, y: y }, { x: x, y: y }]);\r\n        }\r\n    }\r\n    _positionBullet(bullet) {\r\n        const sprite = bullet.get(\"sprite\");\r\n        if (sprite) {\r\n            const dataItem = sprite.dataItem;\r\n            const slice = dataItem.get(\"slice\");\r\n            if (slice) {\r\n                const innerRadius = slice.get(\"innerRadius\", 0);\r\n                const radius = slice.get(\"radius\", 0);\r\n                const startAngle = slice.get(\"startAngle\", 0);\r\n                const arc = slice.get(\"arc\", 0);\r\n                const locationX = bullet.get(\"locationX\", 0.5);\r\n                const locationY = bullet.get(\"locationY\", 0.5);\r\n                const angle = startAngle + arc * locationX;\r\n                const r = innerRadius + (radius - innerRadius) * locationY;\r\n                sprite.setAll({ x: $math.cos(angle) * r, y: $math.sin(angle) * r });\r\n            }\r\n        }\r\n    }\r\n}\r\nObject.defineProperty(PieSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"PieSeries\"\r\n});\r\nObject.defineProperty(PieSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: PercentSeries.classNames.concat([PieSeries.className])\r\n});\r\n//# sourceMappingURL=PieSeries.js.map","<template>\n  <div class=\"myChart\" ref=\"chartdiv\" :style=\"containerSize\"></div>\n</template>\n\n<script>\nimport * as am5 from '@amcharts/amcharts5';\nimport * as am5percent from \"@amcharts/amcharts5/percent\";\nimport am5themes_Animated from '@amcharts/amcharts5/themes/Animated';\n\nexport default {\n  name: 'ChartView',\n  data() {\n    return {}\n  },\n  props: {\n    containerSize: {\n      type: Object,\n      required: true\n    }\n  },\n  mounted() {\n    let root = am5.Root.new(this.$refs.chartdiv);\n\n    root.setThemes([am5themes_Animated.new(root)]);\n\n\n    let chart = root.container.children.push(\n        am5percent.PieChart.new(root, {\n          name: 'Series',\n          categoryField: \"company\",\n          valueField: 'value',\n          // startAngle: -180,\n          // endAngle: 0\n          radius: am5.percent(60),\n          innerRadius: am5.percent(80),\n          maxTooltipDistance: 0\n        })\n    );\n\n\n    let data = [\n      {\n        company: 'Alpha',\n        value: 1200\n      },\n      {\n        company: 'Bravo',\n        value: 800\n      },\n      {\n        company: 'Charlie',\n        value: 500\n      },\n      {\n        company: 'Delta',\n        value: 100\n      },\n      {\n        company: 'Easy',\n        value: 50\n      },\n    ];\n\n    let series = chart.series.push(\n        am5percent.PieSeries.new(root, {\n          name: \"Series\",\n          valueField: \"value\",\n          categoryField: \"company\",\n          alignLabels: false,\n          // startAngle: -180,\n          // endAngle: 0\n          legendLabelText: \"[{fill}]{category}{/}\",\n          legendValueText: \"[bold {fill}]{value}[/]\",\n        })\n    );\n    series.data.setAll(data);\n\n    // Add legend\n    let legend = chart.children.push(am5.Legend.new(root, {\n      centerY: am5.percent(50),\n      y: am5.percent(50),\n      layout: root.verticalLayout\n    }));\n\n    legend.data.setAll(series.dataItems)\n\n    series.slices.template.setAll({\n      strokeOpacity: 0.5,\n      stroke: am5.color(0xffffff),\n      strokeWidth: 2,\n      // tooltipText: ''\n    })\n\n    series.slices.template.states.create('active', {\n      shiftRadius: 20,\n      stroke: am5.color(0xffffff),\n      strokeWidth: 5\n    })\n\n    series.labels.template.setAll({\n      // fill: am5.color(0xffffff),\n      text: \"{category}\",\n      radius: 10,\n      // inside: true,\n      // textType: 'circular'\n    })\n\n    //\n    // let label = chart.seriesContainer.children.push(am5.Label.new(root, {\n    //   textAlign: 'center',\n    //   centerY: am5.p100,\n    //   centerX: am5.p50,\n    //   text: '',\n    //   fontSize: 30\n    // }))\n    //\n    // // let currentSlice;\n    // series.slices.template.on('active', (active, slice) => {\n    //   // if(currentSlice && currentSlice !== slice && active) {\n    //   //   currentSlice.set('active', false)\n    //   // }\n    //   console.log(slice)\n    //   let color = slice.get('fill');\n    //\n    //   label.setAll({\n    //     fill: color,\n    //     text: \"1200\"\n    //   })\n    //\n    //   // currentSlice = slice\n    // })\n\n    series.labels.template.set(\"visible\", false)\n    series.ticks.template.set(\"visible\", false)\n\n\n\n\n\n    series.appear(1000);\n    chart.appear(1000, 100);\n\n    this.root = root;\n\n  },\n  beforeDestroy() {\n    if (this.root) {\n      this.root.dispose();\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PieCharts.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PieCharts.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PieCharts.vue?vue&type=template&id=9babdeca&\"\nimport script from \"./PieCharts.vue?vue&type=script&lang=js&\"\nexport * from \"./PieCharts.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{ref:\"chartdiv\",staticClass:\"myChart gauge\",style:(_vm.containerSize)})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { Axis } from \"./Axis\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $math from \"../../../core/util/Math\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport { populateString } from \"../../../core/util/PopulateString\";\r\n/**\r\n * Creates a category axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\r\n * @important\r\n */\r\nexport class CategoryAxis extends Axis {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_frequency\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n        Object.defineProperty(this, \"_itemMap\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: {}\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\r\n        this.fields.push(\"category\");\r\n        this.setPrivateRaw(\"name\", \"category\");\r\n        this.addTag(\"category\");\r\n        super._afterNew();\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        const len = this.dataItems.length;\r\n        let i = 0;\r\n        if (this._valuesDirty) {\r\n            this._itemMap = {};\r\n            $array.each(this.dataItems, (dataItem) => {\r\n                dataItem.setRaw(\"index\", i);\r\n                this._itemMap[dataItem.get(\"category\")] = dataItem;\r\n                i++;\r\n            });\r\n            this.setPrivateRaw(\"maxZoomFactor\", len);\r\n        }\r\n        this.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\r\n        this.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\r\n        if (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\r\n            if (this.dataItems.length > 0) {\r\n                this._handleRangeChange();\r\n                this._prepareAxisItems();\r\n                this._updateAxisRanges();\r\n            }\r\n        }\r\n    }\r\n    _handleRangeChange() {\r\n        $array.each(this.series, (series) => {\r\n            let startCategory = this.dataItems[this.startIndex()].get(\"category\");\r\n            let endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\r\n            let baseAxis = series.get(\"baseAxis\");\r\n            let xAxis = series.get(\"xAxis\");\r\n            let yAxis = series.get(\"yAxis\");\r\n            if (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\r\n                series._markDirtyAxes();\r\n            }\r\n            else if (baseAxis === this) {\r\n                let key;\r\n                let openKey;\r\n                let otherAxis = yAxis;\r\n                if (xAxis === baseAxis) {\r\n                    if (series.get(\"categoryXField\")) {\r\n                        key = \"categoryX\";\r\n                    }\r\n                    if (series.get(\"openCategoryXField\")) {\r\n                        openKey = \"openCategoryX\";\r\n                    }\r\n                }\r\n                else if (yAxis === baseAxis) {\r\n                    if (series.get(\"categoryYField\")) {\r\n                        key = \"categoryY\";\r\n                    }\r\n                    if (series.get(\"openCategoryYField\")) {\r\n                        openKey = \"openCategoryY\";\r\n                    }\r\n                    otherAxis = xAxis;\r\n                }\r\n                if (otherAxis.className == \"ValueAxis\") {\r\n                    if (key || openKey) {\r\n                        let startDataItem;\r\n                        let endDataItem;\r\n                        for (let i = 0, len = series.dataItems.length; i < len; i++) {\r\n                            let dataItem = series.dataItems[i];\r\n                            if (key) {\r\n                                if (dataItem.get(key) === startCategory) {\r\n                                    startDataItem = dataItem;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (openKey) {\r\n                                if (dataItem.get(openKey) === startCategory) {\r\n                                    startDataItem = dataItem;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        for (let i = series.dataItems.length - 1; i >= 0; i--) {\r\n                            let dataItem = series.dataItems[i];\r\n                            if (key) {\r\n                                if (dataItem.get(key) === endCategory) {\r\n                                    endDataItem = dataItem;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (openKey) {\r\n                                if (dataItem.get(openKey) === endCategory) {\r\n                                    endDataItem = dataItem;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        let startIndex = 0;\r\n                        let endIndex = series.dataItems.length;\r\n                        if (startDataItem) {\r\n                            startIndex = series.dataItems.indexOf(startDataItem);\r\n                        }\r\n                        if (endDataItem) {\r\n                            endIndex = series.dataItems.indexOf(endDataItem) + 1;\r\n                        }\r\n                        series.setPrivate(\"startIndex\", startIndex);\r\n                        series.setPrivate(\"endIndex\", endIndex);\r\n                        let hasValue = false;\r\n                        for (let i = startIndex; i < endIndex; i++) {\r\n                            const dataItem = series.dataItems[i];\r\n                            $array.each(series.__valueXShowFields, (key) => {\r\n                                let value = dataItem.get(key);\r\n                                if (value != null) {\r\n                                    hasValue = true;\r\n                                }\r\n                            });\r\n                            $array.each(series.__valueYShowFields, (key) => {\r\n                                let value = dataItem.get(key);\r\n                                if (value != null) {\r\n                                    hasValue = true;\r\n                                }\r\n                            });\r\n                            if (hasValue) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        series.setPrivate(\"outOfSelection\", !hasValue);\r\n                    }\r\n                }\r\n                series._markDirtyAxes(); // must be outside\r\n            }\r\n        });\r\n    }\r\n    _prepareAxisItems() {\r\n        const renderer = this.get(\"renderer\");\r\n        const len = this.dataItems.length;\r\n        let startIndex = this.startIndex();\r\n        if (startIndex > 0) {\r\n            startIndex--;\r\n        }\r\n        let endIndex = this.endIndex();\r\n        if (endIndex < len) {\r\n            endIndex++;\r\n        }\r\n        let maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\"), 1 / Number.MAX_SAFE_INTEGER);\r\n        let frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\r\n        startIndex = Math.floor(startIndex / frequency) * frequency;\r\n        this._frequency = frequency;\r\n        for (let j = 0; j < len; j++) {\r\n            this.dataItems[j].hide();\r\n        }\r\n        let f = this.dataItems[startIndex].get(\"index\", 0);\r\n        for (let i = startIndex; i < endIndex; i = i + frequency) {\r\n            let dataItem = this.dataItems[i];\r\n            this._createAssets(dataItem, []);\r\n            if (dataItem.isHidden()) {\r\n                dataItem.show();\r\n            }\r\n            this._prepareDataItem(dataItem, f, frequency);\r\n            f++;\r\n        }\r\n        this._updateGhost();\r\n    }\r\n    _prepareDataItem(dataItem, fillIndex, count) {\r\n        let renderer = this.get(\"renderer\");\r\n        let categoryLocation = dataItem.get(\"categoryLocation\", 0);\r\n        let endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\r\n        let index = dataItem.get(\"index\");\r\n        if (!$type.isNumber(index)) {\r\n            index = this.categoryToIndex(dataItem.get(\"category\"));\r\n        }\r\n        let position = this.indexToPosition(index, categoryLocation);\r\n        let endCategory = dataItem.get(\"endCategory\");\r\n        let endIndex;\r\n        if (endCategory) {\r\n            endIndex = this.categoryToIndex(endCategory);\r\n            if (!$type.isNumber(endIndex)) {\r\n                endIndex = index;\r\n            }\r\n        }\r\n        else {\r\n            endIndex = index;\r\n        }\r\n        let endPosition = this.indexToPosition(endIndex, endCategoryLocation);\r\n        let fillEndIndex;\r\n        let fillEndPosition;\r\n        if (dataItem.get(\"isRange\")) {\r\n            fillEndIndex = endIndex;\r\n        }\r\n        else {\r\n            fillEndIndex = index + this._frequency - 1;\r\n        }\r\n        fillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\r\n        renderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\r\n        renderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\r\n        renderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\r\n        renderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\r\n        this._processBullet(dataItem);\r\n        renderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\r\n        const fillRule = this.get(\"fillRule\");\r\n        if (fillRule) {\r\n            fillRule(dataItem, fillIndex);\r\n        }\r\n    }\r\n    startIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\r\n    }\r\n    endIndex() {\r\n        let len = this.dataItems.length;\r\n        return Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    baseValue() {\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    basePosition() {\r\n        return 0;\r\n    }\r\n    /**\r\n     * Returns X coordinate in pixels corresponding to specific category index.\r\n     *\r\n     * @param   value  Index\r\n     * @return         X coordinate\r\n     */\r\n    getX(value) {\r\n        let axisDataItem = this._itemMap[value];\r\n        if (axisDataItem) {\r\n            return this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * Returns Y coordinate in pixels corresponding to specific category index.\r\n     *\r\n     * @param   value  Index\r\n     * @return         Y coordinate\r\n     */\r\n    getY(value) {\r\n        let axisDataItem = this._itemMap[value];\r\n        if (axisDataItem) {\r\n            return this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionX(dataItem, field, cellLocation, _axisLocation) {\r\n        const category = dataItem.get(field);\r\n        const axisDataItem = this._itemMap[category];\r\n        if (axisDataItem) {\r\n            return this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateX(dataItem, field, cellLocation, _axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemPositionY(dataItem, field, cellLocation, _axisLocation) {\r\n        const category = dataItem.get(field);\r\n        const axisDataItem = this._itemMap[category];\r\n        if (axisDataItem) {\r\n            return this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getDataItemCoordinateY(dataItem, field, cellLocation, _axisLocation) {\r\n        return this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\r\n    }\r\n    /**\r\n     * Converts category index to a relative position.\r\n     *\r\n     * `location` indicates relative position within category: 0 - start, 1 - end.\r\n     *\r\n     * If not set, will use middle (0.5) of the category.\r\n     *\r\n     * @param   index     Index\r\n     * @param   location  Location\r\n     * @return            Index\r\n     */\r\n    indexToPosition(index, location) {\r\n        if (!$type.isNumber(location)) {\r\n            location = 0.5;\r\n        }\r\n        let len = this.dataItems.length;\r\n        let startLocation = this.get(\"startLocation\", 0);\r\n        let endLocation = this.get(\"endLocation\", 1);\r\n        len -= startLocation;\r\n        len -= (1 - endLocation);\r\n        let position = (index + location - startLocation) / len;\r\n        let dataItem = this.dataItems[index];\r\n        if (dataItem) {\r\n            position += dataItem.get(\"deltaPosition\", 0);\r\n        }\r\n        return position;\r\n    }\r\n    /**\r\n     * Returns an index of a category.\r\n     *\r\n     * @param   category  Category to look up\r\n     * @return            Index\r\n     */\r\n    categoryToIndex(category) {\r\n        let dataItem = this._itemMap[category];\r\n        if (dataItem) {\r\n            return dataItem.get(\"index\");\r\n        }\r\n        return NaN;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    dataItemToPosition(dataItem) {\r\n        return this.indexToPosition(dataItem.get(\"index\"));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    roundAxisPosition(position, location) {\r\n        position += (0.5 - location) / this.dataItems.length;\r\n        return this.indexToPosition(this.axisPositionToIndex(position), location);\r\n    }\r\n    /**\r\n     * Returns an index of the category that corresponds to specific pixel\r\n     * position within axis.\r\n     *\r\n     * @param position  Position (px)\r\n     * @return Category index\r\n     */\r\n    axisPositionToIndex(position) {\r\n        let len = this.dataItems.length;\r\n        return $math.fitToRange(Math.floor(position * len), 0, len - 1); //$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\r\n    }\r\n    /**\r\n     * Returns text to be used in an axis tooltip for specific relative position.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Tooltip text\r\n     */\r\n    getTooltipText(position) {\r\n        //@todo number formatter + tag\r\n        const dataItem = this.dataItems[this.axisPositionToIndex(position)];\r\n        if (dataItem) {\r\n            const label = dataItem.get(\"label\");\r\n            if (label) {\r\n                return populateString(label, this.get(\"tooltipText\", \"\"));\r\n            }\r\n        }\r\n    }\r\n    _updateTooltipText(tooltip, position) {\r\n        tooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\r\n        tooltip.label.text.markDirtyText();\r\n    }\r\n    /**\r\n     * Returns a data item from series that is closest to the `position`.\r\n     *\r\n     * @param   series    Series\r\n     * @param   position  Relative position\r\n     * @return            Data item\r\n     */\r\n    getSeriesItem(series, position) {\r\n        if (this.dataItems.length > 0) {\r\n            let fieldName = (this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\"));\r\n            let index = this.axisPositionToIndex(position);\r\n            // try simple first\r\n            let seriesDataItem = series.dataItems[index];\r\n            let axisDataItem = this.dataItems[index];\r\n            let category = axisDataItem.get(\"category\");\r\n            if (seriesDataItem && axisDataItem) {\r\n                if (seriesDataItem.get(fieldName) === category) {\r\n                    return seriesDataItem;\r\n                }\r\n            }\r\n            // if not found, try looking\r\n            for (let i = 0, len = series.dataItems.length; i < len; i++) {\r\n                let dataItem = series.dataItems[i];\r\n                if (dataItem.get(fieldName) === category) {\r\n                    return dataItem;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Zooms the axis to specific `start` and `end` indexes.\r\n     *\r\n     * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n     *\r\n     * @param  start     Start index\r\n     * @param  end       End index\r\n     * @param  duration  Duration in milliseconds\r\n     */\r\n    zoomToIndexes(start, end, duration) {\r\n        let len = this.dataItems.length;\r\n        this.zoom(start / len, end / len, duration);\r\n    }\r\n    zoomToCategories(startCategory, endCategory, duration) {\r\n        this.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\r\n    }\r\n    /**\r\n     * Returns position span between start and end of a single cell in axis.\r\n     *\r\n     * @since 5.2.30\r\n     * @return Position\r\n     * @ignore\r\n     */\r\n    getCellWidthPosition() {\r\n        return 1 / this.dataItems.length * (this.get(\"end\", 1) - this.get(\"start\", 0));\r\n    }\r\n}\r\nObject.defineProperty(CategoryAxis, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"CategoryAxis\"\r\n});\r\nObject.defineProperty(CategoryAxis, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: Axis.classNames.concat([CategoryAxis.className])\r\n});\r\n//# sourceMappingURL=CategoryAxis.js.map","import { Theme } from \"../../core/Theme\";\r\nimport { percent } from \"../../core/util/Percent\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n/**\r\n * @ignore\r\n */\r\nexport class RadarDefaultTheme extends Theme {\r\n    setupDefaultRules() {\r\n        super.setupDefaultRules();\r\n        const r = this.rule.bind(this);\r\n        const ic = this._root.interfaceColors;\r\n        /**\r\n         * ========================================================================\r\n         * charts/radar\r\n         * ========================================================================\r\n         */\r\n        r(\"RadarChart\").setAll({\r\n            radius: percent(80),\r\n            innerRadius: 0,\r\n            startAngle: -90,\r\n            endAngle: 270\r\n        });\r\n        r(\"RadarColumnSeries\").setAll({\r\n            clustered: true\r\n        });\r\n        r(\"Slice\", [\"radar\", \"column\", \"series\"]).setAll({\r\n            width: percent(80),\r\n            height: percent(80)\r\n        });\r\n        r(\"RadarLineSeries\").setAll({\r\n            connectEnds: true\r\n        });\r\n        r(\"SmoothedRadarLineSeries\").setAll({\r\n            tension: 0.5\r\n        });\r\n        r(\"AxisRendererRadial\").setAll({\r\n            minGridDistance: 40,\r\n            axisAngle: -90,\r\n            inversed: false,\r\n            cellStartLocation: 0,\r\n            cellEndLocation: 1\r\n        });\r\n        r(\"AxisRendererCircular\").setAll({\r\n            minGridDistance: 100,\r\n            inversed: false,\r\n            cellStartLocation: 0,\r\n            cellEndLocation: 1\r\n        });\r\n        r(\"RadialLabel\", [\"circular\"]).setAll({\r\n            textType: \"circular\",\r\n            paddingTop: 1,\r\n            paddingRight: 0,\r\n            paddingBottom: 1,\r\n            paddingLeft: 0,\r\n            centerX: 0,\r\n            centerY: 0,\r\n            radius: 8\r\n        });\r\n        r(\"AxisLabelRadial\", [\"category\"]).setAll({\r\n            text: \"{category}\",\r\n            populateText: true\r\n        });\r\n        r(\"RadialLabel\", [\"radial\"]).setAll({\r\n            textType: \"regular\",\r\n            centerX: 0,\r\n            textAlign: \"right\"\r\n        });\r\n        r(\"RadarChart\", [\"gauge\"]).setAll({\r\n            startAngle: 180,\r\n            endAngle: 360,\r\n            innerRadius: percent(90)\r\n        });\r\n        r(\"ClockHand\").setAll({\r\n            topWidth: 1,\r\n            bottomWidth: 10,\r\n            radius: percent(90),\r\n            pinRadius: 10\r\n        });\r\n        {\r\n            const rule = r(\"Graphics\", [\"clock\", \"hand\"]);\r\n            rule.setAll({\r\n                fillOpacity: 1\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n        {\r\n            const rule = r(\"Graphics\", [\"clock\", \"pin\"]);\r\n            rule.setAll({\r\n                fillOpacity: 1\r\n            });\r\n            setColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=RadarDefaultTheme.js.map","import { RadarDefaultTheme } from \"./RadarDefaultTheme\";\r\nimport { XYChart } from \"../xy/XYChart\";\r\nimport { Percent, p50, percent } from \"../../core/util/Percent\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport { arc } from \"d3-shape\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $math from \"../../core/util/Math\";\r\n/**\r\n * Radar chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/radar-chart/} for more info\r\n * @important\r\n */\r\nexport class RadarChart extends XYChart {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * [[Container]] where radar-related elements go.\r\n         *\r\n         * @default Container.new()\r\n         */\r\n        Object.defineProperty(this, \"radarContainer\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: this.plotContainer.children.push(Container.new(this._root, { x: p50, y: p50 }))\r\n        });\r\n        Object.defineProperty(this, \"_arcGenerator\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: arc()\r\n        });\r\n        Object.defineProperty(this, \"_maxRadius\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: 1\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._defaultThemes.push(RadarDefaultTheme.new(this._root));\r\n        super._afterNew();\r\n        const radarContainer = this.radarContainer;\r\n        const gridContainer = this.gridContainer;\r\n        const topGridContainer = this.topGridContainer;\r\n        const seriesContainer = this.seriesContainer;\r\n        const bulletsContainer = this.bulletsContainer;\r\n        radarContainer.children.pushAll([gridContainer, seriesContainer, topGridContainer, bulletsContainer]);\r\n        seriesContainer.set(\"mask\", Graphics.new(this._root, {}));\r\n        gridContainer.set(\"mask\", Graphics.new(this._root, {}));\r\n        this._disposers.push(this.plotContainer.events.on(\"boundschanged\", () => {\r\n            this._updateRadius();\r\n        }));\r\n    }\r\n    _maskGrid() {\r\n    }\r\n    _prepareChildren() {\r\n        super._prepareChildren();\r\n        if (this._sizeDirty || this.isDirty(\"radius\") || this.isDirty(\"innerRadius\") || this.isDirty(\"startAngle\") || this.isDirty(\"endAngle\")) {\r\n            const chartContainer = this.chartContainer;\r\n            const w = chartContainer.innerWidth();\r\n            const h = chartContainer.innerHeight();\r\n            const startAngle = this.get(\"startAngle\", 0);\r\n            const endAngle = this.get(\"endAngle\", 0);\r\n            const innerRadius = this.get(\"innerRadius\");\r\n            let bounds = $math.getArcBounds(0, 0, startAngle, endAngle, 1);\r\n            const wr = w / (bounds.right - bounds.left);\r\n            const hr = h / (bounds.bottom - bounds.top);\r\n            let innerBounds = { left: 0, right: 0, top: 0, bottom: 0 };\r\n            if (innerRadius instanceof Percent) {\r\n                let value = innerRadius.value;\r\n                let mr = Math.min(wr, hr);\r\n                value = Math.max(mr * value, mr - Math.min(h, w)) / mr;\r\n                innerBounds = $math.getArcBounds(0, 0, startAngle, endAngle, value);\r\n                this.setPrivateRaw(\"irModifyer\", value / innerRadius.value);\r\n            }\r\n            bounds = $math.mergeBounds([bounds, innerBounds]);\r\n            this._maxRadius = Math.max(0, Math.min(wr, hr));\r\n            const radius = $utils.relativeToValue(this.get(\"radius\", 0), this._maxRadius);\r\n            this.radarContainer.setAll({\r\n                dy: -radius * (bounds.bottom + bounds.top) / 2, dx: -radius * (bounds.right + bounds.left) / 2\r\n            });\r\n            this._updateRadius();\r\n        }\r\n    }\r\n    _addCursor(cursor) {\r\n        this.radarContainer.children.push(cursor);\r\n    }\r\n    // do not delete\r\n    _updateRadius() {\r\n        const radius = $utils.relativeToValue(this.get(\"radius\", percent(80)), this._maxRadius);\r\n        this.setPrivateRaw(\"radius\", radius);\r\n        let innerRadius = $utils.relativeToValue(this.get(\"innerRadius\", 0), radius);\r\n        if (innerRadius < 0) {\r\n            innerRadius = radius + innerRadius;\r\n        }\r\n        this.setPrivateRaw(\"innerRadius\", innerRadius);\r\n        this.xAxes.each((axis) => {\r\n            const renderer = axis.get(\"renderer\");\r\n            renderer.updateLayout();\r\n        });\r\n        this.yAxes.each((axis) => {\r\n            const renderer = axis.get(\"renderer\");\r\n            renderer.updateLayout();\r\n        });\r\n        this._updateMask(this.seriesContainer, innerRadius, radius);\r\n        this._updateMask(this.gridContainer, innerRadius, radius);\r\n        this.series.each((series) => {\r\n            if (series.get(\"maskBullets\")) {\r\n                this._updateMask(series.bulletsContainer, innerRadius, radius);\r\n            }\r\n            else {\r\n                series.bulletsContainer.remove(\"mask\");\r\n            }\r\n        });\r\n        const cursor = this.get(\"cursor\");\r\n        if (cursor) {\r\n            cursor.updateLayout();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    _updateMask(container, innerRadius, radius) {\r\n        const mask = container.get(\"mask\");\r\n        if (mask) {\r\n            mask.set(\"draw\", (display) => {\r\n                this._arcGenerator.context(display);\r\n                this._arcGenerator({ innerRadius: innerRadius, outerRadius: radius + .5, startAngle: (this.get(\"startAngle\", 0) + 90) * $math.RADIANS, endAngle: (this.get(\"endAngle\", 0) + 90) * $math.RADIANS });\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processAxis(axis) {\r\n        this.radarContainer.children.push(axis);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    inPlot(point, radius, innerRadius) {\r\n        const r = Math.hypot(point.x, point.y);\r\n        const angle = $math.normalizeAngle(Math.atan2(point.y, point.x) * $math.DEGREES);\r\n        let startAngle = $math.normalizeAngle(this.get(\"startAngle\", 0));\r\n        let endAngle = $math.normalizeAngle(this.get(\"endAngle\", 0));\r\n        let inArc = false;\r\n        if (startAngle < endAngle) {\r\n            if (startAngle < angle && angle < endAngle) {\r\n                inArc = true;\r\n            }\r\n        }\r\n        if (startAngle > endAngle) {\r\n            if (angle > startAngle) {\r\n                inArc = true;\r\n            }\r\n            if (angle < endAngle) {\r\n                inArc = true;\r\n            }\r\n        }\r\n        if (startAngle == endAngle) {\r\n            inArc = true;\r\n        }\r\n        if (!inArc) {\r\n            return false;\r\n        }\r\n        if (radius == null) {\r\n            radius = this.getPrivate(\"radius\", 0);\r\n        }\r\n        if (innerRadius == null) {\r\n            innerRadius = this.getPrivate(\"innerRadius\", 0);\r\n        }\r\n        if (innerRadius > radius) {\r\n            [innerRadius, radius] = [radius, innerRadius];\r\n        }\r\n        if (r <= radius + .5 && r >= innerRadius - .5) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    _tooltipToLocal(point) {\r\n        return this.radarContainer._display.toLocal(point);\r\n    }\r\n    _handlePinch() {\r\n    }\r\n}\r\nObject.defineProperty(RadarChart, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"RadarChart\"\r\n});\r\nObject.defineProperty(RadarChart, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: XYChart.classNames.concat([RadarChart.className])\r\n});\r\n//# sourceMappingURL=RadarChart.js.map","import { RadialLabel } from \"../../../core/render/RadialLabel\";\r\n/**\r\n * Draws a label on a circular axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\r\n */\r\nexport class AxisLabelRadial extends RadialLabel {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_tickPoints\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: []\r\n        });\r\n    }\r\n}\r\nObject.defineProperty(AxisLabelRadial, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisLabelRadial\"\r\n});\r\nObject.defineProperty(AxisLabelRadial, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: RadialLabel.classNames.concat([AxisLabelRadial.className])\r\n});\r\n//# sourceMappingURL=AxisLabelRadial.js.map","import { Slice } from \"../../core/render/Slice\";\r\nimport { AxisRenderer } from \"../xy/axes/AxisRenderer\";\r\nimport { AxisLabelRadial } from \"../xy/axes/AxisLabelRadial\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { arc } from \"d3-shape\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $math from \"../../core/util/Math\";\r\n/**\r\n * Renderer for circular axes.\r\n */\r\nexport class AxisRendererCircular extends AxisRenderer {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A list of labels in the axis.\r\n         *\r\n         * `labels.template` can be used to configure labels.\r\n         *\r\n         * @default new ListTemplate<AxisLabelRadial>\r\n         */\r\n        Object.defineProperty(this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => AxisLabelRadial._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\r\n            }, [this.labels.template]))\r\n        });\r\n        /**\r\n         * A list of fills in the axis.\r\n         *\r\n         * `axisFills.template` can be used to configure axis fills.\r\n         *\r\n         * @default new ListTemplate<Slice>\r\n         */\r\n        Object.defineProperty(this, \"axisFills\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Slice._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"fill\"]), this.get(\"themeTags\", []))\r\n            }, [this.axisFills.template]))\r\n        });\r\n        Object.defineProperty(this, \"_fillGenerator\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: arc()\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"circular\"]);\r\n        super._afterNew();\r\n        this.setPrivateRaw(\"letter\", \"X\");\r\n        this.setRaw(\"position\", \"absolute\");\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"radius\") || this.isDirty(\"innerRadius\") || this.isDirty(\"startAngle\") || this.isDirty(\"endAngle\")) {\r\n            this.updateLayout();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLayout() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            const radius = chart.getPrivate(\"radius\", 0);\r\n            let r = $utils.relativeToValue(this.get(\"radius\", p100), radius);\r\n            if (r < 0) {\r\n                r = radius + r;\r\n            }\r\n            this.setPrivate(\"radius\", r);\r\n            let ir = $utils.relativeToValue(this.get(\"innerRadius\", chart.getPrivate(\"innerRadius\", 0)), radius) * chart.getPrivate(\"irModifyer\", 1);\r\n            if (ir < 0) {\r\n                ir = r + ir;\r\n            }\r\n            this.setPrivate(\"innerRadius\", ir);\r\n            let startAngle = this.get(\"startAngle\", chart.get(\"startAngle\", -90));\r\n            let endAngle = this.get(\"endAngle\", chart.get(\"endAngle\", 270));\r\n            this.setPrivate(\"startAngle\", startAngle);\r\n            this.setPrivate(\"endAngle\", endAngle);\r\n            this.set(\"draw\", (display) => {\r\n                const p0 = this.positionToPoint(0);\r\n                display.moveTo(p0.x, p0.y);\r\n                if (startAngle > endAngle) {\r\n                    [startAngle, endAngle] = [endAngle, startAngle];\r\n                }\r\n                display.arc(0, 0, r, startAngle * $math.RADIANS, endAngle * $math.RADIANS);\r\n            });\r\n            this.axis.markDirtySize();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateGrid(grid, position, endPosition) {\r\n        if (grid) {\r\n            if (position == null) {\r\n                position = 0;\r\n            }\r\n            let location = grid.get(\"location\", 0.5);\r\n            if (endPosition != null && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            let radius = this.getPrivate(\"radius\", 0);\r\n            let innerRadius = this.getPrivate(\"innerRadius\", 0);\r\n            let angle = this.positionToAngle(position);\r\n            this.toggleVisibility(grid, position, 0, 1);\r\n            if (radius != null) {\r\n                grid.set(\"draw\", (display) => {\r\n                    display.moveTo(innerRadius * $math.cos(angle), innerRadius * $math.sin(angle));\r\n                    display.lineTo(radius * $math.cos(angle), radius * $math.sin(angle));\r\n                });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Converts relative position to angle.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Angle\r\n     */\r\n    positionToAngle(position) {\r\n        const axis = this.axis;\r\n        const startAngle = this.getPrivate(\"startAngle\", 0);\r\n        const endAngle = this.getPrivate(\"endAngle\", 360);\r\n        const start = axis.get(\"start\", 0);\r\n        const end = axis.get(\"end\", 1);\r\n        let arc = (endAngle - startAngle) / (end - start);\r\n        let angle;\r\n        if (this.get(\"inversed\")) {\r\n            angle = startAngle + (end - position) * arc;\r\n        }\r\n        else {\r\n            angle = startAngle + (position - start) * arc;\r\n        }\r\n        return angle;\r\n    }\r\n    // do not delete\r\n    _handleOpposite() { }\r\n    /**\r\n     * Converts relative position to an X/Y coordinate.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Point\r\n     */\r\n    positionToPoint(position) {\r\n        const radius = this.getPrivate(\"radius\", 0);\r\n        const angle = this.positionToAngle(position);\r\n        return { x: radius * $math.cos(angle), y: radius * $math.sin(angle) };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLabel(label, position, endPosition, count) {\r\n        if (label) {\r\n            if (position == null) {\r\n                position = 0;\r\n            }\r\n            let location = 0.5;\r\n            if (count != null && count > 1) {\r\n                location = label.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = label.get(\"location\", location);\r\n            }\r\n            if (endPosition != null && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            const radius = this.getPrivate(\"radius\", 0);\r\n            const innerRadius = this.getPrivate(\"innerRadius\", 0);\r\n            const angle = this.positionToAngle(position);\r\n            label.setPrivate(\"radius\", radius);\r\n            label.setPrivate(\"innerRadius\", innerRadius);\r\n            label.set(\"labelAngle\", angle);\r\n            this.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    fillDrawMethod(fill, startAngle, endAngle) {\r\n        fill.set(\"draw\", (display) => {\r\n            if (startAngle == null) {\r\n                startAngle = this.getPrivate(\"startAngle\", 0);\r\n            }\r\n            if (endAngle == null) {\r\n                endAngle = this.getPrivate(\"endAngle\", 0);\r\n            }\r\n            const y0 = this.getPrivate(\"innerRadius\", 0);\r\n            const y1 = this.getPrivate(\"radius\", 0);\r\n            this._fillGenerator.context(display);\r\n            this._fillGenerator({ innerRadius: y0, outerRadius: y1, startAngle: (startAngle + 90) * $math.RADIANS, endAngle: (endAngle + 90) * $math.RADIANS });\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTick(tick, position, endPosition, count) {\r\n        if (tick) {\r\n            if (position == null) {\r\n                position = 0;\r\n            }\r\n            let location = 0.5;\r\n            if (count != null && count > 1) {\r\n                location = tick.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = tick.get(\"location\", location);\r\n            }\r\n            if (endPosition != null && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            let length = tick.get(\"length\", 0);\r\n            const inside = tick.get(\"inside\");\r\n            if (inside) {\r\n                length *= -1;\r\n            }\r\n            let radius = this.getPrivate(\"radius\", 0);\r\n            let angle = this.positionToAngle(position);\r\n            this.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\r\n            if (radius != null) {\r\n                tick.set(\"draw\", (display) => {\r\n                    display.moveTo(radius * $math.cos(angle), radius * $math.sin(angle));\r\n                    radius += length;\r\n                    display.lineTo(radius * $math.cos(angle), radius * $math.sin(angle));\r\n                });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateBullet(bullet, position, endPosition) {\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                if (position == null) {\r\n                    position = 0;\r\n                }\r\n                let location = bullet.get(\"location\", 0.5);\r\n                if (endPosition != null && endPosition != position) {\r\n                    position = position + (endPosition - position) * location;\r\n                }\r\n                let radius = this.getPrivate(\"radius\", 0);\r\n                let angle = this.positionToAngle(position);\r\n                this.toggleVisibility(sprite, position, 0, 1);\r\n                sprite.setAll({ rotation: angle, x: radius * $math.cos(angle), y: radius * $math.sin(angle) });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateFill(fill, position, endPosition) {\r\n        if (fill) {\r\n            if (position == null) {\r\n                position = 0;\r\n            }\r\n            if (endPosition == null) {\r\n                endPosition = 1;\r\n            }\r\n            let startAngle = this.fitAngle(this.positionToAngle(position));\r\n            let endAngle = this.fitAngle(this.positionToAngle(endPosition));\r\n            fill.setAll({ startAngle: startAngle, arc: endAngle - startAngle });\r\n            fill._setSoft(\"innerRadius\", this.getPrivate(\"innerRadius\"));\r\n            fill._setSoft(\"radius\", this.getPrivate(\"radius\"));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    fitAngle(angle) {\r\n        const startAngle = this.getPrivate(\"startAngle\", 0);\r\n        const endAngle = this.getPrivate(\"endAngle\", 0);\r\n        const minAngle = Math.min(startAngle, endAngle);\r\n        const maxAngle = Math.max(startAngle, endAngle);\r\n        if (angle < minAngle) {\r\n            angle = minAngle;\r\n        }\r\n        if (angle > maxAngle) {\r\n            angle = maxAngle;\r\n        }\r\n        return angle;\r\n    }\r\n    /**\r\n     * Returns axis length in pixels.\r\n     *\r\n     * @return Length\r\n     */\r\n    axisLength() {\r\n        return Math.abs(this.getPrivate(\"radius\", 0) * Math.PI * 2 * (this.getPrivate(\"endAngle\", 360) - this.getPrivate(\"startAngle\", 0)) / 360);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    positionTooltip(tooltip, position) {\r\n        let radius = this.getPrivate(\"radius\", 0);\r\n        const angle = this.positionToAngle(position);\r\n        //return tooltip.set(\"pointTo\", this.axis._display.toGlobal({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) }));\r\n        this._positionTooltip(tooltip, { x: radius * $math.cos(angle), y: radius * $math.sin(angle) });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltipBounds(_tooltip) {\r\n    }\r\n}\r\nObject.defineProperty(AxisRendererCircular, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisRendererCircular\"\r\n});\r\nObject.defineProperty(AxisRendererCircular, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: AxisRenderer.classNames.concat([AxisRendererCircular.className])\r\n});\r\n//# sourceMappingURL=AxisRendererCircular.js.map","import { AxisRenderer } from \"../xy/axes/AxisRenderer\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { AxisLabelRadial } from \"../xy/axes/AxisLabelRadial\";\r\nimport { arc } from \"d3-shape\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\n/**\r\n * Renderer for radial axes.\r\n */\r\nexport class AxisRendererRadial extends AxisRenderer {\r\n    constructor() {\r\n        super(...arguments);\r\n        Object.defineProperty(this, \"_fillGenerator\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: arc()\r\n        });\r\n        /**\r\n         * A [[TemplateList]] with all the labels attached to the axis.\r\n         *\r\n         * `labels.template` can be used to configure appearance of the labels.\r\n         *\r\n         * @default new ListTemplate<AxisLabelRadial>\r\n         */\r\n        Object.defineProperty(this, \"labels\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => AxisLabelRadial._new(this._root, {\r\n                themeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\r\n            }, [this.labels.template]))\r\n        });\r\n    }\r\n    _afterNew() {\r\n        this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"radial\"]);\r\n        super._afterNew();\r\n        this.setPrivate(\"letter\", \"Y\");\r\n        this.setRaw(\"position\", \"absolute\");\r\n    }\r\n    _changed() {\r\n        super._changed();\r\n        if (this.isDirty(\"radius\") || this.isDirty(\"innerRadius\") || this.isDirty(\"startAngle\") || this.isDirty(\"endAngle\")) {\r\n            this.updateLayout();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processAxis() {\r\n        super.processAxis();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLayout() {\r\n        const chart = this.chart;\r\n        if (chart) {\r\n            const radius = chart.getPrivate(\"radius\", 0);\r\n            let r = $utils.relativeToValue(this.get(\"radius\", p100), radius);\r\n            let ir = $utils.relativeToValue(this.get(\"innerRadius\", chart.getPrivate(\"innerRadius\", 0)), radius) * chart.getPrivate(\"irModifyer\", 1);\r\n            if (ir < 0) {\r\n                ir = r + ir;\r\n            }\r\n            this.setPrivate(\"radius\", r);\r\n            this.setPrivate(\"innerRadius\", ir);\r\n            let startAngle = this.get(\"startAngle\", chart.get(\"startAngle\", -90));\r\n            let endAngle = this.get(\"endAngle\", chart.get(\"endAngle\", 270));\r\n            this.setPrivate(\"startAngle\", startAngle);\r\n            this.setPrivate(\"endAngle\", endAngle);\r\n            const axisAngle = this.get(\"axisAngle\", 0);\r\n            this.set(\"draw\", (display) => {\r\n                display.moveTo(ir * $math.cos(axisAngle), ir * $math.sin(axisAngle));\r\n                display.lineTo(r * $math.cos(axisAngle), r * $math.sin(axisAngle));\r\n            });\r\n            this.axis.markDirtySize();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateGrid(grid, position, endPosition) {\r\n        if (grid) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = grid.get(\"location\", 0.5);\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            let radius = this.positionToCoordinate(position) + this.getPrivate(\"innerRadius\", 0);\r\n            this.toggleVisibility(grid, position, 0, 1);\r\n            if ($type.isNumber(radius)) {\r\n                grid.set(\"draw\", (display) => {\r\n                    let startAngle = this.getPrivate(\"startAngle\", 0) * $math.RADIANS;\r\n                    let endAngle = this.getPrivate(\"endAngle\", 0) * $math.RADIANS;\r\n                    display.arc(0, 0, Math.max(0, radius), Math.min(startAngle, endAngle), Math.max(startAngle, endAngle));\r\n                });\r\n            }\r\n        }\r\n    }\r\n    // do not delete\r\n    _handleOpposite() { }\r\n    /**\r\n     * Converts relative position to X/Y point.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Point\r\n     */\r\n    positionToPoint(position) {\r\n        const innerRadius = this.getPrivate(\"innerRadius\", 0);\r\n        const radius = this.positionToCoordinate(position) + innerRadius;\r\n        const axisAngle = this.get(\"axisAngle\", 0);\r\n        return { x: radius * $math.cos(axisAngle), y: radius * $math.sin(axisAngle) };\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateLabel(label, position, endPosition, count) {\r\n        if (label) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = label.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = label.get(\"location\", location);\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            const point = this.positionToPoint(position);\r\n            let radius = Math.hypot(point.x, point.y);\r\n            label.setPrivate(\"radius\", radius);\r\n            label.setPrivate(\"innerRadius\", radius);\r\n            label.set(\"labelAngle\", this.get(\"axisAngle\"));\r\n            this.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    fillDrawMethod(fill, y0, y1) {\r\n        fill.set(\"draw\", (display) => {\r\n            y0 = Math.max(0, y0);\r\n            y1 = Math.max(0, y1);\r\n            this._fillGenerator.context(display);\r\n            let startAngle = (this.getPrivate(\"startAngle\", 0) + 90) * $math.RADIANS;\r\n            let endAngle = (this.getPrivate(\"endAngle\", 0) + 90) * $math.RADIANS;\r\n            if (endAngle < startAngle) {\r\n                [startAngle, endAngle] = [endAngle, startAngle];\r\n            }\r\n            this._fillGenerator({ innerRadius: y0, outerRadius: y1, startAngle: startAngle, endAngle: endAngle });\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTick(tick, position, endPosition, count) {\r\n        if (tick) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            let location = 0.5;\r\n            if ($type.isNumber(count) && count > 1) {\r\n                location = tick.get(\"multiLocation\", location);\r\n            }\r\n            else {\r\n                location = tick.get(\"location\", location);\r\n            }\r\n            if ($type.isNumber(endPosition) && endPosition != position) {\r\n                position = position + (endPosition - position) * location;\r\n            }\r\n            const point = this.positionToPoint(position);\r\n            tick.set(\"x\", point.x);\r\n            tick.set(\"y\", point.y);\r\n            let length = tick.get(\"length\", 0);\r\n            const inside = tick.get(\"inside\");\r\n            if (inside) {\r\n                length *= -1;\r\n            }\r\n            const axisAngle = this.get(\"axisAngle\", 0) + 90;\r\n            tick.set(\"draw\", (display) => {\r\n                display.moveTo(0, 0);\r\n                display.lineTo(length * $math.cos(axisAngle), length * $math.sin(axisAngle));\r\n            });\r\n            this.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateBullet(bullet, position, endPosition) {\r\n        if (bullet) {\r\n            const sprite = bullet.get(\"sprite\");\r\n            if (sprite) {\r\n                if (!$type.isNumber(position)) {\r\n                    position = 0;\r\n                }\r\n                let location = bullet.get(\"location\", 0.5);\r\n                if ($type.isNumber(endPosition) && endPosition != position) {\r\n                    position = position + (endPosition - position) * location;\r\n                }\r\n                const point = this.positionToPoint(position);\r\n                sprite.setAll({ x: point.x, y: point.y });\r\n                this.toggleVisibility(sprite, position, 0, 1);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateFill(fill, position, endPosition) {\r\n        if (fill) {\r\n            if (!$type.isNumber(position)) {\r\n                position = 0;\r\n            }\r\n            if (!$type.isNumber(endPosition)) {\r\n                endPosition = 1;\r\n            }\r\n            const innerRadius = this.getPrivate(\"innerRadius\", 0);\r\n            let y0 = this.positionToCoordinate(position) + innerRadius;\r\n            let y1 = this.positionToCoordinate(endPosition) + innerRadius;\r\n            this.fillDrawMethod(fill, y0, y1);\r\n        }\r\n    }\r\n    /**\r\n     * Returns axis length in pixels.\r\n     *\r\n     * @return Length\r\n     */\r\n    axisLength() {\r\n        return this.getPrivate(\"radius\", 0) - this.getPrivate(\"innerRadius\", 0);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    updateTooltipBounds(_tooltip) {\r\n    }\r\n    /**\r\n     * Converts relative position to pixels.\r\n     *\r\n     * @param   position  Position\r\n     * @return            Pixels\r\n     */\r\n    positionToCoordinate(position) {\r\n        if (this._inversed) {\r\n            position = Math.min(this._end, position);\r\n            return (this._end - position) * this._axisLength;\r\n        }\r\n        else {\r\n            position = Math.max(this._start, position);\r\n            return (position - this._start) * this._axisLength;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    positionTooltip(tooltip, position) {\r\n        let radius = this.getPrivate(\"innerRadius\", 0) + this.positionToCoordinate(position);\r\n        const angle = this.get(\"axisAngle\", 0);\r\n        //return tooltip.set(\"pointTo\", this.axis._display.toGlobal({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) }));\r\n        this._positionTooltip(tooltip, { x: radius * $math.cos(angle), y: radius * $math.sin(angle) });\r\n    }\r\n}\r\nObject.defineProperty(AxisRendererRadial, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"AxisRendererRadial\"\r\n});\r\nObject.defineProperty(AxisRendererRadial, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: AxisRenderer.classNames.concat([AxisRendererRadial.className])\r\n});\r\n//# sourceMappingURL=AxisRendererRadial.js.map","import { BaseColumnSeries } from \"../xy/series/BaseColumnSeries\";\r\nimport { Slice } from \"../../core/render/Slice\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n/**\r\n * A column series for use in a [[RadarChart]].\r\n *\r\n * @important\r\n */\r\nexport class RadarColumnSeries extends BaseColumnSeries {\r\n    constructor() {\r\n        super(...arguments);\r\n        /**\r\n         * A [[TemplateList]] of all columns in series.\r\n         *\r\n         * `columns.template` can be used to set default settings for all columns,\r\n         * or to change on existing ones.\r\n         *\r\n         * @default new ListTemplate<Slice>\r\n         */\r\n        Object.defineProperty(this, \"columns\", {\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true,\r\n            value: new ListTemplate(Template.new({}), () => Slice._new(this._root, {\r\n                position: \"absolute\",\r\n                themeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"radar\", \"series\", \"column\"])\r\n            }, [this.columns.template]))\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    makeColumn(dataItem, listTemplate) {\r\n        const column = this.mainContainer.children.push(listTemplate.make());\r\n        column._setDataItem(dataItem);\r\n        listTemplate.push(column);\r\n        return column;\r\n    }\r\n    _afterNew() {\r\n        super._afterNew();\r\n        this.set(\"maskContent\", false);\r\n        this.bulletsContainer.set(\"maskContent\", false);\r\n        this.bulletsContainer.set(\"mask\", Graphics.new(this._root, {}));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    getPoint(positionX, positionY) {\r\n        const yAxis = this.get(\"yAxis\");\r\n        const xAxis = this.get(\"xAxis\");\r\n        const rendererY = xAxis.get(\"renderer\");\r\n        const radius = yAxis.get(\"renderer\").positionToCoordinate(positionY) + rendererY.getPrivate(\"innerRadius\", 0);\r\n        const rendererX = xAxis.get(\"renderer\");\r\n        const angle = rendererX.positionToAngle(positionX);\r\n        return { x: radius * $math.cos(angle), y: radius * $math.sin(angle) };\r\n    }\r\n    _updateSeriesGraphics(dataItem, graphics, l, r, t, b) {\r\n        graphics.setPrivate(\"visible\", true);\r\n        const xAxis = this.get(\"xAxis\");\r\n        const yAxis = this.get(\"yAxis\");\r\n        const rendererX = xAxis.get(\"renderer\");\r\n        const rendererY = yAxis.get(\"renderer\");\r\n        const axisInnerRadius = rendererY.getPrivate(\"innerRadius\", 0);\r\n        const startAngle = rendererX.fitAngle(rendererX.positionToAngle(l));\r\n        const endAngle = rendererX.fitAngle(rendererX.positionToAngle(r));\r\n        let innerRadius = rendererY.positionToCoordinate(b) + axisInnerRadius;\r\n        let radius = rendererY.positionToCoordinate(t) + axisInnerRadius;\r\n        const slice = graphics;\r\n        dataItem.setRaw(\"startAngle\", startAngle);\r\n        dataItem.setRaw(\"endAngle\", endAngle);\r\n        dataItem.setRaw(\"innerRadius\", innerRadius);\r\n        dataItem.setRaw(\"radius\", radius);\r\n        let axisStartAngle = 0;\r\n        let axisEndAngle = 360;\r\n        if (yAxis == this.get(\"baseAxis\")) {\r\n            axisStartAngle = rendererY.getPrivate(\"startAngle\", 0);\r\n            axisEndAngle = rendererY.getPrivate(\"endAngle\", 360);\r\n        }\r\n        else {\r\n            axisStartAngle = rendererX.getPrivate(\"startAngle\", 0);\r\n            axisEndAngle = rendererX.getPrivate(\"endAngle\", 360);\r\n        }\r\n        if (axisStartAngle > axisEndAngle) {\r\n            [axisStartAngle, axisEndAngle] = [axisEndAngle, axisStartAngle];\r\n        }\r\n        if ((endAngle <= axisStartAngle) || (startAngle >= axisEndAngle) || (radius <= axisInnerRadius && innerRadius <= axisInnerRadius)) {\r\n            slice.setPrivate(\"visible\", false);\r\n        }\r\n        slice.setAll({ innerRadius, radius, startAngle, arc: endAngle - startAngle });\r\n    }\r\n    _shouldInclude(position) {\r\n        const xAxis = this.get(\"xAxis\");\r\n        if (position < xAxis.get(\"start\") || position > xAxis.get(\"end\")) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    _shouldShowBullet(positionX, _positionY) {\r\n        const xAxis = this.get(\"xAxis\");\r\n        if (positionX < xAxis.get(\"start\") || positionX > xAxis.get(\"end\")) {\r\n            return false;\r\n        }\r\n        return this._showBullets;\r\n    }\r\n    _positionBullet(bullet) {\r\n        let sprite = bullet.get(\"sprite\");\r\n        if (sprite) {\r\n            const dataItem = sprite.dataItem;\r\n            const locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\r\n            const locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\r\n            const series = dataItem.component;\r\n            const xAxis = series.get(\"xAxis\");\r\n            const yAxis = series.get(\"yAxis\");\r\n            const positionX = xAxis.getDataItemPositionX(dataItem, series._xField, locationX, series.get(\"vcx\", 1));\r\n            const positionY = yAxis.getDataItemPositionY(dataItem, series._yField, locationY, series.get(\"vcy\", 1));\r\n            const startAngle = dataItem.get(\"startAngle\", 0);\r\n            const endAngle = dataItem.get(\"endAngle\", 0);\r\n            const radius = dataItem.get(\"radius\", 0);\r\n            const innerRadius = dataItem.get(\"innerRadius\", 0);\r\n            if (series._shouldShowBullet(positionX, positionY)) {\r\n                sprite.setPrivate(\"visible\", true);\r\n                const angle = startAngle + (endAngle - startAngle) * locationX;\r\n                const r = innerRadius + (radius - innerRadius) * locationY;\r\n                sprite.set(\"x\", $math.cos(angle) * r);\r\n                sprite.set(\"y\", $math.sin(angle) * r);\r\n            }\r\n            else {\r\n                sprite.setPrivate(\"visible\", false);\r\n            }\r\n        }\r\n    }\r\n    _handleMaskBullets() {\r\n    }\r\n    _processAxisRange(axisRange) {\r\n        super._processAxisRange(axisRange);\r\n        axisRange.columns = new ListTemplate(Template.new({}), () => Slice._new(this._root, {\r\n            position: \"absolute\",\r\n            themeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"radar\", \"series\", \"column\"]),\r\n        }, [this.columns.template, axisRange.columns.template]));\r\n    }\r\n}\r\nObject.defineProperty(RadarColumnSeries, \"className\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: \"RadarColumnSeries\"\r\n});\r\nObject.defineProperty(RadarColumnSeries, \"classNames\", {\r\n    enumerable: true,\r\n    configurable: true,\r\n    writable: true,\r\n    value: BaseColumnSeries.classNames.concat([RadarColumnSeries.className])\r\n});\r\n//# sourceMappingURL=RadarColumnSeries.js.map","<template>\n  <div class=\"myChart gauge\" ref=\"chartdiv\" :style=\"containerSize\"></div>\n</template>\n\n<script>\nimport * as am5 from '@amcharts/amcharts5';\nimport * as am5xy from \"@amcharts/amcharts5/xy\";\nimport * as am5radar from \"@amcharts/amcharts5/radar\";\nimport am5themes_Animated from '@amcharts/amcharts5/themes/Animated';\n\nexport default {\n  name: 'ChartView',\n  data() {\n    return {}\n  },\n  props: {\n    containerSize: {\n      type: Object,\n      required: true\n    }\n  },\n  mounted() {\n    let root = am5.Root.new(this.$refs.chartdiv);\n\n    root.setThemes([am5themes_Animated.new(root)]);\n\n\n    let chart = root.container.children.push(\n      am5radar.RadarChart.new(root, {\n        panX: false,\n        panY: false,\n        wheelX: 'panX',\n        wheelY: 'zoomX',\n        radius: am5.percent(70),\n        innerRadius: am5.percent(40),\n        startAngle: -90,\n        endAngle: 270,\n      })\n    );\n\n    let data = [\n      {\n        category: 'Alpha',\n        value: 80,\n        full: 100,\n        columnSettings: {\n          fill: chart.get('colors').getIndex(0)\n        }\n      },\n      {\n        category: 'Bravo',\n        value: 60,\n        full: 100,\n        columnSettings: {\n          fill: chart.get('colors').getIndex(1)\n        }\n      },\n      {\n        category: 'Charlie',\n        value: 70,\n        full: 100,\n        columnSettings: {\n          fill: chart.get('colors').getIndex(2)\n        }\n      },\n    ];\n\n    let xRenderer = am5radar.AxisRendererCircular.new(root, {});\n\n    xRenderer.labels.template.setAll({\n      radius: 10\n    });\n\n    xRenderer.grid.template.setAll({\n      forceHidden: true\n    });\n\n    let xAxis = chart.xAxes.push(am5xy.ValueAxis.new(root, {\n      renderer: xRenderer,\n      min: 0,\n      max: 100,\n      strictMinMax: true,\n      numberFormat: \"#'%'\",\n      tooltip: am5.Tooltip.new(root, {})\n    }));\n\n    let yRenderer = am5radar.AxisRendererRadial.new(root, {\n      minGridDistance: 20\n    });\n\n    yRenderer.grid.template.setAll({\n      forceHidden: true\n    });\n\n    let yAxis = chart.yAxes.push(am5xy.CategoryAxis.new(root, {\n      categoryField: \"category\",\n      renderer: yRenderer\n    }));\n\n    yRenderer.labels.template.setAll({\n      centerX: am5.p100,\n      fontWeight: \"500\",\n      fontSize: 18,\n      templateField: \"columnSettings\",\n      // visible: false\n    });\n\n\n    yAxis.data.setAll(data);\n\n    let series1 = chart.series.push(am5radar.RadarColumnSeries.new(root, {\n      xAxis: xAxis,\n      yAxis: yAxis,\n      clustered: false,\n      valueXField: \"full\",\n      categoryYField: \"category\",\n      // fill: am5.color(0xffffff),\n      fill: root.interfaceColors.get(\"alternativeBackground\")\n      // legendLabelText: \"[{fill}]{category}{/}\",\n      // legendValueText: \"[bold {fill}]{value}[/]\",\n    }));\n\n    series1.columns.template.setAll({\n      width: am5.p100,\n      fillOpacity: 0.08,\n      strokeOpacity: 0,\n      cornerRadius: 20\n    });\n\n    series1.data.setAll(data);\n\n    let series2 = chart.series.push(am5radar.RadarColumnSeries.new(root, {\n      xAxis: xAxis,\n      yAxis: yAxis,\n      clustered: false,\n      valueXField: \"value\",\n      categoryYField: \"category\"\n    }));\n\n    series2.columns.template.setAll({\n      width: am5.p100,\n      strokeOpacity: 0,\n      tooltipText: \"[bold]{category}[/]: {valueX}%\",\n      cornerRadius: 20,\n      templateField: \"columnSettings\"\n    });\n\n    series2.data.setAll(data);\n\n    // Add legend\n    // let legend = chart.children.push(am5.Legend.new(root, {\n    //   centerY: am5.percent(50),\n    //   y: am5.percent(50),\n    //   layout: root.verticalLayout\n    // }));\n    //\n    // legend.data.setAll(series.dataItems)\n    //\n    // series.slices.template.setAll({\n    //   strokeOpacity: 0.5,\n    //   stroke: am5.color(0xffffff),\n    //   strokeWidth: 2,\n    //   // tooltipText: ''\n    // })\n    //\n    // series.slices.template.states.create('active', {\n    //   shiftRadius: 20,\n    //   stroke: am5.color(0xffffff),\n    //   strokeWidth: 5\n    // })\n    //\n    // series.labels.template.setAll({\n    //   // fill: am5.color(0xffffff),\n    //   text: \"{category}\",\n    //   radius: 10,\n    //   // inside: true,\n    //   // textType: 'circular'\n    // })\n    //\n    // series.labels.template.set(\"visible\", false)\n    // series.ticks.template.set(\"visible\", false)\n\n\n\n\n\n    series1.appear(1000);\n    series2.appear(1000);\n    chart.appear(1000, 100);\n\n    this.root = root;\n\n  },\n  beforeDestroy() {\n    if (this.root) {\n      this.root.dispose();\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GaugeCharts.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GaugeCharts.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GaugeCharts.vue?vue&type=template&id=ceca67f4&\"\nimport script from \"./GaugeCharts.vue?vue&type=script&lang=js&\"\nexport * from \"./GaugeCharts.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"contents-view\">\n    <div class=\"chart-view\">\n      <XYCharts :container-size=\"container\" />\n    </div>\n    <div class=\"chart-view\">\n      <PieCharts  :container-size=\"container_s\" />\n    </div>\n    <div class=\"chart-view\">\n      <GaugeCharts  :container-size=\"container_s\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport XYCharts from \"./XYCharts\";\nimport PieCharts from \"./PieCharts\";\nimport GaugeCharts from \"./GaugeCharts\";\n\nexport default {\n  name: 'ChartsView',\n  components: {\n    XYCharts,\n    PieCharts,\n    GaugeCharts\n  },\n  data () {\n    return {\n      container: {\n        width: '1024px',\n        height: '500px'\n      },\n      container_s: {\n        width: '600px',\n        height: '500px'\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container-view {\n  height: 100%;\n}\n.chart-view {\n  width: 1024px;\n  height: 500px;\n\n  margin-bottom: 30px;\n  &> div {\n    background-color: #f2f2f2;\n  }\n}\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChartsView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChartsView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChartsView.vue?vue&type=template&id=5ada7728&scoped=true&\"\nimport script from \"./ChartsView.vue?vue&type=script&lang=js&\"\nexport * from \"./ChartsView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ChartsView.vue?vue&type=style&index=0&id=5ada7728&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5ada7728\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChartsView.vue?vue&type=style&index=0&id=5ada7728&prod&lang=scss&scoped=true&\""],"sourceRoot":""}